Index.PACKAGES = {"com.tersesystems.blindsight.api" : [{"name" : "com.tersesystems.blindsight.api.Arguments", "shortDescription" : "", "object" : "com\/tersesystems\/blindsight\/api\/Arguments$.html", "members_class" : [{"label" : "toStatement", "tail" : "(): Statement", "member" : "com.tersesystems.blindsight.api.Arguments.toStatement", "link" : "com\/tersesystems\/blindsight\/api\/Arguments.html#toStatement:com.tersesystems.blindsight.api.Statement", "kind" : "def"}, {"label" : "++", "tail" : "(args: Arguments): Arguments", "member" : "com.tersesystems.blindsight.api.Arguments.++", "link" : "com\/tersesystems\/blindsight\/api\/Arguments.html#++(args:com.tersesystems.blindsight.api.Arguments):com.tersesystems.blindsight.api.Arguments", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "com.tersesystems.blindsight.api.Arguments.isEmpty", "link" : "com\/tersesystems\/blindsight\/api\/Arguments.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "asArray", "tail" : "(): Array[Any]", "member" : "com.tersesystems.blindsight.api.Arguments.asArray", "link" : "com\/tersesystems\/blindsight\/api\/Arguments.html#asArray:Array[Any]", "kind" : "def"}, {"label" : "placeholders", "tail" : "(): String", "member" : "com.tersesystems.blindsight.api.Arguments.placeholders", "link" : "com\/tersesystems\/blindsight\/api\/Arguments.html#placeholders:String", "kind" : "def"}, {"member" : "com.tersesystems.blindsight.api.Arguments#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/api\/Arguments.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/api\/Arguments.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/api\/Arguments.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/api\/Arguments.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/api\/Arguments.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/api\/Arguments.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/api\/Arguments.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/Arguments.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/Arguments.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/Arguments.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/api\/Arguments.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/api\/Arguments.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/api\/Arguments.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/api\/Arguments.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/api\/Arguments.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/api\/Arguments.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/api\/Arguments.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/Arguments.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/Arguments.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(iterable: IterableOnce[AsArguments]): Arguments", "member" : "com.tersesystems.blindsight.api.Arguments.apply", "link" : "com\/tersesystems\/blindsight\/api\/Arguments$.html#apply(iterable:IterableOnce[com.tersesystems.blindsight.api.AsArguments]):com.tersesystems.blindsight.api.Arguments", "kind" : "def"}, {"label" : "apply", "tail" : "(els: AsArguments*): Arguments", "member" : "com.tersesystems.blindsight.api.Arguments.apply", "link" : "com\/tersesystems\/blindsight\/api\/Arguments$.html#apply(els:com.tersesystems.blindsight.api.AsArguments*):com.tersesystems.blindsight.api.Arguments", "kind" : "def"}, {"label" : "empty", "tail" : "(): Arguments", "member" : "com.tersesystems.blindsight.api.Arguments.empty", "link" : "com\/tersesystems\/blindsight\/api\/Arguments$.html#empty:com.tersesystems.blindsight.api.Arguments", "kind" : "def"}, {"label" : "argumentsToArguments", "tail" : ": ToArguments[Arguments]", "member" : "com.tersesystems.blindsight.api.Arguments.argumentsToArguments", "link" : "com\/tersesystems\/blindsight\/api\/Arguments$.html#argumentsToArguments:com.tersesystems.blindsight.api.ToArguments[com.tersesystems.blindsight.api.Arguments]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/api\/Arguments$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/api\/Arguments$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/api\/Arguments$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/api\/Arguments$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/api\/Arguments$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/api\/Arguments$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/api\/Arguments$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/Arguments$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/Arguments$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/Arguments$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/api\/Arguments$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/api\/Arguments$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/api\/Arguments$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/api\/Arguments$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/api\/Arguments$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/api\/Arguments$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/api\/Arguments$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/Arguments$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/Arguments$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/tersesystems\/blindsight\/api\/Arguments.html", "kind" : "class"}, {"name" : "com.tersesystems.blindsight.api.AsArguments", "shortDescription" : "", "object" : "com\/tersesystems\/blindsight\/api\/AsArguments$.html", "members_class" : [{"member" : "com.tersesystems.blindsight.api.AsArguments#<init>", "error" : "unsupported entity"}, {"label" : "arguments", "tail" : ": Arguments", "member" : "com.tersesystems.blindsight.api.AsArguments.arguments", "link" : "com\/tersesystems\/blindsight\/api\/AsArguments.html#arguments:com.tersesystems.blindsight.api.Arguments", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "com\/tersesystems\/blindsight\/api\/AsArguments.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "com\/tersesystems\/blindsight\/api\/AsArguments.html###():Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/AsArguments.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/AsArguments.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "com\/tersesystems\/blindsight\/api\/AsArguments.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "com\/tersesystems\/blindsight\/api\/AsArguments.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "com\/tersesystems\/blindsight\/api\/AsArguments.html#==(x$1:Any):Boolean", "kind" : "final def"}], "members_object" : [{"label" : "toAsArguments", "tail" : "(a: A)(arg0: ToArguments[A]): AsArguments", "member" : "com.tersesystems.blindsight.api.AsArguments.toAsArguments", "link" : "com\/tersesystems\/blindsight\/api\/AsArguments$.html#toAsArguments[A](a:A)(implicitevidence$1:com.tersesystems.blindsight.api.ToArguments[A]):com.tersesystems.blindsight.api.AsArguments", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/api\/AsArguments$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/api\/AsArguments$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/api\/AsArguments$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/api\/AsArguments$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/api\/AsArguments$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/api\/AsArguments$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/api\/AsArguments$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/AsArguments$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/AsArguments$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/AsArguments$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/api\/AsArguments$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/api\/AsArguments$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/api\/AsArguments$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/api\/AsArguments$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/api\/AsArguments$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/api\/AsArguments$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/api\/AsArguments$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/AsArguments$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/AsArguments$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/tersesystems\/blindsight\/api\/AsArguments.html", "kind" : "class"}, {"name" : "com.tersesystems.blindsight.api.LoggerResolver", "object" : "com\/tersesystems\/blindsight\/api\/LoggerResolver$.html", "members_object" : [{"label" : "apply", "tail" : "(f: (T) => org.slf4j.Logger): LoggerResolver[T]", "member" : "com.tersesystems.blindsight.api.LoggerResolver.apply", "link" : "com\/tersesystems\/blindsight\/api\/LoggerResolver$.html#apply[T](f:T=>org.slf4j.Logger):com.tersesystems.blindsight.api.LoggerResolver[T]", "kind" : "def"}, {"label" : "loggerToResolver", "tail" : ": LoggerResolver[org.slf4j.Logger]", "member" : "com.tersesystems.blindsight.api.LowPriorityLoggerResolverImplicits.loggerToResolver", "link" : "com\/tersesystems\/blindsight\/api\/LoggerResolver$.html#loggerToResolver:com.tersesystems.blindsight.api.LoggerResolver[org.slf4j.Logger]", "kind" : "implicit val"}, {"label" : "classToResolver", "tail" : "(): LoggerResolver[Class[T]]", "member" : "com.tersesystems.blindsight.api.LowPriorityLoggerResolverImplicits.classToResolver", "link" : "com\/tersesystems\/blindsight\/api\/LoggerResolver$.html#classToResolver[T]:com.tersesystems.blindsight.api.LoggerResolver[Class[T]]", "kind" : "implicit def"}, {"label" : "stringToResolver", "tail" : ": LoggerResolver[String]", "member" : "com.tersesystems.blindsight.api.LowPriorityLoggerResolverImplicits.stringToResolver", "link" : "com\/tersesystems\/blindsight\/api\/LoggerResolver$.html#stringToResolver:com.tersesystems.blindsight.api.LoggerResolver[String]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/api\/LoggerResolver$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/api\/LoggerResolver$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/api\/LoggerResolver$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/api\/LoggerResolver$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/api\/LoggerResolver$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/api\/LoggerResolver$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/api\/LoggerResolver$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/LoggerResolver$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/LoggerResolver$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/LoggerResolver$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/api\/LoggerResolver$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/api\/LoggerResolver$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/api\/LoggerResolver$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/api\/LoggerResolver$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/api\/LoggerResolver$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/api\/LoggerResolver$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/api\/LoggerResolver$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/LoggerResolver$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/LoggerResolver$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/tersesystems\/blindsight\/api\/LoggerResolver.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/api\/LoggerResolver.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/api\/LoggerResolver.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/api\/LoggerResolver.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/api\/LoggerResolver.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/api\/LoggerResolver.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/api\/LoggerResolver.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/api\/LoggerResolver.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/LoggerResolver.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/LoggerResolver.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/LoggerResolver.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/api\/LoggerResolver.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/api\/LoggerResolver.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/api\/LoggerResolver.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/api\/LoggerResolver.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/api\/LoggerResolver.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/api\/LoggerResolver.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/api\/LoggerResolver.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/LoggerResolver.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/LoggerResolver.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "resolveLogger", "tail" : "(instance: T): org.slf4j.Logger", "member" : "com.tersesystems.blindsight.api.LoggerResolver.resolveLogger", "link" : "com\/tersesystems\/blindsight\/api\/LoggerResolver.html#resolveLogger(instance:T):org.slf4j.Logger", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "com.tersesystems.blindsight.api.LowPriorityLoggerResolverImplicits", "trait" : "com\/tersesystems\/blindsight\/api\/LowPriorityLoggerResolverImplicits.html", "kind" : "trait", "members_trait" : [{"label" : "loggerToResolver", "tail" : ": LoggerResolver[org.slf4j.Logger]", "member" : "com.tersesystems.blindsight.api.LowPriorityLoggerResolverImplicits.loggerToResolver", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityLoggerResolverImplicits.html#loggerToResolver:com.tersesystems.blindsight.api.LoggerResolver[org.slf4j.Logger]", "kind" : "implicit val"}, {"label" : "classToResolver", "tail" : "(): LoggerResolver[Class[T]]", "member" : "com.tersesystems.blindsight.api.LowPriorityLoggerResolverImplicits.classToResolver", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityLoggerResolverImplicits.html#classToResolver[T]:com.tersesystems.blindsight.api.LoggerResolver[Class[T]]", "kind" : "implicit def"}, {"label" : "stringToResolver", "tail" : ": LoggerResolver[String]", "member" : "com.tersesystems.blindsight.api.LowPriorityLoggerResolverImplicits.stringToResolver", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityLoggerResolverImplicits.html#stringToResolver:com.tersesystems.blindsight.api.LoggerResolver[String]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityLoggerResolverImplicits.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityLoggerResolverImplicits.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityLoggerResolverImplicits.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityLoggerResolverImplicits.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityLoggerResolverImplicits.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityLoggerResolverImplicits.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityLoggerResolverImplicits.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityLoggerResolverImplicits.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityLoggerResolverImplicits.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityLoggerResolverImplicits.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityLoggerResolverImplicits.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityLoggerResolverImplicits.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityLoggerResolverImplicits.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityLoggerResolverImplicits.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityLoggerResolverImplicits.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityLoggerResolverImplicits.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityLoggerResolverImplicits.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityLoggerResolverImplicits.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityLoggerResolverImplicits.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "com.tersesystems.blindsight.api.LowPriorityToArguments", "trait" : "com\/tersesystems\/blindsight\/api\/LowPriorityToArguments.html", "kind" : "trait", "members_trait" : [{"label" : "seqArguments", "tail" : "(): ToArguments[Seq[AsArguments]]", "member" : "com.tersesystems.blindsight.api.LowPriorityToArguments.seqArguments", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToArguments.html#seqArguments:com.tersesystems.blindsight.api.ToArguments[Seq[com.tersesystems.blindsight.api.AsArguments]]", "kind" : "implicit def"}, {"label" : "throwableToArguments", "tail" : ": ToArguments[Throwable]", "member" : "com.tersesystems.blindsight.api.LowPriorityToArguments.throwableToArguments", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToArguments.html#throwableToArguments:com.tersesystems.blindsight.api.ToArguments[Throwable]", "kind" : "implicit val"}, {"label" : "doubleToArguments", "tail" : ": ToArguments[Double]", "member" : "com.tersesystems.blindsight.api.LowPriorityToArguments.doubleToArguments", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToArguments.html#doubleToArguments:com.tersesystems.blindsight.api.ToArguments[Double]", "kind" : "implicit val"}, {"label" : "floatToArguments", "tail" : ": ToArguments[Float]", "member" : "com.tersesystems.blindsight.api.LowPriorityToArguments.floatToArguments", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToArguments.html#floatToArguments:com.tersesystems.blindsight.api.ToArguments[Float]", "kind" : "implicit val"}, {"label" : "longToArguments", "tail" : ": ToArguments[Long]", "member" : "com.tersesystems.blindsight.api.LowPriorityToArguments.longToArguments", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToArguments.html#longToArguments:com.tersesystems.blindsight.api.ToArguments[Long]", "kind" : "implicit val"}, {"label" : "intToArguments", "tail" : ": ToArguments[Int]", "member" : "com.tersesystems.blindsight.api.LowPriorityToArguments.intToArguments", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToArguments.html#intToArguments:com.tersesystems.blindsight.api.ToArguments[Int]", "kind" : "implicit val"}, {"label" : "shortToArguments", "tail" : ": ToArguments[Short]", "member" : "com.tersesystems.blindsight.api.LowPriorityToArguments.shortToArguments", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToArguments.html#shortToArguments:com.tersesystems.blindsight.api.ToArguments[Short]", "kind" : "implicit val"}, {"label" : "booleanToArguments", "tail" : ": ToArguments[Boolean]", "member" : "com.tersesystems.blindsight.api.LowPriorityToArguments.booleanToArguments", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToArguments.html#booleanToArguments:com.tersesystems.blindsight.api.ToArguments[Boolean]", "kind" : "implicit val"}, {"label" : "stringToArguments", "tail" : ": ToArguments[String]", "member" : "com.tersesystems.blindsight.api.LowPriorityToArguments.stringToArguments", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToArguments.html#stringToArguments:com.tersesystems.blindsight.api.ToArguments[String]", "kind" : "implicit val"}, {"label" : "unitToArguments", "tail" : ": ToArguments[Unit]", "member" : "com.tersesystems.blindsight.api.LowPriorityToArguments.unitToArguments", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToArguments.html#unitToArguments:com.tersesystems.blindsight.api.ToArguments[Unit]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToArguments.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToArguments.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToArguments.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToArguments.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToArguments.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToArguments.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToArguments.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToArguments.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToArguments.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToArguments.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToArguments.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToArguments.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToArguments.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToArguments.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToArguments.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToArguments.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToArguments.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToArguments.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToArguments.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "com.tersesystems.blindsight.api.LowPriorityToMarkers", "trait" : "com\/tersesystems\/blindsight\/api\/LowPriorityToMarkers.html", "kind" : "trait", "members_trait" : [{"label" : "markerToMarkers", "tail" : ": ToMarkers[Marker]", "member" : "com.tersesystems.blindsight.api.LowPriorityToMarkers.markerToMarkers", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToMarkers.html#markerToMarkers:com.tersesystems.blindsight.api.ToMarkers[org.slf4j.Marker]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToMarkers.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToMarkers.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToMarkers.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToMarkers.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToMarkers.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToMarkers.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToMarkers.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToMarkers.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToMarkers.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToMarkers.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToMarkers.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToMarkers.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToMarkers.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToMarkers.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToMarkers.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToMarkers.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToMarkers.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToMarkers.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToMarkers.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "com.tersesystems.blindsight.api.LowPriorityToMessage", "trait" : "com\/tersesystems\/blindsight\/api\/LowPriorityToMessage.html", "kind" : "trait", "members_trait" : [{"label" : "tupleToMessage", "tail" : ": ToMessage[(String, String)]", "member" : "com.tersesystems.blindsight.api.LowPriorityToMessage.tupleToMessage", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToMessage.html#tupleToMessage:com.tersesystems.blindsight.api.ToMessage[(String,String)]", "kind" : "implicit val"}, {"label" : "stringToMessage", "tail" : ": ToMessage[String]", "member" : "com.tersesystems.blindsight.api.LowPriorityToMessage.stringToMessage", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToMessage.html#stringToMessage:com.tersesystems.blindsight.api.ToMessage[String]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToMessage.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToMessage.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToMessage.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToMessage.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToMessage.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/LowPriorityToMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "com.tersesystems.blindsight.api.Markers", "shortDescription" : "", "object" : "com\/tersesystems\/blindsight\/api\/Markers$.html", "members_class" : [{"label" : "toStatement", "tail" : "(): Statement", "member" : "com.tersesystems.blindsight.api.Markers.toStatement", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#toStatement:com.tersesystems.blindsight.api.Statement", "kind" : "def"}, {"label" : "marker", "tail" : ": Marker", "member" : "com.tersesystems.blindsight.api.Markers.marker", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#marker:org.slf4j.Marker", "kind" : "lazy val"}, {"label" : "iterator", "tail" : "(): Iterator[Marker]", "member" : "com.tersesystems.blindsight.api.Markers.iterator", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#iterator:Iterator[org.slf4j.Marker]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: Marker): Boolean", "member" : "com.tersesystems.blindsight.api.Markers.contains", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#contains(elem:org.slf4j.Marker):Boolean", "kind" : "def"}, {"label" : "excl", "tail" : "(elem: Marker): Set[Marker]", "member" : "com.tersesystems.blindsight.api.Markers.excl", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#excl(elem:org.slf4j.Marker):Set[org.slf4j.Marker]", "kind" : "def"}, {"label" : "incl", "tail" : "(elem: Marker): Set[Marker]", "member" : "com.tersesystems.blindsight.api.Markers.incl", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#incl(elem:org.slf4j.Marker):Set[org.slf4j.Marker]", "kind" : "def"}, {"label" : "concat", "tail" : "(that: IterableOnce[Marker]): Set[Marker]", "member" : "scala.collection.immutable.StrictOptimizedSetOps.concat", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#concat(that:scala.collection.IterableOnce[A]):C", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): Set[Marker]", "member" : "scala.collection.StrictOptimizedIterableOps.dropRight", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#dropRight(n:Int):C", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): Set[Marker]", "member" : "scala.collection.StrictOptimizedIterableOps.takeRight", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#takeRight(n:Int):C", "kind" : "def"}, {"label" : "tapEach", "tail" : "(f: (Marker) => U): Set[Marker]", "member" : "scala.collection.StrictOptimizedIterableOps.tapEach", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#tapEach[U](f:A=>U):C", "kind" : "def"}, {"label" : "partitionMap", "tail" : "(f: (Marker) => Either[A1, A2]): (Set[A1], Set[A2])", "member" : "scala.collection.StrictOptimizedIterableOps.partitionMap", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#partitionMap[A1,A2](f:A=>Either[A1,A2]):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "filterImpl", "tail" : "(pred: (Marker) => Boolean, isFlipped: Boolean): Set[Marker]", "member" : "scala.collection.StrictOptimizedIterableOps.filterImpl", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#filterImpl(pred:A=>Boolean,isFlipped:Boolean):C", "kind" : "def"}, {"label" : "filterNot", "tail" : "(pred: (Marker) => Boolean): Set[Marker]", "member" : "scala.collection.StrictOptimizedIterableOps.filterNot", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#filterNot(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "filter", "tail" : "(pred: (Marker) => Boolean): Set[Marker]", "member" : "scala.collection.StrictOptimizedIterableOps.filter", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#filter(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, Marker) => B): Set[B]", "member" : "scala.collection.StrictOptimizedIterableOps.scanLeft", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#scanLeft[B](z:B)(op:(B,A)=>B):CC[B]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Set[(Marker, Int)]", "member" : "scala.collection.StrictOptimizedIterableOps.zipWithIndex", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#zipWithIndex:CC[(A@scala.annotation.unchecked.uncheckedVariance,Int)]", "kind" : "def"}, {"label" : "strictOptimizedZip", "tail" : "(that: IterableOnce[B], b: Builder[(Marker, B), C2]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedZip", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#strictOptimizedZip[B,C2](that:scala.collection.IterableOnce[B],b:scala.collection.mutable.Builder[(A,B),C2]):C2", "kind" : "final def"}, {"label" : "zip", "tail" : "(that: IterableOnce[B]): Set[(Marker, B)]", "member" : "scala.collection.StrictOptimizedIterableOps.zip", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#zip[B](that:scala.collection.IterableOnce[B]):CC[(A@scala.annotation.unchecked.uncheckedVariance,B)]", "kind" : "def"}, {"label" : "strictOptimizedFlatten", "tail" : "(b: Builder[B, C2])(toIterableOnce: (Marker) => IterableOnce[B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedFlatten", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#strictOptimizedFlatten[B,C2](b:scala.collection.mutable.Builder[B,C2])(implicittoIterableOnce:A=>scala.collection.IterableOnce[B]):C2", "kind" : "final def"}, {"label" : "flatten", "tail" : "(toIterableOnce: (Marker) => IterableOnce[B]): Set[B]", "member" : "scala.collection.StrictOptimizedIterableOps.flatten", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#flatten[B](implicittoIterableOnce:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedCollect", "tail" : "(b: Builder[B, C2], pf: PartialFunction[Marker, B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedCollect", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#strictOptimizedCollect[B,C2](b:scala.collection.mutable.Builder[B,C2],pf:PartialFunction[A,B]):C2", "kind" : "final def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Marker, B]): Set[B]", "member" : "scala.collection.StrictOptimizedIterableOps.collect", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#collect[B](pf:PartialFunction[A,B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedConcat", "tail" : "(that: IterableOnce[B], b: Builder[B, C2]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedConcat", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#strictOptimizedConcat[B>:A,C2](that:scala.collection.IterableOnce[B],b:scala.collection.mutable.Builder[B,C2]):C2", "kind" : "final def"}, {"label" : "strictOptimizedFlatMap", "tail" : "(b: Builder[B, C2], f: (Marker) => IterableOnce[B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedFlatMap", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#strictOptimizedFlatMap[B,C2](b:scala.collection.mutable.Builder[B,C2],f:A=>scala.collection.IterableOnce[B]):C2", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(f: (Marker) => IterableOnce[B]): Set[B]", "member" : "scala.collection.StrictOptimizedIterableOps.flatMap", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#flatMap[B](f:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedMap", "tail" : "(b: Builder[B, C2], f: (Marker) => B): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedMap", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#strictOptimizedMap[B,C2](b:scala.collection.mutable.Builder[B,C2],f:A=>B):C2", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (Marker) => B): Set[B]", "member" : "scala.collection.StrictOptimizedIterableOps.map", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#map[B](f:A=>B):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (Marker) => (A1, A2, A3)): (Set[A1], Set[A2], Set[A3])", "member" : "scala.collection.StrictOptimizedIterableOps.unzip3", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (Marker) => (A1, A2)): (Set[A1], Set[A2])", "member" : "scala.collection.StrictOptimizedIterableOps.unzip", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "span", "tail" : "(p: (Marker) => Boolean): (Set[Marker], Set[Marker])", "member" : "scala.collection.StrictOptimizedIterableOps.span", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#span(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (Marker) => Boolean): (Set[Marker], Set[Marker])", "member" : "scala.collection.StrictOptimizedIterableOps.partition", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#partition(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "iterableFactory", "tail" : "(): IterableFactory[Set]", "member" : "scala.collection.immutable.Set.iterableFactory", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#iterableFactory:scala.collection.IterableFactory[scala.collection.immutable.Set]", "kind" : "def"}, {"label" : "--", "tail" : "(that: IterableOnce[Marker]): Set[Marker]", "member" : "scala.collection.immutable.SetOps.--", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#--(that:scala.collection.IterableOnce[A]):C", "kind" : "final def"}, {"label" : "removedAll", "tail" : "(that: IterableOnce[Marker]): Set[Marker]", "member" : "scala.collection.immutable.SetOps.removedAll", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#removedAll(that:scala.collection.IterableOnce[A]):C", "kind" : "def"}, {"label" : "diff", "tail" : "(that: Set[Marker]): Set[Marker]", "member" : "scala.collection.immutable.SetOps.diff", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#diff(that:scala.collection.Set[A]):C", "kind" : "def"}, {"label" : "-", "tail" : "(elem: Marker): Set[Marker]", "member" : "scala.collection.immutable.SetOps.-", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#-(elem:A):C", "kind" : "final def"}, {"label" : "+", "tail" : "(elem: Marker): Set[Marker]", "member" : "scala.collection.immutable.SetOps.+", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#+(elem:A):C", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.Set.toString", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#toString():String", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.Set.stringPrefix", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#stringPrefix:String", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.collection.Set.hashCode", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "scala.collection.Set.equals", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.collection.Set.canEqual", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "|", "tail" : "(that: Set[Marker]): Set[Marker]", "member" : "scala.collection.SetOps.|", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#|(that:scala.collection.Set[A]):C", "kind" : "final def"}, {"label" : "union", "tail" : "(that: Set[Marker]): Set[Marker]", "member" : "scala.collection.SetOps.union", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#union(that:scala.collection.Set[A]):C", "kind" : "final def"}, {"label" : "++", "tail" : "(that: IterableOnce[Marker]): Set[Marker]", "member" : "scala.collection.SetOps.++", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#++(that:scala.collection.IterableOnce[A]):C", "kind" : "final def"}, {"label" : "+", "tail" : "(elem1: Marker, elem2: Marker, elems: Marker*): Set[Marker]", "member" : "scala.collection.SetOps.+", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#+(elem1:A,elem2:A,elems:A*):C", "kind" : "def"}, {"label" : "-", "tail" : "(elem1: Marker, elem2: Marker, elems: Marker*): Set[Marker]", "member" : "scala.collection.SetOps.-", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#-(elem1:A,elem2:A,elems:A*):C", "kind" : "def"}, {"label" : "&~", "tail" : "(that: Set[Marker]): Set[Marker]", "member" : "scala.collection.SetOps.&~", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#&~(that:scala.collection.Set[A]):C", "kind" : "final def"}, {"label" : "&", "tail" : "(that: Set[Marker]): Set[Marker]", "member" : "scala.collection.SetOps.&", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#&(that:scala.collection.Set[A]):C", "kind" : "final def"}, {"label" : "intersect", "tail" : "(that: Set[Marker]): Set[Marker]", "member" : "scala.collection.SetOps.intersect", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#intersect(that:scala.collection.Set[A]):C", "kind" : "def"}, {"label" : "subsets", "tail" : "(): Iterator[Set[Marker]]", "member" : "scala.collection.SetOps.subsets", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#subsets():Iterator[C]", "kind" : "def"}, {"label" : "subsets", "tail" : "(len: Int): Iterator[Set[Marker]]", "member" : "scala.collection.SetOps.subsets", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#subsets(len:Int):Iterator[C]", "kind" : "def"}, {"label" : "subsetOf", "tail" : "(that: Set[Marker]): Boolean", "member" : "scala.collection.SetOps.subsetOf", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#subsetOf(that:scala.collection.Set[A]):Boolean", "kind" : "def"}, {"label" : "apply", "tail" : "(elem: Marker): Boolean", "member" : "scala.collection.SetOps.apply", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#apply(elem:A):Boolean", "kind" : "final def"}, {"label" : "andThen", "tail" : "(g: (Boolean) => A): (Marker) => A", "member" : "scala.Function1.andThen", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) => Marker): (A) => Boolean", "member" : "scala.Function1.compose", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "lazyZip", "tail" : "(that: Iterable[B]): LazyZip2[Marker, B, Markers.this.type]", "member" : "scala.collection.Iterable.lazyZip", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#lazyZip[B](that:Iterable[B]):scala.collection.LazyZip2[A,B,Iterable.this.type]", "kind" : "def"}, {"label" : "className", "tail" : "(): String", "member" : "scala.collection.Iterable.className", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#className:String", "kind" : "def"}, {"label" : "seq", "tail" : "(): Markers.this.type", "member" : "scala.collection.Iterable.seq", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#seq:Iterable.this.type", "kind" : "def"}, {"label" : "coll", "tail" : "(): Markers.this.type", "member" : "scala.collection.Iterable.coll", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#coll:Iterable.this.type", "kind" : "final def"}, {"label" : "toIterable", "tail" : "(): Markers.this.type", "member" : "scala.collection.Iterable.toIterable", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#toIterable:Iterable.this.type", "kind" : "final def"}, {"label" : "empty", "tail" : "(): Set[Marker]", "member" : "scala.collection.IterableFactoryDefaults.empty", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#empty:CC[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "newSpecificBuilder", "tail" : "(): Builder[Marker, Set[Marker]]", "member" : "scala.collection.IterableFactoryDefaults.newSpecificBuilder", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#newSpecificBuilder:scala.collection.mutable.Builder[A@scala.annotation.unchecked.uncheckedVariance,CC[A@scala.annotation.unchecked.uncheckedVariance]]", "kind" : "def"}, {"label" : "fromSpecific", "tail" : "(coll: IterableOnce[Marker]): Set[Marker]", "member" : "scala.collection.IterableFactoryDefaults.fromSpecific", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#fromSpecific(coll:scala.collection.IterableOnce[A@scala.annotation.unchecked.uncheckedVariance]):CC[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "++:", "tail" : "(that: IterableOnce[B]): Set[B]", "member" : "scala.collection.IterableOps.++:", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#++:[B>:A](that:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "inits", "tail" : "(): Iterator[Set[Marker]]", "member" : "scala.collection.IterableOps.inits", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#inits:Iterator[C]", "kind" : "def"}, {"label" : "tails", "tail" : "(): Iterator[Set[Marker]]", "member" : "scala.collection.IterableOps.tails", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#tails:Iterator[C]", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: Iterable[B], thisElem: A1, thatElem: B): Set[(A1, B)]", "member" : "scala.collection.IterableOps.zipAll", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#zipAll[A1>:A,B](that:Iterable[B],thisElem:A1,thatElem:B):CC[(A1,B)]", "kind" : "def"}, {"label" : "++", "tail" : "(suffix: IterableOnce[B]): Set[B]", "member" : "scala.collection.IterableOps.++", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#++[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : "concat", "tail" : "(suffix: IterableOnce[B]): Set[B]", "member" : "scala.collection.IterableOps.concat", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#concat[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (Marker, B) => B): Set[B]", "member" : "scala.collection.IterableOps.scanRight", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#scanRight[B](z:B)(op:(A,B)=>B):CC[B]", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) => B): Set[B]", "member" : "scala.collection.IterableOps.scan", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#scan[B>:A](z:B)(op:(B,B)=>B):CC[B]", "kind" : "def"}, {"label" : "groupMapReduce", "tail" : "(key: (Marker) => K)(f: (Marker) => B)(reduce: (B, B) => B): Map[K, B]", "member" : "scala.collection.IterableOps.groupMapReduce", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#groupMapReduce[K,B](key:A=>K)(f:A=>B)(reduce:(B,B)=>B):scala.collection.immutable.Map[K,B]", "kind" : "def"}, {"label" : "groupMap", "tail" : "(key: (Marker) => K)(f: (Marker) => B): Map[K, Set[B]]", "member" : "scala.collection.IterableOps.groupMap", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#groupMap[K,B](key:A=>K)(f:A=>B):scala.collection.immutable.Map[K,CC[B]]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (Marker) => K): Map[K, Set[Marker]]", "member" : "scala.collection.IterableOps.groupBy", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,C]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Set[Marker]", "member" : "scala.collection.IterableOps.slice", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#slice(from:Int,until:Int):C", "kind" : "def"}, {"label" : "init", "tail" : "(): Set[Marker]", "member" : "scala.collection.IterableOps.init", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#init:C", "kind" : "def"}, {"label" : "tail", "tail" : "(): Set[Marker]", "member" : "scala.collection.IterableOps.tail", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#tail:C", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): Iterator[Set[Marker]]", "member" : "scala.collection.IterableOps.sliding", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#sliding(size:Int,step:Int):Iterator[C]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): Iterator[Set[Marker]]", "member" : "scala.collection.IterableOps.sliding", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#sliding(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): Iterator[Set[Marker]]", "member" : "scala.collection.IterableOps.grouped", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#grouped(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (Marker) => Boolean): Set[Marker]", "member" : "scala.collection.IterableOps.dropWhile", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#dropWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Set[Marker]", "member" : "scala.collection.IterableOps.drop", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#drop(n:Int):C", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (Marker) => Boolean): Set[Marker]", "member" : "scala.collection.IterableOps.takeWhile", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#takeWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Set[Marker]", "member" : "scala.collection.IterableOps.take", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#take(n:Int):C", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (Set[Marker], Set[Marker])", "member" : "scala.collection.IterableOps.splitAt", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#splitAt(n:Int):(C,C)", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (Marker) => Boolean): WithFilter[Marker, [_]Set[_]]", "member" : "scala.collection.IterableOps.withFilter", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#withFilter(p:A=>Boolean):scala.collection.WithFilter[A,CC]", "kind" : "def"}, {"label" : "transpose", "tail" : "(asIterable: (Marker) => Iterable[B]): Set[Set[B]]", "member" : "scala.collection.IterableOps.transpose", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#transpose[B](implicitasIterable:A=>Iterable[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): View[Marker]", "member" : "scala.collection.IterableOps.view", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#view(from:Int,until:Int):scala.collection.View[A]", "kind" : "def"}, {"label" : "sizeCompare", "tail" : "(that: Iterable[_]): Int", "member" : "scala.collection.IterableOps.sizeCompare", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#sizeCompare(that:Iterable[_]):Int", "kind" : "def"}, {"label" : "sizeIs", "tail" : "(): SizeCompareOps", "member" : "scala.collection.IterableOps.sizeIs", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#sizeIs:scala.collection.IterableOps.SizeCompareOps", "kind" : "final def"}, {"label" : "sizeCompare", "tail" : "(otherSize: Int): Int", "member" : "scala.collection.IterableOps.sizeCompare", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#sizeCompare(otherSize:Int):Int", "kind" : "def"}, {"label" : "view", "tail" : "(): View[Marker]", "member" : "scala.collection.IterableOps.view", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#view:scala.collection.View[A]", "kind" : "def"}, {"label" : "lastOption", "tail" : "(): Option[Marker]", "member" : "scala.collection.IterableOps.lastOption", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "last", "tail" : "(): Marker", "member" : "scala.collection.IterableOps.last", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#last:A", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[Marker]", "member" : "scala.collection.IterableOps.headOption", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#headOption:Option[A]", "kind" : "def"}, {"label" : "head", "tail" : "(): Marker", "member" : "scala.collection.IterableOps.head", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#head:A", "kind" : "def"}, {"label" : "companion", "tail" : "(): IterableFactory[[_]Set[_]]", "member" : "scala.collection.IterableOps.companion", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#companion:scala.collection.IterableFactory[CC]", "kind" : "def"}, {"label" : "repr", "tail" : "(): Set[Marker]", "member" : "scala.collection.IterableOps.repr", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#repr:C", "kind" : "final def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.IterableOps.isTraversableAgain", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[Marker]", "member" : "scala.collection.IterableOps.toTraversable", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#toTraversable:scala.collection.Traversable[A]", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): Iterable[Marker]", "member" : "scala.collection.IterableOnceOps.reversed", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#reversed:Iterable[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.IterableOnceOps.toArray", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#toArray[B>:A](implicitevidence$2:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.IterableOnceOps.toBuffer", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "final def"}, {"label" : "toStream", "tail" : "(): Stream[Marker]", "member" : "scala.collection.IterableOnceOps.toStream", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "final def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[Marker]", "member" : "scala.collection.IterableOnceOps.toIndexedSeq", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#toIndexedSeq:IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[Marker]", "member" : "scala.collection.IterableOnceOps.toSeq", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.IterableOnceOps.toSet", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[Marker, (K, V)]): Map[K, V]", "member" : "scala.collection.IterableOnceOps.toMap", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#toMap[K,V](implicitev:A<:<(K,V)):scala.collection.immutable.Map[K,V]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[Marker]", "member" : "scala.collection.IterableOnceOps.toVector", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#toVector:scala.collection.immutable.Vector[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[Marker]", "member" : "scala.collection.IterableOnceOps.toList", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#toList:List[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[Marker]", "member" : "scala.collection.IterableOnceOps.toIterator", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#toIterator:Iterator[A]", "kind" : "final def"}, {"label" : "to", "tail" : "(factory: Factory[Marker, C1]): C1", "member" : "scala.collection.IterableOnceOps.to", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#to[C1](factory:scala.collection.Factory[A,C1]):C1", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#addString(b:StringBuilder):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#mkString:String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#mkString(sep:String):String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#mkString(start:String,sep:String,end:String):String", "kind" : "final def"}, {"label" : "corresponds", "tail" : "(that: IterableOnce[B])(p: (Marker, B) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.corresponds", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#corresponds[B](that:scala.collection.IterableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: => B)(seqop: (B, Marker) => B, combop: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.aggregate", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Marker, B]): Option[B]", "member" : "scala.collection.IterableOnceOps.collectFirst", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "minByOption", "tail" : "(f: (Marker) => B)(cmp: Ordering[B]): Option[Marker]", "member" : "scala.collection.IterableOnceOps.minByOption", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#minByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (Marker) => B)(cmp: Ordering[B]): Marker", "member" : "scala.collection.IterableOnceOps.minBy", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#minBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxByOption", "tail" : "(f: (Marker) => B)(cmp: Ordering[B]): Option[Marker]", "member" : "scala.collection.IterableOnceOps.maxByOption", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#maxByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (Marker) => B)(cmp: Ordering[B]): Marker", "member" : "scala.collection.IterableOnceOps.maxBy", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#maxBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxOption", "tail" : "(ord: Ordering[B]): Option[Marker]", "member" : "scala.collection.IterableOnceOps.maxOption", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#maxOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "max", "tail" : "(ord: Ordering[B]): Marker", "member" : "scala.collection.IterableOnceOps.max", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#max[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "minOption", "tail" : "(ord: Ordering[B]): Option[Marker]", "member" : "scala.collection.IterableOnceOps.minOption", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#minOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "min", "tail" : "(ord: Ordering[B]): Marker", "member" : "scala.collection.IterableOnceOps.min", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#min[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.product", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#product[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.sum", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#sum[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#copyToArray[B>:A](xs:Array[B],start:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#copyToArray[B>:A](xs:Array[B]):Int", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.IterableOnceOps.copyToBuffer", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "final def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.IterableOnceOps.size", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#size:Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.nonEmpty", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.isEmpty", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (Marker, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceRightOption", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, Marker) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceLeftOption", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (Marker, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduceRight", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, Marker) => B): B", "member" : "scala.collection.IterableOnceOps.reduceLeft", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (B, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceOption", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#reduceOption[B>:A](op:(B,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduce", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#reduce[B>:A](op:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) => A1): A1", "member" : "scala.collection.IterableOnceOps.fold", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (Marker, B) => B): B", "member" : "scala.collection.IterableOnceOps.:\\", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "final def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, Marker) => B): B", "member" : "scala.collection.IterableOnceOps.\/:", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "final def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (Marker, B) => B): B", "member" : "scala.collection.IterableOnceOps.foldRight", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, Marker) => B): B", "member" : "scala.collection.IterableOnceOps.foldLeft", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (Marker) => Boolean): Option[Marker]", "member" : "scala.collection.IterableOnceOps.find", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (Marker) => Boolean): Int", "member" : "scala.collection.IterableOnceOps.count", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (Marker) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.exists", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (Marker) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.forall", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Marker) => U): Unit", "member" : "scala.collection.IterableOnceOps.foreach", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.hasDefiniteSize", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "knownSize", "tail" : "(): Int", "member" : "scala.collection.IterableOnce.knownSize", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#knownSize:Int", "kind" : "def"}, {"label" : "stepper", "tail" : "(shape: StepperShape[Marker, S]): S", "member" : "scala.collection.IterableOnce.stepper", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#stepper[S<:scala.collection.Stepper[_]](implicitshape:scala.collection.StepperShape[A,S]):S", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/Markers.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(marker: Marker): Markers", "member" : "com.tersesystems.blindsight.api.Markers.apply", "link" : "com\/tersesystems\/blindsight\/api\/Markers$.html#apply(marker:org.slf4j.Marker):com.tersesystems.blindsight.api.Markers", "kind" : "def"}, {"label" : "apply", "tail" : "(elements: Marker*): Markers", "member" : "com.tersesystems.blindsight.api.Markers.apply", "link" : "com\/tersesystems\/blindsight\/api\/Markers$.html#apply(elements:org.slf4j.Marker*):com.tersesystems.blindsight.api.Markers", "kind" : "def"}, {"label" : "apply", "tail" : "(markers: Set[Marker]): Markers", "member" : "com.tersesystems.blindsight.api.Markers.apply", "link" : "com\/tersesystems\/blindsight\/api\/Markers$.html#apply(markers:Set[org.slf4j.Marker]):com.tersesystems.blindsight.api.Markers", "kind" : "def"}, {"label" : "apply", "tail" : "(instance: => T)(arg0: ToMarkers[T]): Markers", "member" : "com.tersesystems.blindsight.api.Markers.apply", "link" : "com\/tersesystems\/blindsight\/api\/Markers$.html#apply[T](instance:=>T)(implicitevidence$1:com.tersesystems.blindsight.api.ToMarkers[T]):com.tersesystems.blindsight.api.Markers", "kind" : "def"}, {"label" : "empty", "tail" : "(): Markers", "member" : "com.tersesystems.blindsight.api.Markers.empty", "link" : "com\/tersesystems\/blindsight\/api\/Markers$.html#empty:com.tersesystems.blindsight.api.Markers", "kind" : "def"}, {"label" : "setToMarkers", "tail" : "(set: Set[Marker]): Markers", "member" : "com.tersesystems.blindsight.api.Markers.setToMarkers", "link" : "com\/tersesystems\/blindsight\/api\/Markers$.html#setToMarkers(set:Set[org.slf4j.Marker]):com.tersesystems.blindsight.api.Markers", "kind" : "implicit def"}, {"label" : "markersToMarkers", "tail" : ": ToMarkers[Markers]", "member" : "com.tersesystems.blindsight.api.Markers.markersToMarkers", "link" : "com\/tersesystems\/blindsight\/api\/Markers$.html#markersToMarkers:com.tersesystems.blindsight.api.ToMarkers[com.tersesystems.blindsight.api.Markers]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/api\/Markers$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/api\/Markers$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/api\/Markers$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/api\/Markers$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/api\/Markers$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/api\/Markers$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/api\/Markers$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/Markers$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/Markers$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/Markers$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/api\/Markers$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/api\/Markers$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/api\/Markers$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/api\/Markers$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/api\/Markers$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/api\/Markers$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/api\/Markers$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/Markers$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/Markers$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/tersesystems\/blindsight\/api\/Markers.html", "kind" : "class"}, {"name" : "com.tersesystems.blindsight.api.Message", "shortDescription" : "", "object" : "com\/tersesystems\/blindsight\/api\/Message$.html", "members_class" : [{"label" : "toStatement", "tail" : "(): Statement", "member" : "com.tersesystems.blindsight.api.Message.toStatement", "link" : "com\/tersesystems\/blindsight\/api\/Message.html#toStatement:com.tersesystems.blindsight.api.Statement", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "com.tersesystems.blindsight.api.Message.mkString", "link" : "com\/tersesystems\/blindsight\/api\/Message.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "com.tersesystems.blindsight.api.Message.toString", "link" : "com\/tersesystems\/blindsight\/api\/Message.html#toString():String", "kind" : "def"}, {"label" : "+", "tail" : "(message: Message): Message", "member" : "com.tersesystems.blindsight.api.Message.+", "link" : "com\/tersesystems\/blindsight\/api\/Message.html#+(message:com.tersesystems.blindsight.api.Message):com.tersesystems.blindsight.api.Message", "kind" : "def"}, {"label" : "withPlaceHolders", "tail" : "(args: Arguments): Message", "member" : "com.tersesystems.blindsight.api.Message.withPlaceHolders", "link" : "com\/tersesystems\/blindsight\/api\/Message.html#withPlaceHolders(args:com.tersesystems.blindsight.api.Arguments):com.tersesystems.blindsight.api.Message", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/api\/Message.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/api\/Message.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/api\/Message.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/api\/Message.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/api\/Message.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/api\/Message.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/api\/Message.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/Message.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/Message.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/Message.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/api\/Message.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/api\/Message.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/api\/Message.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/api\/Message.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/api\/Message.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/api\/Message.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/Message.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/Message.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(message: => String): Message", "member" : "com.tersesystems.blindsight.api.Message.apply", "link" : "com\/tersesystems\/blindsight\/api\/Message$.html#apply(message:=>String):com.tersesystems.blindsight.api.Message", "kind" : "def"}, {"label" : "apply", "tail" : "(elements: Seq[String]): Message", "member" : "com.tersesystems.blindsight.api.Message.apply", "link" : "com\/tersesystems\/blindsight\/api\/Message$.html#apply(elements:Seq[String]):com.tersesystems.blindsight.api.Message", "kind" : "def"}, {"label" : "apply", "tail" : "(instance: => T)(arg0: ToMessage[T]): Message", "member" : "com.tersesystems.blindsight.api.Message.apply", "link" : "com\/tersesystems\/blindsight\/api\/Message$.html#apply[T](instance:=>T)(implicitevidence$1:com.tersesystems.blindsight.api.ToMessage[T]):com.tersesystems.blindsight.api.Message", "kind" : "def"}, {"label" : "empty", "tail" : "(): Message", "member" : "com.tersesystems.blindsight.api.Message.empty", "link" : "com\/tersesystems\/blindsight\/api\/Message$.html#empty:com.tersesystems.blindsight.api.Message", "kind" : "def"}, {"label" : "toMessage", "tail" : ": ToMessage[Message]", "member" : "com.tersesystems.blindsight.api.Message.toMessage", "link" : "com\/tersesystems\/blindsight\/api\/Message$.html#toMessage:com.tersesystems.blindsight.api.ToMessage[com.tersesystems.blindsight.api.Message]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/api\/Message$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/api\/Message$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/api\/Message$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/api\/Message$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/api\/Message$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/api\/Message$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/api\/Message$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/Message$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/Message$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/Message$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/api\/Message$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/api\/Message$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/api\/Message$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/api\/Message$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/api\/Message$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/api\/Message$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/api\/Message$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/Message$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/Message$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/tersesystems\/blindsight\/api\/Message.html", "kind" : "class"}, {"name" : "com.tersesystems.blindsight.api.ParameterList", "shortDescription" : "This is the calling site of the SLF4J method, where parameters and arguments meet.", "object" : "com\/tersesystems\/blindsight\/api\/ParameterList$.html", "members_class" : [{"label" : "executeStatement", "tail" : "(statement: Statement): Unit", "member" : "com.tersesystems.blindsight.api.ParameterList.executeStatement", "link" : "com\/tersesystems\/blindsight\/api\/ParameterList.html#executeStatement(statement:com.tersesystems.blindsight.api.Statement):Unit", "kind" : "def"}, {"member" : "com.tersesystems.blindsight.api.ParameterList#<init>", "error" : "unsupported entity"}, {"label" : "logger", "tail" : ": org.slf4j.Logger", "member" : "com.tersesystems.blindsight.api.ParameterList.logger", "link" : "com\/tersesystems\/blindsight\/api\/ParameterList.html#logger:org.slf4j.Logger", "kind" : "val"}, {"label" : "level", "tail" : ": Level", "member" : "com.tersesystems.blindsight.api.ParameterList.level", "link" : "com\/tersesystems\/blindsight\/api\/ParameterList.html#level:org.slf4j.event.Level", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/api\/ParameterList.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/api\/ParameterList.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/api\/ParameterList.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/api\/ParameterList.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/api\/ParameterList.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/api\/ParameterList.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/api\/ParameterList.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/ParameterList.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/ParameterList.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/ParameterList.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/api\/ParameterList.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/api\/ParameterList.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/api\/ParameterList.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/api\/ParameterList.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/api\/ParameterList.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/api\/ParameterList.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/api\/ParameterList.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/ParameterList.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/ParameterList.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "markerMessageArgs", "tail" : "(): (Marker, String, Seq[_]) => Unit", "member" : "com.tersesystems.blindsight.api.ParameterList.markerMessageArgs", "link" : "com\/tersesystems\/blindsight\/api\/ParameterList.html#markerMessageArgs:(org.slf4j.Marker,String,Seq[_])=>Unit", "kind" : "abstract def"}, {"label" : "markerMessageArg1Arg2", "tail" : "(): (Marker, String, Any, Any) => Unit", "member" : "com.tersesystems.blindsight.api.ParameterList.markerMessageArg1Arg2", "link" : "com\/tersesystems\/blindsight\/api\/ParameterList.html#markerMessageArg1Arg2:(org.slf4j.Marker,String,Any,Any)=>Unit", "kind" : "abstract def"}, {"label" : "markerMessageArg1", "tail" : "(): (Marker, String, Any) => Unit", "member" : "com.tersesystems.blindsight.api.ParameterList.markerMessageArg1", "link" : "com\/tersesystems\/blindsight\/api\/ParameterList.html#markerMessageArg1:(org.slf4j.Marker,String,Any)=>Unit", "kind" : "abstract def"}, {"label" : "markerMessage", "tail" : "(): (Marker, String) => Unit", "member" : "com.tersesystems.blindsight.api.ParameterList.markerMessage", "link" : "com\/tersesystems\/blindsight\/api\/ParameterList.html#markerMessage:(org.slf4j.Marker,String)=>Unit", "kind" : "abstract def"}, {"label" : "messageArgs", "tail" : "(): (String, Seq[_]) => Unit", "member" : "com.tersesystems.blindsight.api.ParameterList.messageArgs", "link" : "com\/tersesystems\/blindsight\/api\/ParameterList.html#messageArgs:(String,Seq[_])=>Unit", "kind" : "abstract def"}, {"label" : "messageArg1Arg2", "tail" : "(): (String, Any, Any) => Unit", "member" : "com.tersesystems.blindsight.api.ParameterList.messageArg1Arg2", "link" : "com\/tersesystems\/blindsight\/api\/ParameterList.html#messageArg1Arg2:(String,Any,Any)=>Unit", "kind" : "abstract def"}, {"label" : "messageArg1", "tail" : "(): (String, Any) => Unit", "member" : "com.tersesystems.blindsight.api.ParameterList.messageArg1", "link" : "com\/tersesystems\/blindsight\/api\/ParameterList.html#messageArg1:(String,Any)=>Unit", "kind" : "abstract def"}, {"label" : "message", "tail" : "(): (String) => Unit", "member" : "com.tersesystems.blindsight.api.ParameterList.message", "link" : "com\/tersesystems\/blindsight\/api\/ParameterList.html#message:String=>Unit", "kind" : "abstract def"}, {"label" : "executePredicate", "tail" : "(marker: Marker): Boolean", "member" : "com.tersesystems.blindsight.api.ParameterList.executePredicate", "link" : "com\/tersesystems\/blindsight\/api\/ParameterList.html#executePredicate(marker:org.slf4j.Marker):Boolean", "kind" : "abstract def"}, {"label" : "executePredicate", "tail" : "(): Boolean", "member" : "com.tersesystems.blindsight.api.ParameterList.executePredicate", "link" : "com\/tersesystems\/blindsight\/api\/ParameterList.html#executePredicate():Boolean", "kind" : "abstract def"}], "members_object" : [{"label" : "Error", "tail" : "", "member" : "com.tersesystems.blindsight.api.ParameterList.Error", "link" : "com\/tersesystems\/blindsight\/api\/ParameterList$.html#ErrorextendsParameterList", "kind" : "class"}, {"label" : "Warn", "tail" : "", "member" : "com.tersesystems.blindsight.api.ParameterList.Warn", "link" : "com\/tersesystems\/blindsight\/api\/ParameterList$.html#WarnextendsParameterList", "kind" : "class"}, {"label" : "Info", "tail" : "", "member" : "com.tersesystems.blindsight.api.ParameterList.Info", "link" : "com\/tersesystems\/blindsight\/api\/ParameterList$.html#InfoextendsParameterList", "kind" : "class"}, {"label" : "Debug", "tail" : "", "member" : "com.tersesystems.blindsight.api.ParameterList.Debug", "link" : "com\/tersesystems\/blindsight\/api\/ParameterList$.html#DebugextendsParameterList", "kind" : "class"}, {"label" : "Trace", "tail" : "", "member" : "com.tersesystems.blindsight.api.ParameterList.Trace", "link" : "com\/tersesystems\/blindsight\/api\/ParameterList$.html#TraceextendsParameterList", "kind" : "class"}, {"label" : "lists", "tail" : "(logger: org.slf4j.Logger): Array[ParameterList]", "member" : "com.tersesystems.blindsight.api.ParameterList.lists", "link" : "com\/tersesystems\/blindsight\/api\/ParameterList$.html#lists(logger:org.slf4j.Logger):Array[com.tersesystems.blindsight.api.ParameterList]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/api\/ParameterList$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/api\/ParameterList$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/api\/ParameterList$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/api\/ParameterList$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/api\/ParameterList$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/api\/ParameterList$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/api\/ParameterList$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/ParameterList$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/ParameterList$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/ParameterList$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/api\/ParameterList$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/api\/ParameterList$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/api\/ParameterList$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/api\/ParameterList$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/api\/ParameterList$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/api\/ParameterList$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/api\/ParameterList$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/ParameterList$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/ParameterList$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/tersesystems\/blindsight\/api\/ParameterList.html", "kind" : "class"}, {"name" : "com.tersesystems.blindsight.api.Statement", "shortDescription" : "", "object" : "com\/tersesystems\/blindsight\/api\/Statement$.html", "members_object" : [{"label" : "messageToStatement", "tail" : ": ToStatement[Message]", "member" : "com.tersesystems.blindsight.api.Statement.messageToStatement", "link" : "com\/tersesystems\/blindsight\/api\/Statement$.html#messageToStatement:com.tersesystems.blindsight.api.ToStatement[com.tersesystems.blindsight.api.Message]", "kind" : "implicit val"}, {"label" : "argumentsToStatement", "tail" : ": ToStatement[Arguments]", "member" : "com.tersesystems.blindsight.api.Statement.argumentsToStatement", "link" : "com\/tersesystems\/blindsight\/api\/Statement$.html#argumentsToStatement:com.tersesystems.blindsight.api.ToStatement[com.tersesystems.blindsight.api.Arguments]", "kind" : "implicit val"}, {"label" : "markersToStatement", "tail" : ": ToStatement[Markers]", "member" : "com.tersesystems.blindsight.api.Statement.markersToStatement", "link" : "com\/tersesystems\/blindsight\/api\/Statement$.html#markersToStatement:com.tersesystems.blindsight.api.ToStatement[com.tersesystems.blindsight.api.Markers]", "kind" : "implicit val"}, {"label" : "apply", "tail" : "(): Statement", "member" : "com.tersesystems.blindsight.api.Statement.apply", "link" : "com\/tersesystems\/blindsight\/api\/Statement$.html#apply():com.tersesystems.blindsight.api.Statement", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/api\/Statement$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/api\/Statement$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/api\/Statement$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/api\/Statement$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/api\/Statement$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/api\/Statement$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/api\/Statement$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/Statement$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/Statement$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/Statement$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/api\/Statement$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/api\/Statement$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/api\/Statement$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/api\/Statement$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/api\/Statement$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/api\/Statement$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/api\/Statement$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/Statement$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/Statement$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "withThrowable", "tail" : "(t: Throwable): Statement", "member" : "com.tersesystems.blindsight.api.Statement.withThrowable", "link" : "com\/tersesystems\/blindsight\/api\/Statement.html#withThrowable(t:Throwable):com.tersesystems.blindsight.api.Statement", "kind" : "def"}, {"label" : "withMessage", "tail" : "(message: T)(arg0: ToMessage[T]): Statement", "member" : "com.tersesystems.blindsight.api.Statement.withMessage", "link" : "com\/tersesystems\/blindsight\/api\/Statement.html#withMessage[T](message:T)(implicitevidence$3:com.tersesystems.blindsight.api.ToMessage[T]):com.tersesystems.blindsight.api.Statement", "kind" : "def"}, {"label" : "withMarkers", "tail" : "(markers: T)(arg0: ToMarkers[T]): Statement", "member" : "com.tersesystems.blindsight.api.Statement.withMarkers", "link" : "com\/tersesystems\/blindsight\/api\/Statement.html#withMarkers[T](markers:T)(implicitevidence$2:com.tersesystems.blindsight.api.ToMarkers[T]):com.tersesystems.blindsight.api.Statement", "kind" : "def"}, {"label" : "withArguments", "tail" : "(args: T)(arg0: ToArguments[T]): Statement", "member" : "com.tersesystems.blindsight.api.Statement.withArguments", "link" : "com\/tersesystems\/blindsight\/api\/Statement.html#withArguments[T](args:T)(implicitevidence$1:com.tersesystems.blindsight.api.ToArguments[T]):com.tersesystems.blindsight.api.Statement", "kind" : "def"}, {"member" : "com.tersesystems.blindsight.api.Statement#<init>", "error" : "unsupported entity"}, {"label" : "throwable", "tail" : ": Option[Throwable]", "member" : "com.tersesystems.blindsight.api.Statement.throwable", "link" : "com\/tersesystems\/blindsight\/api\/Statement.html#throwable:Option[Throwable]", "kind" : "val"}, {"label" : "arguments", "tail" : ": Arguments", "member" : "com.tersesystems.blindsight.api.Statement.arguments", "link" : "com\/tersesystems\/blindsight\/api\/Statement.html#arguments:com.tersesystems.blindsight.api.Arguments", "kind" : "val"}, {"label" : "message", "tail" : ": Message", "member" : "com.tersesystems.blindsight.api.Statement.message", "link" : "com\/tersesystems\/blindsight\/api\/Statement.html#message:com.tersesystems.blindsight.api.Message", "kind" : "val"}, {"label" : "markers", "tail" : ": Markers", "member" : "com.tersesystems.blindsight.api.Statement.markers", "link" : "com\/tersesystems\/blindsight\/api\/Statement.html#markers:com.tersesystems.blindsight.api.Markers", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/tersesystems\/blindsight\/api\/Statement.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/api\/Statement.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/api\/Statement.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/api\/Statement.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/api\/Statement.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/api\/Statement.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/api\/Statement.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/api\/Statement.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/Statement.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/Statement.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/Statement.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/api\/Statement.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/api\/Statement.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/api\/Statement.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/api\/Statement.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/Statement.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/Statement.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/tersesystems\/blindsight\/api\/Statement.html", "kind" : "case class"}, {"name" : "com.tersesystems.blindsight.api.ToArguments", "object" : "com\/tersesystems\/blindsight\/api\/ToArguments$.html", "members_object" : [{"label" : "apply", "tail" : "(f: (T) => Arguments): ToArguments[T]", "member" : "com.tersesystems.blindsight.api.ToArguments.apply", "link" : "com\/tersesystems\/blindsight\/api\/ToArguments$.html#apply[T](f:T=>com.tersesystems.blindsight.api.Arguments):com.tersesystems.blindsight.api.ToArguments[T]", "kind" : "def"}, {"label" : "seqArguments", "tail" : "(): ToArguments[Seq[AsArguments]]", "member" : "com.tersesystems.blindsight.api.LowPriorityToArguments.seqArguments", "link" : "com\/tersesystems\/blindsight\/api\/ToArguments$.html#seqArguments:com.tersesystems.blindsight.api.ToArguments[Seq[com.tersesystems.blindsight.api.AsArguments]]", "kind" : "implicit def"}, {"label" : "throwableToArguments", "tail" : ": ToArguments[Throwable]", "member" : "com.tersesystems.blindsight.api.LowPriorityToArguments.throwableToArguments", "link" : "com\/tersesystems\/blindsight\/api\/ToArguments$.html#throwableToArguments:com.tersesystems.blindsight.api.ToArguments[Throwable]", "kind" : "implicit val"}, {"label" : "doubleToArguments", "tail" : ": ToArguments[Double]", "member" : "com.tersesystems.blindsight.api.LowPriorityToArguments.doubleToArguments", "link" : "com\/tersesystems\/blindsight\/api\/ToArguments$.html#doubleToArguments:com.tersesystems.blindsight.api.ToArguments[Double]", "kind" : "implicit val"}, {"label" : "floatToArguments", "tail" : ": ToArguments[Float]", "member" : "com.tersesystems.blindsight.api.LowPriorityToArguments.floatToArguments", "link" : "com\/tersesystems\/blindsight\/api\/ToArguments$.html#floatToArguments:com.tersesystems.blindsight.api.ToArguments[Float]", "kind" : "implicit val"}, {"label" : "longToArguments", "tail" : ": ToArguments[Long]", "member" : "com.tersesystems.blindsight.api.LowPriorityToArguments.longToArguments", "link" : "com\/tersesystems\/blindsight\/api\/ToArguments$.html#longToArguments:com.tersesystems.blindsight.api.ToArguments[Long]", "kind" : "implicit val"}, {"label" : "intToArguments", "tail" : ": ToArguments[Int]", "member" : "com.tersesystems.blindsight.api.LowPriorityToArguments.intToArguments", "link" : "com\/tersesystems\/blindsight\/api\/ToArguments$.html#intToArguments:com.tersesystems.blindsight.api.ToArguments[Int]", "kind" : "implicit val"}, {"label" : "shortToArguments", "tail" : ": ToArguments[Short]", "member" : "com.tersesystems.blindsight.api.LowPriorityToArguments.shortToArguments", "link" : "com\/tersesystems\/blindsight\/api\/ToArguments$.html#shortToArguments:com.tersesystems.blindsight.api.ToArguments[Short]", "kind" : "implicit val"}, {"label" : "booleanToArguments", "tail" : ": ToArguments[Boolean]", "member" : "com.tersesystems.blindsight.api.LowPriorityToArguments.booleanToArguments", "link" : "com\/tersesystems\/blindsight\/api\/ToArguments$.html#booleanToArguments:com.tersesystems.blindsight.api.ToArguments[Boolean]", "kind" : "implicit val"}, {"label" : "stringToArguments", "tail" : ": ToArguments[String]", "member" : "com.tersesystems.blindsight.api.LowPriorityToArguments.stringToArguments", "link" : "com\/tersesystems\/blindsight\/api\/ToArguments$.html#stringToArguments:com.tersesystems.blindsight.api.ToArguments[String]", "kind" : "implicit val"}, {"label" : "unitToArguments", "tail" : ": ToArguments[Unit]", "member" : "com.tersesystems.blindsight.api.LowPriorityToArguments.unitToArguments", "link" : "com\/tersesystems\/blindsight\/api\/ToArguments$.html#unitToArguments:com.tersesystems.blindsight.api.ToArguments[Unit]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/api\/ToArguments$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/api\/ToArguments$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/api\/ToArguments$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/api\/ToArguments$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/api\/ToArguments$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/api\/ToArguments$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/api\/ToArguments$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/ToArguments$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/ToArguments$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/ToArguments$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/api\/ToArguments$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/api\/ToArguments$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/api\/ToArguments$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/api\/ToArguments$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/api\/ToArguments$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/api\/ToArguments$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/api\/ToArguments$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/ToArguments$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/ToArguments$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/tersesystems\/blindsight\/api\/ToArguments.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/api\/ToArguments.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/api\/ToArguments.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/api\/ToArguments.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/api\/ToArguments.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/api\/ToArguments.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/api\/ToArguments.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/api\/ToArguments.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/ToArguments.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/ToArguments.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/ToArguments.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/api\/ToArguments.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/api\/ToArguments.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/api\/ToArguments.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/api\/ToArguments.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/api\/ToArguments.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/api\/ToArguments.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/api\/ToArguments.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/ToArguments.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/ToArguments.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toArguments", "tail" : "(instance: => T): Arguments", "member" : "com.tersesystems.blindsight.api.ToArguments.toArguments", "link" : "com\/tersesystems\/blindsight\/api\/ToArguments.html#toArguments(instance:=>T):com.tersesystems.blindsight.api.Arguments", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "com.tersesystems.blindsight.api.ToMarkers", "object" : "com\/tersesystems\/blindsight\/api\/ToMarkers$.html", "members_object" : [{"label" : "apply", "tail" : "(f: (T) => Markers): ToMarkers[T]", "member" : "com.tersesystems.blindsight.api.ToMarkers.apply", "link" : "com\/tersesystems\/blindsight\/api\/ToMarkers$.html#apply[T](f:T=>com.tersesystems.blindsight.api.Markers):com.tersesystems.blindsight.api.ToMarkers[T]", "kind" : "def"}, {"label" : "markerToMarkers", "tail" : ": ToMarkers[Marker]", "member" : "com.tersesystems.blindsight.api.LowPriorityToMarkers.markerToMarkers", "link" : "com\/tersesystems\/blindsight\/api\/ToMarkers$.html#markerToMarkers:com.tersesystems.blindsight.api.ToMarkers[org.slf4j.Marker]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/api\/ToMarkers$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/api\/ToMarkers$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/api\/ToMarkers$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/api\/ToMarkers$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/api\/ToMarkers$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/api\/ToMarkers$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/api\/ToMarkers$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/ToMarkers$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/ToMarkers$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/ToMarkers$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/api\/ToMarkers$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/api\/ToMarkers$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/api\/ToMarkers$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/api\/ToMarkers$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/api\/ToMarkers$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/api\/ToMarkers$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/api\/ToMarkers$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/ToMarkers$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/ToMarkers$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/tersesystems\/blindsight\/api\/ToMarkers.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/api\/ToMarkers.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/api\/ToMarkers.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/api\/ToMarkers.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/api\/ToMarkers.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/api\/ToMarkers.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/api\/ToMarkers.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/api\/ToMarkers.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/ToMarkers.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/ToMarkers.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/ToMarkers.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/api\/ToMarkers.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/api\/ToMarkers.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/api\/ToMarkers.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/api\/ToMarkers.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/api\/ToMarkers.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/api\/ToMarkers.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/api\/ToMarkers.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/ToMarkers.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/ToMarkers.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toMarkers", "tail" : "(instance: T): Markers", "member" : "com.tersesystems.blindsight.api.ToMarkers.toMarkers", "link" : "com\/tersesystems\/blindsight\/api\/ToMarkers.html#toMarkers(instance:T):com.tersesystems.blindsight.api.Markers", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "com.tersesystems.blindsight.api.ToMessage", "object" : "com\/tersesystems\/blindsight\/api\/ToMessage$.html", "members_object" : [{"label" : "apply", "tail" : "(f: (T) => Message): ToMessage[T]", "member" : "com.tersesystems.blindsight.api.ToMessage.apply", "link" : "com\/tersesystems\/blindsight\/api\/ToMessage$.html#apply[T](f:T=>com.tersesystems.blindsight.api.Message):com.tersesystems.blindsight.api.ToMessage[T]", "kind" : "def"}, {"label" : "tupleToMessage", "tail" : ": ToMessage[(String, String)]", "member" : "com.tersesystems.blindsight.api.LowPriorityToMessage.tupleToMessage", "link" : "com\/tersesystems\/blindsight\/api\/ToMessage$.html#tupleToMessage:com.tersesystems.blindsight.api.ToMessage[(String,String)]", "kind" : "implicit val"}, {"label" : "stringToMessage", "tail" : ": ToMessage[String]", "member" : "com.tersesystems.blindsight.api.LowPriorityToMessage.stringToMessage", "link" : "com\/tersesystems\/blindsight\/api\/ToMessage$.html#stringToMessage:com.tersesystems.blindsight.api.ToMessage[String]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/api\/ToMessage$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/api\/ToMessage$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/api\/ToMessage$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/api\/ToMessage$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/api\/ToMessage$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/api\/ToMessage$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/api\/ToMessage$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/ToMessage$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/ToMessage$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/ToMessage$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/api\/ToMessage$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/api\/ToMessage$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/api\/ToMessage$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/api\/ToMessage$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/api\/ToMessage$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/api\/ToMessage$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/api\/ToMessage$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/ToMessage$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/ToMessage$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/tersesystems\/blindsight\/api\/ToMessage.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/api\/ToMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/api\/ToMessage.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/api\/ToMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/api\/ToMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/api\/ToMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/api\/ToMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/api\/ToMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/ToMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/ToMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/ToMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/api\/ToMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/api\/ToMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/api\/ToMessage.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/api\/ToMessage.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/api\/ToMessage.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/api\/ToMessage.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/api\/ToMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/ToMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/ToMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toMessage", "tail" : "(instance: => T): Message", "member" : "com.tersesystems.blindsight.api.ToMessage.toMessage", "link" : "com\/tersesystems\/blindsight\/api\/ToMessage.html#toMessage(instance:=>T):com.tersesystems.blindsight.api.Message", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "com.tersesystems.blindsight.api.ToStatement", "object" : "com\/tersesystems\/blindsight\/api\/ToStatement$.html", "members_object" : [{"label" : "statementToStatement", "tail" : ": ToStatement[Statement]", "member" : "com.tersesystems.blindsight.api.ToStatement.statementToStatement", "link" : "com\/tersesystems\/blindsight\/api\/ToStatement$.html#statementToStatement:com.tersesystems.blindsight.api.ToStatement[com.tersesystems.blindsight.api.Statement]", "kind" : "implicit val"}, {"label" : "apply", "tail" : "(f: (T) => S): ToStatement[T]", "member" : "com.tersesystems.blindsight.api.ToStatement.apply", "link" : "com\/tersesystems\/blindsight\/api\/ToStatement$.html#apply[T,S<:com.tersesystems.blindsight.api.Statement](f:T=>S):com.tersesystems.blindsight.api.ToStatement[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/api\/ToStatement$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/api\/ToStatement$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/api\/ToStatement$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/api\/ToStatement$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/api\/ToStatement$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/api\/ToStatement$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/api\/ToStatement$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/ToStatement$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/ToStatement$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/ToStatement$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/api\/ToStatement$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/api\/ToStatement$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/api\/ToStatement$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/api\/ToStatement$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/api\/ToStatement$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/api\/ToStatement$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/api\/ToStatement$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/ToStatement$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/ToStatement$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/tersesystems\/blindsight\/api\/ToStatement.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/api\/ToStatement.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/api\/ToStatement.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/api\/ToStatement.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/api\/ToStatement.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/api\/ToStatement.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/api\/ToStatement.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/api\/ToStatement.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/ToStatement.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/ToStatement.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/ToStatement.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/api\/ToStatement.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/api\/ToStatement.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/api\/ToStatement.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/api\/ToStatement.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/api\/ToStatement.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/api\/ToStatement.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/api\/ToStatement.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/ToStatement.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/ToStatement.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toStatement", "tail" : "(instance: => T): Statement", "member" : "com.tersesystems.blindsight.api.ToStatement.toStatement", "link" : "com\/tersesystems\/blindsight\/api\/ToStatement.html#toStatement(instance:=>T):com.tersesystems.blindsight.api.Statement", "kind" : "abstract def"}], "shortDescription" : "Type class for mapping to a statement."}], "com.tersesystems.blindsight.slf4j" : [{"name" : "com.tersesystems.blindsight.slf4j.ExtendedSLF4JLogger", "trait" : "com\/tersesystems\/blindsight\/slf4j\/ExtendedSLF4JLogger.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/slf4j\/ExtendedSLF4JLogger.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/slf4j\/ExtendedSLF4JLogger.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/slf4j\/ExtendedSLF4JLogger.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/slf4j\/ExtendedSLF4JLogger.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/slf4j\/ExtendedSLF4JLogger.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/slf4j\/ExtendedSLF4JLogger.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/slf4j\/ExtendedSLF4JLogger.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/slf4j\/ExtendedSLF4JLogger.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/slf4j\/ExtendedSLF4JLogger.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/slf4j\/ExtendedSLF4JLogger.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/slf4j\/ExtendedSLF4JLogger.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/slf4j\/ExtendedSLF4JLogger.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/slf4j\/ExtendedSLF4JLogger.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/slf4j\/ExtendedSLF4JLogger.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/slf4j\/ExtendedSLF4JLogger.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/slf4j\/ExtendedSLF4JLogger.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/slf4j\/ExtendedSLF4JLogger.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/slf4j\/ExtendedSLF4JLogger.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/slf4j\/ExtendedSLF4JLogger.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "method", "tail" : "(level: Level): M", "member" : "com.tersesystems.blindsight.slf4j.ExtendedSLF4JLogger.method", "link" : "com\/tersesystems\/blindsight\/slf4j\/ExtendedSLF4JLogger.html#method(level:org.slf4j.event.Level):M", "kind" : "abstract def"}, {"label" : "predicate", "tail" : "(level: Level): SLF4JPredicate", "member" : "com.tersesystems.blindsight.api.mixins.PredicateMixin.predicate", "link" : "com\/tersesystems\/blindsight\/slf4j\/ExtendedSLF4JLogger.html#predicate(level:org.slf4j.event.Level):Predicate", "kind" : "abstract def"}, {"label" : "parameterList", "tail" : "(level: Level): ParameterList", "member" : "com.tersesystems.blindsight.api.mixins.ParameterListMixin.parameterList", "link" : "com\/tersesystems\/blindsight\/slf4j\/ExtendedSLF4JLogger.html#parameterList(level:org.slf4j.event.Level):com.tersesystems.blindsight.api.ParameterList", "kind" : "abstract def"}, {"label" : "sourceInfoMarker", "tail" : "(level: Level, line: Line, file: File, enclosing: Enclosing): Markers", "member" : "com.tersesystems.blindsight.api.mixins.SourceInfoMixin.sourceInfoMarker", "link" : "com\/tersesystems\/blindsight\/slf4j\/ExtendedSLF4JLogger.html#sourceInfoMarker(level:org.slf4j.event.Level,line:sourcecode.Line,file:sourcecode.File,enclosing:sourcecode.Enclosing):com.tersesystems.blindsight.api.Markers", "kind" : "abstract def"}, {"member" : "com.tersesystems.blindsight.slf4j.SLF4JLogger.Self", "error" : "unsupported entity"}, {"label" : "onCondition", "tail" : "(test: => Boolean): Self", "member" : "com.tersesystems.blindsight.api.mixins.OnConditionMixin.onCondition", "link" : "com\/tersesystems\/blindsight\/slf4j\/ExtendedSLF4JLogger.html#onCondition(test:=>Boolean):OnConditionMixin.this.Self", "kind" : "abstract def"}, {"label" : "underlying", "tail" : "(): org.slf4j.Logger", "member" : "com.tersesystems.blindsight.api.mixins.UnderlyingMixin.underlying", "link" : "com\/tersesystems\/blindsight\/slf4j\/ExtendedSLF4JLogger.html#underlying:org.slf4j.Logger", "kind" : "abstract def"}, {"label" : "markers", "tail" : "(): Markers", "member" : "com.tersesystems.blindsight.api.mixins.MarkerMixin.markers", "link" : "com\/tersesystems\/blindsight\/slf4j\/ExtendedSLF4JLogger.html#markers:com.tersesystems.blindsight.api.Markers", "kind" : "abstract def"}, {"label" : "withMarker", "tail" : "(instance: T)(arg0: ToMarkers[T]): Self", "member" : "com.tersesystems.blindsight.api.mixins.MarkerMixin.withMarker", "link" : "com\/tersesystems\/blindsight\/slf4j\/ExtendedSLF4JLogger.html#withMarker[T](instance:T)(implicitevidence$1:com.tersesystems.blindsight.api.ToMarkers[T]):MarkerMixin.this.Self", "kind" : "abstract def"}, {"label" : "error", "tail" : "(): Method", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Error.error", "link" : "com\/tersesystems\/blindsight\/slf4j\/ExtendedSLF4JLogger.html#error:Error.this.Method", "kind" : "abstract def"}, {"label" : "isErrorEnabled", "tail" : "(): Predicate", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Error.isErrorEnabled", "link" : "com\/tersesystems\/blindsight\/slf4j\/ExtendedSLF4JLogger.html#isErrorEnabled:Error.this.Predicate", "kind" : "abstract def"}, {"label" : "warn", "tail" : "(): Method", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Warn.warn", "link" : "com\/tersesystems\/blindsight\/slf4j\/ExtendedSLF4JLogger.html#warn:Warn.this.Method", "kind" : "abstract def"}, {"label" : "isWarnEnabled", "tail" : "(): Predicate", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Warn.isWarnEnabled", "link" : "com\/tersesystems\/blindsight\/slf4j\/ExtendedSLF4JLogger.html#isWarnEnabled:Warn.this.Predicate", "kind" : "abstract def"}, {"label" : "info", "tail" : "(): Method", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Info.info", "link" : "com\/tersesystems\/blindsight\/slf4j\/ExtendedSLF4JLogger.html#info:Info.this.Method", "kind" : "abstract def"}, {"label" : "isInfoEnabled", "tail" : "(): Predicate", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Info.isInfoEnabled", "link" : "com\/tersesystems\/blindsight\/slf4j\/ExtendedSLF4JLogger.html#isInfoEnabled:Info.this.Predicate", "kind" : "abstract def"}, {"label" : "debug", "tail" : "(): Method", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Debug.debug", "link" : "com\/tersesystems\/blindsight\/slf4j\/ExtendedSLF4JLogger.html#debug:Debug.this.Method", "kind" : "abstract def"}, {"label" : "isDebugEnabled", "tail" : "(): Predicate", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Debug.isDebugEnabled", "link" : "com\/tersesystems\/blindsight\/slf4j\/ExtendedSLF4JLogger.html#isDebugEnabled:Debug.this.Predicate", "kind" : "abstract def"}, {"label" : "trace", "tail" : "(): Method", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Trace.trace", "link" : "com\/tersesystems\/blindsight\/slf4j\/ExtendedSLF4JLogger.html#trace:Trace.this.Method", "kind" : "abstract def"}, {"label" : "isTraceEnabled", "tail" : "(): Predicate", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Trace.isTraceEnabled", "link" : "com\/tersesystems\/blindsight\/slf4j\/ExtendedSLF4JLogger.html#isTraceEnabled:Trace.this.Predicate", "kind" : "abstract def"}, {"member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerComponent.Method", "error" : "unsupported entity"}, {"member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerComponent.Predicate", "error" : "unsupported entity"}], "shortDescription" : "Service level interface, contains additional methods to makeextending the API easier."}, {"name" : "com.tersesystems.blindsight.slf4j.SLF4JLogger", "object" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLogger$.html", "members_object" : [{"label" : "Strict", "tail" : "", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLogger.Strict", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLogger$.html#Strict", "kind" : "object"}, {"label" : "Unchecked", "tail" : "", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLogger.Unchecked", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLogger$.html#Unchecked", "kind" : "object"}, {"label" : "Strict", "tail" : "", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLogger.Strict", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLogger$.html#StrictextendsSLF4JLogger.Base[com.tersesystems.blindsight.slf4j.StrictSLF4JMethod]", "kind" : "class"}, {"label" : "Unchecked", "tail" : "", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLogger.Unchecked", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLogger$.html#UncheckedextendsSLF4JLogger.Base[com.tersesystems.blindsight.slf4j.UncheckedSLF4JMethod]", "kind" : "class"}, {"label" : "Delegate", "tail" : "", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLogger.Delegate", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLogger$.html#Delegate[M]extendsExtendedSLF4JLogger[M]", "kind" : "abstract class"}, {"label" : "Base", "tail" : "", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLogger.Base", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLogger$.html#Base[M]extendsExtendedSLF4JLogger[M]", "kind" : "abstract class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLogger$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLogger$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLogger$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLogger$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLogger$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLogger$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLogger$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLogger$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLogger$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLogger$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLogger$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLogger$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLogger$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLogger$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLogger$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLogger$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLogger$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLogger$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLogger$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLogger.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLogger.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLogger.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLogger.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLogger.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLogger.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLogger.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLogger.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLogger.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLogger.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLogger.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLogger.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLogger.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLogger.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLogger.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLogger.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLogger.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLogger.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLogger.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLogger.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"member" : "com.tersesystems.blindsight.slf4j.SLF4JLogger.Self", "error" : "unsupported entity"}, {"label" : "onCondition", "tail" : "(test: => Boolean): Self", "member" : "com.tersesystems.blindsight.api.mixins.OnConditionMixin.onCondition", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLogger.html#onCondition(test:=>Boolean):OnConditionMixin.this.Self", "kind" : "abstract def"}, {"label" : "underlying", "tail" : "(): org.slf4j.Logger", "member" : "com.tersesystems.blindsight.api.mixins.UnderlyingMixin.underlying", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLogger.html#underlying:org.slf4j.Logger", "kind" : "abstract def"}, {"label" : "markers", "tail" : "(): Markers", "member" : "com.tersesystems.blindsight.api.mixins.MarkerMixin.markers", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLogger.html#markers:com.tersesystems.blindsight.api.Markers", "kind" : "abstract def"}, {"label" : "withMarker", "tail" : "(instance: T)(arg0: ToMarkers[T]): Self", "member" : "com.tersesystems.blindsight.api.mixins.MarkerMixin.withMarker", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLogger.html#withMarker[T](instance:T)(implicitevidence$1:com.tersesystems.blindsight.api.ToMarkers[T]):MarkerMixin.this.Self", "kind" : "abstract def"}, {"label" : "error", "tail" : "(): Method", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Error.error", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLogger.html#error:Error.this.Method", "kind" : "abstract def"}, {"label" : "isErrorEnabled", "tail" : "(): Predicate", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Error.isErrorEnabled", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLogger.html#isErrorEnabled:Error.this.Predicate", "kind" : "abstract def"}, {"label" : "warn", "tail" : "(): Method", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Warn.warn", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLogger.html#warn:Warn.this.Method", "kind" : "abstract def"}, {"label" : "isWarnEnabled", "tail" : "(): Predicate", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Warn.isWarnEnabled", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLogger.html#isWarnEnabled:Warn.this.Predicate", "kind" : "abstract def"}, {"label" : "info", "tail" : "(): Method", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Info.info", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLogger.html#info:Info.this.Method", "kind" : "abstract def"}, {"label" : "isInfoEnabled", "tail" : "(): Predicate", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Info.isInfoEnabled", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLogger.html#isInfoEnabled:Info.this.Predicate", "kind" : "abstract def"}, {"label" : "debug", "tail" : "(): Method", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Debug.debug", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLogger.html#debug:Debug.this.Method", "kind" : "abstract def"}, {"label" : "isDebugEnabled", "tail" : "(): Predicate", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Debug.isDebugEnabled", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLogger.html#isDebugEnabled:Debug.this.Predicate", "kind" : "abstract def"}, {"label" : "trace", "tail" : "(): Method", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Trace.trace", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLogger.html#trace:Trace.this.Method", "kind" : "abstract def"}, {"label" : "isTraceEnabled", "tail" : "(): Predicate", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Trace.isTraceEnabled", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLogger.html#isTraceEnabled:Trace.this.Predicate", "kind" : "abstract def"}, {"member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerComponent.Method", "error" : "unsupported entity"}, {"member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerComponent.Predicate", "error" : "unsupported entity"}], "shortDescription" : "Public SLF4J Logger interface."}, {"name" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI", "object" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerAPI$.html", "members_object" : [{"label" : "Proxy", "tail" : "", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Proxy", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerAPI$.html#Proxy[P,M]extendsSLF4JLoggerAPI[P,M]", "kind" : "trait"}, {"label" : "Error", "tail" : "", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Error", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerAPI$.html#Error[P,M]extendsSLF4JLoggerComponent[P,M]", "kind" : "trait"}, {"label" : "Warn", "tail" : "", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Warn", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerAPI$.html#Warn[P,M]extendsSLF4JLoggerComponent[P,M]", "kind" : "trait"}, {"label" : "Info", "tail" : "", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Info", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerAPI$.html#Info[P,M]extendsSLF4JLoggerComponent[P,M]", "kind" : "trait"}, {"label" : "Debug", "tail" : "", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Debug", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerAPI$.html#Debug[P,M]extendsSLF4JLoggerComponent[P,M]", "kind" : "trait"}, {"label" : "Trace", "tail" : "", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Trace", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerAPI$.html#Trace[P,M]extendsSLF4JLoggerComponent[P,M]", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerAPI$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerAPI$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerAPI$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerAPI$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerAPI$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerAPI$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerAPI$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerAPI$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerAPI$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerAPI$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerAPI$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerAPI$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerAPI$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerAPI$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerAPI$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerAPI$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerAPI$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerAPI$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerAPI$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerAPI.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerAPI.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerAPI.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerAPI.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerAPI.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerAPI.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerAPI.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerAPI.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerAPI.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerAPI.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerAPI.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerAPI.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerAPI.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerAPI.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerAPI.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerAPI.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerAPI.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerAPI.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerAPI.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerAPI.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "error", "tail" : "(): Method", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Error.error", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerAPI.html#error:Error.this.Method", "kind" : "abstract def"}, {"label" : "isErrorEnabled", "tail" : "(): Predicate", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Error.isErrorEnabled", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerAPI.html#isErrorEnabled:Error.this.Predicate", "kind" : "abstract def"}, {"label" : "warn", "tail" : "(): Method", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Warn.warn", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerAPI.html#warn:Warn.this.Method", "kind" : "abstract def"}, {"label" : "isWarnEnabled", "tail" : "(): Predicate", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Warn.isWarnEnabled", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerAPI.html#isWarnEnabled:Warn.this.Predicate", "kind" : "abstract def"}, {"label" : "info", "tail" : "(): Method", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Info.info", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerAPI.html#info:Info.this.Method", "kind" : "abstract def"}, {"label" : "isInfoEnabled", "tail" : "(): Predicate", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Info.isInfoEnabled", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerAPI.html#isInfoEnabled:Info.this.Predicate", "kind" : "abstract def"}, {"label" : "debug", "tail" : "(): Method", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Debug.debug", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerAPI.html#debug:Debug.this.Method", "kind" : "abstract def"}, {"label" : "isDebugEnabled", "tail" : "(): Predicate", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Debug.isDebugEnabled", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerAPI.html#isDebugEnabled:Debug.this.Predicate", "kind" : "abstract def"}, {"label" : "trace", "tail" : "(): Method", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Trace.trace", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerAPI.html#trace:Trace.this.Method", "kind" : "abstract def"}, {"label" : "isTraceEnabled", "tail" : "(): Predicate", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Trace.isTraceEnabled", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerAPI.html#isTraceEnabled:Trace.this.Predicate", "kind" : "abstract def"}, {"member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerComponent.Self", "error" : "unsupported entity"}, {"member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerComponent.Method", "error" : "unsupported entity"}, {"member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerComponent.Predicate", "error" : "unsupported entity"}], "shortDescription" : "This trait defines an SLF4J compatible logger with all five levels of logging."}, {"name" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerComponent", "trait" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerComponent.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerComponent.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerComponent.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerComponent.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerComponent.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerComponent.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerComponent.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerComponent.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerComponent.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerComponent.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerComponent.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerComponent.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerComponent.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerComponent.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerComponent.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerComponent.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerComponent.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerComponent.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerComponent.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JLoggerComponent.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerComponent.Self", "error" : "unsupported entity"}, {"member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerComponent.Method", "error" : "unsupported entity"}, {"member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerComponent.Predicate", "error" : "unsupported entity"}], "shortDescription" : ""}, {"name" : "com.tersesystems.blindsight.slf4j.SLF4JPredicate", "object" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JPredicate$.html", "members_object" : [{"label" : "Impl", "tail" : "", "member" : "com.tersesystems.blindsight.slf4j.SLF4JPredicate.Impl", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JPredicate$.html#ImplextendsSLF4JPredicate", "kind" : "class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JPredicate$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JPredicate$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JPredicate$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JPredicate$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JPredicate$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JPredicate$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JPredicate$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JPredicate$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JPredicate$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JPredicate$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JPredicate$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JPredicate$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JPredicate$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JPredicate$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JPredicate$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JPredicate$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JPredicate$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JPredicate$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JPredicate$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JPredicate.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JPredicate.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JPredicate.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JPredicate.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JPredicate.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JPredicate.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JPredicate.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JPredicate.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JPredicate.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JPredicate.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JPredicate.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JPredicate.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JPredicate.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JPredicate.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JPredicate.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JPredicate.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JPredicate.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JPredicate.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JPredicate.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JPredicate.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(instance: T)(arg0: ToMarkers[T]): Boolean", "member" : "com.tersesystems.blindsight.slf4j.SLF4JPredicate.apply", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JPredicate.html#apply[T](instance:T)(implicitevidence$1:com.tersesystems.blindsight.api.ToMarkers[T]):Boolean", "kind" : "abstract def"}, {"label" : "apply", "tail" : "(): Boolean", "member" : "com.tersesystems.blindsight.slf4j.SLF4JPredicate.apply", "link" : "com\/tersesystems\/blindsight\/slf4j\/SLF4JPredicate.html#apply():Boolean", "kind" : "abstract def"}], "shortDescription" : "This is the predicate that must be met before logging can happen."}, {"name" : "com.tersesystems.blindsight.slf4j.StrictSLF4JMethod", "object" : "com\/tersesystems\/blindsight\/slf4j\/StrictSLF4JMethod$.html", "members_object" : [{"label" : "Conditional", "tail" : "", "member" : "com.tersesystems.blindsight.slf4j.StrictSLF4JMethod.Conditional", "link" : "com\/tersesystems\/blindsight\/slf4j\/StrictSLF4JMethod$.html#ConditionalextendsStrictSLF4JMethod", "kind" : "class"}, {"label" : "Impl", "tail" : "", "member" : "com.tersesystems.blindsight.slf4j.StrictSLF4JMethod.Impl", "link" : "com\/tersesystems\/blindsight\/slf4j\/StrictSLF4JMethod$.html#ImplextendsStrictSLF4JMethod", "kind" : "class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/slf4j\/StrictSLF4JMethod$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/slf4j\/StrictSLF4JMethod$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/slf4j\/StrictSLF4JMethod$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/slf4j\/StrictSLF4JMethod$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/slf4j\/StrictSLF4JMethod$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/slf4j\/StrictSLF4JMethod$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/slf4j\/StrictSLF4JMethod$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/slf4j\/StrictSLF4JMethod$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/slf4j\/StrictSLF4JMethod$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/slf4j\/StrictSLF4JMethod$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/slf4j\/StrictSLF4JMethod$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/slf4j\/StrictSLF4JMethod$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/slf4j\/StrictSLF4JMethod$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/slf4j\/StrictSLF4JMethod$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/slf4j\/StrictSLF4JMethod$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/slf4j\/StrictSLF4JMethod$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/slf4j\/StrictSLF4JMethod$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/slf4j\/StrictSLF4JMethod$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/slf4j\/StrictSLF4JMethod$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/tersesystems\/blindsight\/slf4j\/StrictSLF4JMethod.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/slf4j\/StrictSLF4JMethod.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/slf4j\/StrictSLF4JMethod.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/slf4j\/StrictSLF4JMethod.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/slf4j\/StrictSLF4JMethod.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/slf4j\/StrictSLF4JMethod.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/slf4j\/StrictSLF4JMethod.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/slf4j\/StrictSLF4JMethod.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/slf4j\/StrictSLF4JMethod.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/slf4j\/StrictSLF4JMethod.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/slf4j\/StrictSLF4JMethod.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/slf4j\/StrictSLF4JMethod.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/slf4j\/StrictSLF4JMethod.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/slf4j\/StrictSLF4JMethod.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/slf4j\/StrictSLF4JMethod.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/slf4j\/StrictSLF4JMethod.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/slf4j\/StrictSLF4JMethod.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/slf4j\/StrictSLF4JMethod.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/slf4j\/StrictSLF4JMethod.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/slf4j\/StrictSLF4JMethod.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(markers: M, message: => String, args: A)(arg0: ToMarkers[M], arg1: ToArguments[A], line: Line, file: File, enclosing: Enclosing): Unit", "member" : "com.tersesystems.blindsight.slf4j.StrictSLF4JMethod.apply", "link" : "com\/tersesystems\/blindsight\/slf4j\/StrictSLF4JMethod.html#apply[M,A](markers:M,message:=>String,args:A)(implicitevidence$3:com.tersesystems.blindsight.api.ToMarkers[M],implicitevidence$4:com.tersesystems.blindsight.api.ToArguments[A],implicitline:sourcecode.Line,implicitfile:sourcecode.File,implicitenclosing:sourcecode.Enclosing):Unit", "kind" : "abstract def"}, {"label" : "apply", "tail" : "(markers: M, message: => String)(arg0: ToMarkers[M], line: Line, file: File, enclosing: Enclosing): Unit", "member" : "com.tersesystems.blindsight.slf4j.StrictSLF4JMethod.apply", "link" : "com\/tersesystems\/blindsight\/slf4j\/StrictSLF4JMethod.html#apply[M](markers:M,message:=>String)(implicitevidence$2:com.tersesystems.blindsight.api.ToMarkers[M],implicitline:sourcecode.Line,implicitfile:sourcecode.File,implicitenclosing:sourcecode.Enclosing):Unit", "kind" : "abstract def"}, {"label" : "apply", "tail" : "(message: => String, args: A)(arg0: ToArguments[A], line: Line, file: File, enclosing: Enclosing): Unit", "member" : "com.tersesystems.blindsight.slf4j.StrictSLF4JMethod.apply", "link" : "com\/tersesystems\/blindsight\/slf4j\/StrictSLF4JMethod.html#apply[A](message:=>String,args:A)(implicitevidence$1:com.tersesystems.blindsight.api.ToArguments[A],implicitline:sourcecode.Line,implicitfile:sourcecode.File,implicitenclosing:sourcecode.Enclosing):Unit", "kind" : "abstract def"}, {"label" : "apply", "tail" : "(message: => String)(line: Line, file: File, enclosing: Enclosing): Unit", "member" : "com.tersesystems.blindsight.slf4j.StrictSLF4JMethod.apply", "link" : "com\/tersesystems\/blindsight\/slf4j\/StrictSLF4JMethod.html#apply(message:=>String)(implicitline:sourcecode.Line,implicitfile:sourcecode.File,implicitenclosing:sourcecode.Enclosing):Unit", "kind" : "abstract def"}, {"label" : "when", "tail" : "(condition: => Boolean)(block: (StrictSLF4JMethod) => Unit): Unit", "member" : "com.tersesystems.blindsight.slf4j.StrictSLF4JMethod.when", "link" : "com\/tersesystems\/blindsight\/slf4j\/StrictSLF4JMethod.html#when(condition:=>Boolean)(block:com.tersesystems.blindsight.slf4j.StrictSLF4JMethod=>Unit):Unit", "kind" : "abstract def"}, {"label" : "level", "tail" : "(): Level", "member" : "com.tersesystems.blindsight.slf4j.StrictSLF4JMethod.level", "link" : "com\/tersesystems\/blindsight\/slf4j\/StrictSLF4JMethod.html#level:org.slf4j.event.Level", "kind" : "abstract def"}], "shortDescription" : "A strict logger method that only takes type class instances for statements."}, {"name" : "com.tersesystems.blindsight.slf4j.UncheckedSLF4JMethod", "object" : "com\/tersesystems\/blindsight\/slf4j\/UncheckedSLF4JMethod$.html", "members_object" : [{"label" : "Conditional", "tail" : "", "member" : "com.tersesystems.blindsight.slf4j.UncheckedSLF4JMethod.Conditional", "link" : "com\/tersesystems\/blindsight\/slf4j\/UncheckedSLF4JMethod$.html#ConditionalextendsUncheckedSLF4JMethod", "kind" : "class"}, {"label" : "Impl", "tail" : "", "member" : "com.tersesystems.blindsight.slf4j.UncheckedSLF4JMethod.Impl", "link" : "com\/tersesystems\/blindsight\/slf4j\/UncheckedSLF4JMethod$.html#ImplextendsUncheckedSLF4JMethod", "kind" : "class"}, {"label" : "warnIfChecked", "tail" : "(warning: => String)(line: Line, file: File): Unit", "member" : "com.tersesystems.blindsight.slf4j.UncheckedSLF4JMethod.warnIfChecked", "link" : "com\/tersesystems\/blindsight\/slf4j\/UncheckedSLF4JMethod$.html#warnIfChecked(warning:=>String)(implicitline:sourcecode.Line,implicitfile:sourcecode.File):Unit", "kind" : "def"}, {"label" : "isAnyWarning", "tail" : "(): Boolean", "member" : "com.tersesystems.blindsight.slf4j.UncheckedSLF4JMethod.isAnyWarning", "link" : "com\/tersesystems\/blindsight\/slf4j\/UncheckedSLF4JMethod$.html#isAnyWarning:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/slf4j\/UncheckedSLF4JMethod$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/slf4j\/UncheckedSLF4JMethod$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/slf4j\/UncheckedSLF4JMethod$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/slf4j\/UncheckedSLF4JMethod$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/slf4j\/UncheckedSLF4JMethod$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/slf4j\/UncheckedSLF4JMethod$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/slf4j\/UncheckedSLF4JMethod$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/slf4j\/UncheckedSLF4JMethod$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/slf4j\/UncheckedSLF4JMethod$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/slf4j\/UncheckedSLF4JMethod$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/slf4j\/UncheckedSLF4JMethod$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/slf4j\/UncheckedSLF4JMethod$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/slf4j\/UncheckedSLF4JMethod$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/slf4j\/UncheckedSLF4JMethod$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/slf4j\/UncheckedSLF4JMethod$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/slf4j\/UncheckedSLF4JMethod$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/slf4j\/UncheckedSLF4JMethod$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/slf4j\/UncheckedSLF4JMethod$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/slf4j\/UncheckedSLF4JMethod$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/tersesystems\/blindsight\/slf4j\/UncheckedSLF4JMethod.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/slf4j\/UncheckedSLF4JMethod.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/slf4j\/UncheckedSLF4JMethod.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/slf4j\/UncheckedSLF4JMethod.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/slf4j\/UncheckedSLF4JMethod.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/slf4j\/UncheckedSLF4JMethod.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/slf4j\/UncheckedSLF4JMethod.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/slf4j\/UncheckedSLF4JMethod.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/slf4j\/UncheckedSLF4JMethod.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/slf4j\/UncheckedSLF4JMethod.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/slf4j\/UncheckedSLF4JMethod.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/slf4j\/UncheckedSLF4JMethod.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/slf4j\/UncheckedSLF4JMethod.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/slf4j\/UncheckedSLF4JMethod.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/slf4j\/UncheckedSLF4JMethod.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/slf4j\/UncheckedSLF4JMethod.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/slf4j\/UncheckedSLF4JMethod.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/slf4j\/UncheckedSLF4JMethod.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/slf4j\/UncheckedSLF4JMethod.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/slf4j\/UncheckedSLF4JMethod.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(markers: Marker, message: => String, args: Any*)(line: Line, file: File, enclosing: Enclosing): Unit", "member" : "com.tersesystems.blindsight.slf4j.UncheckedSLF4JMethod.apply", "link" : "com\/tersesystems\/blindsight\/slf4j\/UncheckedSLF4JMethod.html#apply(markers:org.slf4j.Marker,message:=>String,args:Any*)(implicitline:sourcecode.Line,implicitfile:sourcecode.File,implicitenclosing:sourcecode.Enclosing):Unit", "kind" : "abstract def"}, {"label" : "apply", "tail" : "(markers: Marker, message: => String, arg1: Any, arg2: Any)(line: Line, file: File, enclosing: Enclosing): Unit", "member" : "com.tersesystems.blindsight.slf4j.UncheckedSLF4JMethod.apply", "link" : "com\/tersesystems\/blindsight\/slf4j\/UncheckedSLF4JMethod.html#apply(markers:org.slf4j.Marker,message:=>String,arg1:Any,arg2:Any)(implicitline:sourcecode.Line,implicitfile:sourcecode.File,implicitenclosing:sourcecode.Enclosing):Unit", "kind" : "abstract def"}, {"label" : "apply", "tail" : "(markers: Marker, message: => String, arg: Any)(line: Line, file: File, enclosing: Enclosing): Unit", "member" : "com.tersesystems.blindsight.slf4j.UncheckedSLF4JMethod.apply", "link" : "com\/tersesystems\/blindsight\/slf4j\/UncheckedSLF4JMethod.html#apply(markers:org.slf4j.Marker,message:=>String,arg:Any)(implicitline:sourcecode.Line,implicitfile:sourcecode.File,implicitenclosing:sourcecode.Enclosing):Unit", "kind" : "abstract def"}, {"label" : "apply", "tail" : "(markers: Marker, message: => String, args: Arguments)(line: Line, file: File, enclosing: Enclosing): Unit", "member" : "com.tersesystems.blindsight.slf4j.UncheckedSLF4JMethod.apply", "link" : "com\/tersesystems\/blindsight\/slf4j\/UncheckedSLF4JMethod.html#apply(markers:org.slf4j.Marker,message:=>String,args:com.tersesystems.blindsight.api.Arguments)(implicitline:sourcecode.Line,implicitfile:sourcecode.File,implicitenclosing:sourcecode.Enclosing):Unit", "kind" : "abstract def"}, {"label" : "apply", "tail" : "(markers: Marker, message: => String)(line: Line, file: File, enclosing: Enclosing): Unit", "member" : "com.tersesystems.blindsight.slf4j.UncheckedSLF4JMethod.apply", "link" : "com\/tersesystems\/blindsight\/slf4j\/UncheckedSLF4JMethod.html#apply(markers:org.slf4j.Marker,message:=>String)(implicitline:sourcecode.Line,implicitfile:sourcecode.File,implicitenclosing:sourcecode.Enclosing):Unit", "kind" : "abstract def"}, {"label" : "apply", "tail" : "(message: => String, args: Any*)(line: Line, file: File, enclosing: Enclosing): Unit", "member" : "com.tersesystems.blindsight.slf4j.UncheckedSLF4JMethod.apply", "link" : "com\/tersesystems\/blindsight\/slf4j\/UncheckedSLF4JMethod.html#apply(message:=>String,args:Any*)(implicitline:sourcecode.Line,implicitfile:sourcecode.File,implicitenclosing:sourcecode.Enclosing):Unit", "kind" : "abstract def"}, {"label" : "apply", "tail" : "(message: => String, arg1: Any, arg2: Any)(line: Line, file: File, enclosing: Enclosing): Unit", "member" : "com.tersesystems.blindsight.slf4j.UncheckedSLF4JMethod.apply", "link" : "com\/tersesystems\/blindsight\/slf4j\/UncheckedSLF4JMethod.html#apply(message:=>String,arg1:Any,arg2:Any)(implicitline:sourcecode.Line,implicitfile:sourcecode.File,implicitenclosing:sourcecode.Enclosing):Unit", "kind" : "abstract def"}, {"label" : "apply", "tail" : "(message: => String, arg: Any)(line: Line, file: File, enclosing: Enclosing): Unit", "member" : "com.tersesystems.blindsight.slf4j.UncheckedSLF4JMethod.apply", "link" : "com\/tersesystems\/blindsight\/slf4j\/UncheckedSLF4JMethod.html#apply(message:=>String,arg:Any)(implicitline:sourcecode.Line,implicitfile:sourcecode.File,implicitenclosing:sourcecode.Enclosing):Unit", "kind" : "abstract def"}, {"label" : "apply", "tail" : "(message: => String, args: Arguments)(line: Line, file: File, enclosing: Enclosing): Unit", "member" : "com.tersesystems.blindsight.slf4j.UncheckedSLF4JMethod.apply", "link" : "com\/tersesystems\/blindsight\/slf4j\/UncheckedSLF4JMethod.html#apply(message:=>String,args:com.tersesystems.blindsight.api.Arguments)(implicitline:sourcecode.Line,implicitfile:sourcecode.File,implicitenclosing:sourcecode.Enclosing):Unit", "kind" : "abstract def"}, {"label" : "apply", "tail" : "(instance: => String)(line: Line, file: File, enclosing: Enclosing): Unit", "member" : "com.tersesystems.blindsight.slf4j.UncheckedSLF4JMethod.apply", "link" : "com\/tersesystems\/blindsight\/slf4j\/UncheckedSLF4JMethod.html#apply(instance:=>String)(implicitline:sourcecode.Line,implicitfile:sourcecode.File,implicitenclosing:sourcecode.Enclosing):Unit", "kind" : "abstract def"}, {"label" : "when", "tail" : "(condition: => Boolean)(block: (UncheckedSLF4JMethod) => Unit): Unit", "member" : "com.tersesystems.blindsight.slf4j.UncheckedSLF4JMethod.when", "link" : "com\/tersesystems\/blindsight\/slf4j\/UncheckedSLF4JMethod.html#when(condition:=>Boolean)(block:com.tersesystems.blindsight.slf4j.UncheckedSLF4JMethod=>Unit):Unit", "kind" : "abstract def"}, {"label" : "level", "tail" : "(): Level", "member" : "com.tersesystems.blindsight.slf4j.UncheckedSLF4JMethod.level", "link" : "com\/tersesystems\/blindsight\/slf4j\/UncheckedSLF4JMethod.html#level:org.slf4j.event.Level", "kind" : "abstract def"}], "shortDescription" : "The logger method"}], "com.tersesystems.blindsight.fluent" : [{"name" : "com.tersesystems.blindsight.fluent.ExtendedFluentLogger", "trait" : "com\/tersesystems\/blindsight\/fluent\/ExtendedFluentLogger.html", "kind" : "trait", "members_trait" : [{"label" : "Predicate", "tail" : "", "member" : "com.tersesystems.blindsight.fluent.FluentLogger.Predicate", "link" : "com\/tersesystems\/blindsight\/fluent\/ExtendedFluentLogger.html#Predicate=com.tersesystems.blindsight.slf4j.SLF4JPredicate", "kind" : "type"}, {"label" : "Method", "tail" : "", "member" : "com.tersesystems.blindsight.fluent.FluentLogger.Method", "link" : "com\/tersesystems\/blindsight\/fluent\/ExtendedFluentLogger.html#Method=com.tersesystems.blindsight.fluent.FluentMethod", "kind" : "type"}, {"label" : "Self", "tail" : "", "member" : "com.tersesystems.blindsight.fluent.FluentLogger.Self", "link" : "com\/tersesystems\/blindsight\/fluent\/ExtendedFluentLogger.html#Self=com.tersesystems.blindsight.fluent.FluentLogger", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/fluent\/ExtendedFluentLogger.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/fluent\/ExtendedFluentLogger.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/fluent\/ExtendedFluentLogger.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/fluent\/ExtendedFluentLogger.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/fluent\/ExtendedFluentLogger.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/fluent\/ExtendedFluentLogger.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/fluent\/ExtendedFluentLogger.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/fluent\/ExtendedFluentLogger.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/fluent\/ExtendedFluentLogger.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/fluent\/ExtendedFluentLogger.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/fluent\/ExtendedFluentLogger.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/fluent\/ExtendedFluentLogger.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/fluent\/ExtendedFluentLogger.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/fluent\/ExtendedFluentLogger.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/fluent\/ExtendedFluentLogger.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/fluent\/ExtendedFluentLogger.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/fluent\/ExtendedFluentLogger.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/fluent\/ExtendedFluentLogger.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/fluent\/ExtendedFluentLogger.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "sourceInfoMarker", "tail" : "(level: Level, line: Line, file: File, enclosing: Enclosing): Markers", "member" : "com.tersesystems.blindsight.api.mixins.SourceInfoMixin.sourceInfoMarker", "link" : "com\/tersesystems\/blindsight\/fluent\/ExtendedFluentLogger.html#sourceInfoMarker(level:org.slf4j.event.Level,line:sourcecode.Line,file:sourcecode.File,enclosing:sourcecode.Enclosing):com.tersesystems.blindsight.api.Markers", "kind" : "abstract def"}, {"label" : "underlying", "tail" : "(): org.slf4j.Logger", "member" : "com.tersesystems.blindsight.api.mixins.UnderlyingMixin.underlying", "link" : "com\/tersesystems\/blindsight\/fluent\/ExtendedFluentLogger.html#underlying:org.slf4j.Logger", "kind" : "abstract def"}, {"label" : "parameterList", "tail" : "(level: Level): ParameterList", "member" : "com.tersesystems.blindsight.api.mixins.ParameterListMixin.parameterList", "link" : "com\/tersesystems\/blindsight\/fluent\/ExtendedFluentLogger.html#parameterList(level:org.slf4j.event.Level):com.tersesystems.blindsight.api.ParameterList", "kind" : "abstract def"}, {"label" : "predicate", "tail" : "(level: Level): SLF4JPredicate", "member" : "com.tersesystems.blindsight.api.mixins.PredicateMixin.predicate", "link" : "com\/tersesystems\/blindsight\/fluent\/ExtendedFluentLogger.html#predicate(level:org.slf4j.event.Level):Predicate", "kind" : "abstract def"}, {"label" : "onCondition", "tail" : "(test: => Boolean): Self", "member" : "com.tersesystems.blindsight.api.mixins.OnConditionMixin.onCondition", "link" : "com\/tersesystems\/blindsight\/fluent\/ExtendedFluentLogger.html#onCondition(test:=>Boolean):OnConditionMixin.this.Self", "kind" : "abstract def"}, {"label" : "markers", "tail" : "(): Markers", "member" : "com.tersesystems.blindsight.api.mixins.MarkerMixin.markers", "link" : "com\/tersesystems\/blindsight\/fluent\/ExtendedFluentLogger.html#markers:com.tersesystems.blindsight.api.Markers", "kind" : "abstract def"}, {"label" : "withMarker", "tail" : "(instance: T)(arg0: ToMarkers[T]): Self", "member" : "com.tersesystems.blindsight.api.mixins.MarkerMixin.withMarker", "link" : "com\/tersesystems\/blindsight\/fluent\/ExtendedFluentLogger.html#withMarker[T](instance:T)(implicitevidence$1:com.tersesystems.blindsight.api.ToMarkers[T]):MarkerMixin.this.Self", "kind" : "abstract def"}, {"label" : "error", "tail" : "(): Method", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Error.error", "link" : "com\/tersesystems\/blindsight\/fluent\/ExtendedFluentLogger.html#error:Error.this.Method", "kind" : "abstract def"}, {"label" : "isErrorEnabled", "tail" : "(): Predicate", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Error.isErrorEnabled", "link" : "com\/tersesystems\/blindsight\/fluent\/ExtendedFluentLogger.html#isErrorEnabled:Error.this.Predicate", "kind" : "abstract def"}, {"label" : "warn", "tail" : "(): Method", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Warn.warn", "link" : "com\/tersesystems\/blindsight\/fluent\/ExtendedFluentLogger.html#warn:Warn.this.Method", "kind" : "abstract def"}, {"label" : "isWarnEnabled", "tail" : "(): Predicate", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Warn.isWarnEnabled", "link" : "com\/tersesystems\/blindsight\/fluent\/ExtendedFluentLogger.html#isWarnEnabled:Warn.this.Predicate", "kind" : "abstract def"}, {"label" : "info", "tail" : "(): Method", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Info.info", "link" : "com\/tersesystems\/blindsight\/fluent\/ExtendedFluentLogger.html#info:Info.this.Method", "kind" : "abstract def"}, {"label" : "isInfoEnabled", "tail" : "(): Predicate", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Info.isInfoEnabled", "link" : "com\/tersesystems\/blindsight\/fluent\/ExtendedFluentLogger.html#isInfoEnabled:Info.this.Predicate", "kind" : "abstract def"}, {"label" : "debug", "tail" : "(): Method", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Debug.debug", "link" : "com\/tersesystems\/blindsight\/fluent\/ExtendedFluentLogger.html#debug:Debug.this.Method", "kind" : "abstract def"}, {"label" : "isDebugEnabled", "tail" : "(): Predicate", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Debug.isDebugEnabled", "link" : "com\/tersesystems\/blindsight\/fluent\/ExtendedFluentLogger.html#isDebugEnabled:Debug.this.Predicate", "kind" : "abstract def"}, {"label" : "trace", "tail" : "(): Method", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Trace.trace", "link" : "com\/tersesystems\/blindsight\/fluent\/ExtendedFluentLogger.html#trace:Trace.this.Method", "kind" : "abstract def"}, {"label" : "isTraceEnabled", "tail" : "(): Predicate", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Trace.isTraceEnabled", "link" : "com\/tersesystems\/blindsight\/fluent\/ExtendedFluentLogger.html#isTraceEnabled:Trace.this.Predicate", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "com.tersesystems.blindsight.fluent.FluentAPI", "trait" : "com\/tersesystems\/blindsight\/fluent\/FluentAPI.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentAPI.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentAPI.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentAPI.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentAPI.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentAPI.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentAPI.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentAPI.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentAPI.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentAPI.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentAPI.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentAPI.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentAPI.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentAPI.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentAPI.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentAPI.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentAPI.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentAPI.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentAPI.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentAPI.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "cause", "tail" : "(e: Throwable): Builder", "member" : "com.tersesystems.blindsight.fluent.FluentAPI.cause", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentAPI.html#cause(e:Throwable):com.tersesystems.blindsight.fluent.FluentMethod.Builder", "kind" : "abstract def"}, {"label" : "argument", "tail" : "(instance: => T)(arg0: ToArguments[T]): Builder", "member" : "com.tersesystems.blindsight.fluent.FluentAPI.argument", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentAPI.html#argument[T](instance:=>T)(implicitevidence$3:com.tersesystems.blindsight.api.ToArguments[T]):com.tersesystems.blindsight.fluent.FluentMethod.Builder", "kind" : "abstract def"}, {"label" : "message", "tail" : "(instance: => T)(arg0: ToMessage[T]): Builder", "member" : "com.tersesystems.blindsight.fluent.FluentAPI.message", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentAPI.html#message[T](instance:=>T)(implicitevidence$2:com.tersesystems.blindsight.api.ToMessage[T]):com.tersesystems.blindsight.fluent.FluentMethod.Builder", "kind" : "abstract def"}, {"label" : "marker", "tail" : "(instance: => T)(arg0: ToMarkers[T]): Builder", "member" : "com.tersesystems.blindsight.fluent.FluentAPI.marker", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentAPI.html#marker[T](instance:=>T)(implicitevidence$1:com.tersesystems.blindsight.api.ToMarkers[T]):com.tersesystems.blindsight.fluent.FluentMethod.Builder", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "com.tersesystems.blindsight.fluent.FluentLogger", "object" : "com\/tersesystems\/blindsight\/fluent\/FluentLogger$.html", "members_object" : [{"label" : "Conditional", "tail" : "", "member" : "com.tersesystems.blindsight.fluent.FluentLogger.Conditional", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentLogger$.html#ConditionalextendsExtendedFluentLogger", "kind" : "class"}, {"label" : "Impl", "tail" : "", "member" : "com.tersesystems.blindsight.fluent.FluentLogger.Impl", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentLogger$.html#ImplextendsExtendedFluentLogger", "kind" : "class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentLogger$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentLogger$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentLogger$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentLogger$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentLogger$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentLogger$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentLogger$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentLogger$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentLogger$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentLogger$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentLogger$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentLogger$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentLogger$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentLogger$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentLogger$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentLogger$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentLogger$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentLogger$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentLogger$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/tersesystems\/blindsight\/fluent\/FluentLogger.html", "kind" : "trait", "members_trait" : [{"label" : "Predicate", "tail" : "", "member" : "com.tersesystems.blindsight.fluent.FluentLogger.Predicate", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentLogger.html#Predicate=com.tersesystems.blindsight.slf4j.SLF4JPredicate", "kind" : "type"}, {"label" : "Method", "tail" : "", "member" : "com.tersesystems.blindsight.fluent.FluentLogger.Method", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentLogger.html#Method=com.tersesystems.blindsight.fluent.FluentMethod", "kind" : "type"}, {"label" : "Self", "tail" : "", "member" : "com.tersesystems.blindsight.fluent.FluentLogger.Self", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentLogger.html#Self=com.tersesystems.blindsight.fluent.FluentLogger", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentLogger.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentLogger.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentLogger.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentLogger.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentLogger.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentLogger.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentLogger.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentLogger.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentLogger.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentLogger.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentLogger.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentLogger.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentLogger.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentLogger.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentLogger.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentLogger.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentLogger.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentLogger.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentLogger.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "onCondition", "tail" : "(test: => Boolean): Self", "member" : "com.tersesystems.blindsight.api.mixins.OnConditionMixin.onCondition", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentLogger.html#onCondition(test:=>Boolean):OnConditionMixin.this.Self", "kind" : "abstract def"}, {"label" : "markers", "tail" : "(): Markers", "member" : "com.tersesystems.blindsight.api.mixins.MarkerMixin.markers", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentLogger.html#markers:com.tersesystems.blindsight.api.Markers", "kind" : "abstract def"}, {"label" : "withMarker", "tail" : "(instance: T)(arg0: ToMarkers[T]): Self", "member" : "com.tersesystems.blindsight.api.mixins.MarkerMixin.withMarker", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentLogger.html#withMarker[T](instance:T)(implicitevidence$1:com.tersesystems.blindsight.api.ToMarkers[T]):MarkerMixin.this.Self", "kind" : "abstract def"}, {"label" : "error", "tail" : "(): Method", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Error.error", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentLogger.html#error:Error.this.Method", "kind" : "abstract def"}, {"label" : "isErrorEnabled", "tail" : "(): Predicate", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Error.isErrorEnabled", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentLogger.html#isErrorEnabled:Error.this.Predicate", "kind" : "abstract def"}, {"label" : "warn", "tail" : "(): Method", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Warn.warn", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentLogger.html#warn:Warn.this.Method", "kind" : "abstract def"}, {"label" : "isWarnEnabled", "tail" : "(): Predicate", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Warn.isWarnEnabled", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentLogger.html#isWarnEnabled:Warn.this.Predicate", "kind" : "abstract def"}, {"label" : "info", "tail" : "(): Method", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Info.info", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentLogger.html#info:Info.this.Method", "kind" : "abstract def"}, {"label" : "isInfoEnabled", "tail" : "(): Predicate", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Info.isInfoEnabled", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentLogger.html#isInfoEnabled:Info.this.Predicate", "kind" : "abstract def"}, {"label" : "debug", "tail" : "(): Method", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Debug.debug", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentLogger.html#debug:Debug.this.Method", "kind" : "abstract def"}, {"label" : "isDebugEnabled", "tail" : "(): Predicate", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Debug.isDebugEnabled", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentLogger.html#isDebugEnabled:Debug.this.Predicate", "kind" : "abstract def"}, {"label" : "trace", "tail" : "(): Method", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Trace.trace", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentLogger.html#trace:Trace.this.Method", "kind" : "abstract def"}, {"label" : "isTraceEnabled", "tail" : "(): Predicate", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Trace.isTraceEnabled", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentLogger.html#isTraceEnabled:Trace.this.Predicate", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "com.tersesystems.blindsight.fluent.FluentMethod", "object" : "com\/tersesystems\/blindsight\/fluent\/FluentMethod$.html", "members_object" : [{"label" : "Conditional", "tail" : "", "member" : "com.tersesystems.blindsight.fluent.FluentMethod.Conditional", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentMethod$.html#ConditionalextendsFluentMethod.Impl", "kind" : "class"}, {"label" : "Impl", "tail" : "", "member" : "com.tersesystems.blindsight.fluent.FluentMethod.Impl", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentMethod$.html#ImplextendsFluentMethod", "kind" : "class"}, {"label" : "Builder", "tail" : "", "member" : "com.tersesystems.blindsight.fluent.FluentMethod.Builder", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentMethod$.html#BuilderextendsFluentAPI", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentMethod$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentMethod$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentMethod$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentMethod$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentMethod$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentMethod$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentMethod$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentMethod$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentMethod$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentMethod$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentMethod$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentMethod$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentMethod$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentMethod$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentMethod$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentMethod$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentMethod$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentMethod$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentMethod$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/tersesystems\/blindsight\/fluent\/FluentMethod.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentMethod.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentMethod.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentMethod.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentMethod.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentMethod.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentMethod.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentMethod.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentMethod.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentMethod.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentMethod.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentMethod.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentMethod.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentMethod.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentMethod.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentMethod.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentMethod.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentMethod.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentMethod.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentMethod.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(instance: => T)(arg0: ToStatement[T], line: Line, file: File, enclosing: Enclosing): Unit", "member" : "com.tersesystems.blindsight.fluent.FluentMethod.apply", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentMethod.html#apply[T](instance:=>T)(implicitevidence$1:com.tersesystems.blindsight.api.ToStatement[T],implicitline:sourcecode.Line,implicitfile:sourcecode.File,implicitenclosing:sourcecode.Enclosing):Unit", "kind" : "abstract def"}, {"label" : "when", "tail" : "(condition: => Boolean)(block: (FluentMethod) => Unit): Unit", "member" : "com.tersesystems.blindsight.fluent.FluentMethod.when", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentMethod.html#when(condition:=>Boolean)(block:com.tersesystems.blindsight.fluent.FluentMethod=>Unit):Unit", "kind" : "abstract def"}, {"label" : "cause", "tail" : "(e: Throwable): Builder", "member" : "com.tersesystems.blindsight.fluent.FluentAPI.cause", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentMethod.html#cause(e:Throwable):com.tersesystems.blindsight.fluent.FluentMethod.Builder", "kind" : "abstract def"}, {"label" : "argument", "tail" : "(instance: => T)(arg0: ToArguments[T]): Builder", "member" : "com.tersesystems.blindsight.fluent.FluentAPI.argument", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentMethod.html#argument[T](instance:=>T)(implicitevidence$3:com.tersesystems.blindsight.api.ToArguments[T]):com.tersesystems.blindsight.fluent.FluentMethod.Builder", "kind" : "abstract def"}, {"label" : "message", "tail" : "(instance: => T)(arg0: ToMessage[T]): Builder", "member" : "com.tersesystems.blindsight.fluent.FluentAPI.message", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentMethod.html#message[T](instance:=>T)(implicitevidence$2:com.tersesystems.blindsight.api.ToMessage[T]):com.tersesystems.blindsight.fluent.FluentMethod.Builder", "kind" : "abstract def"}, {"label" : "marker", "tail" : "(instance: => T)(arg0: ToMarkers[T]): Builder", "member" : "com.tersesystems.blindsight.fluent.FluentAPI.marker", "link" : "com\/tersesystems\/blindsight\/fluent\/FluentMethod.html#marker[T](instance:=>T)(implicitevidence$1:com.tersesystems.blindsight.api.ToMarkers[T]):com.tersesystems.blindsight.fluent.FluentMethod.Builder", "kind" : "abstract def"}], "shortDescription" : ""}], "com.tersesystems.blindsight.semantic" : [{"name" : "com.tersesystems.blindsight.semantic.ExtendedSemanticLogger", "trait" : "com\/tersesystems\/blindsight\/semantic\/ExtendedSemanticLogger.html", "kind" : "trait", "members_trait" : [{"label" : "Self", "tail" : "", "member" : "com.tersesystems.blindsight.semantic.SemanticLogger.Self", "link" : "com\/tersesystems\/blindsight\/semantic\/ExtendedSemanticLogger.html#Self[T]=com.tersesystems.blindsight.semantic.SemanticLogger[T]", "kind" : "type"}, {"label" : "Method", "tail" : "", "member" : "com.tersesystems.blindsight.semantic.SemanticLoggerComponent.Method", "link" : "com\/tersesystems\/blindsight\/semantic\/ExtendedSemanticLogger.html#Method[T]=M[T]", "kind" : "type"}, {"label" : "Predicate", "tail" : "", "member" : "com.tersesystems.blindsight.semantic.SemanticLoggerComponent.Predicate", "link" : "com\/tersesystems\/blindsight\/semantic\/ExtendedSemanticLogger.html#Predicate=P", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/semantic\/ExtendedSemanticLogger.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/semantic\/ExtendedSemanticLogger.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/semantic\/ExtendedSemanticLogger.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/semantic\/ExtendedSemanticLogger.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/semantic\/ExtendedSemanticLogger.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/semantic\/ExtendedSemanticLogger.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/semantic\/ExtendedSemanticLogger.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/semantic\/ExtendedSemanticLogger.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/semantic\/ExtendedSemanticLogger.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/semantic\/ExtendedSemanticLogger.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/semantic\/ExtendedSemanticLogger.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/semantic\/ExtendedSemanticLogger.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/semantic\/ExtendedSemanticLogger.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/semantic\/ExtendedSemanticLogger.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/semantic\/ExtendedSemanticLogger.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/semantic\/ExtendedSemanticLogger.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/semantic\/ExtendedSemanticLogger.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/semantic\/ExtendedSemanticLogger.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/semantic\/ExtendedSemanticLogger.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "sourceInfoMarker", "tail" : "(level: Level, line: Line, file: File, enclosing: Enclosing): Markers", "member" : "com.tersesystems.blindsight.api.mixins.SourceInfoMixin.sourceInfoMarker", "link" : "com\/tersesystems\/blindsight\/semantic\/ExtendedSemanticLogger.html#sourceInfoMarker(level:org.slf4j.event.Level,line:sourcecode.Line,file:sourcecode.File,enclosing:sourcecode.Enclosing):com.tersesystems.blindsight.api.Markers", "kind" : "abstract def"}, {"label" : "parameterList", "tail" : "(level: Level): ParameterList", "member" : "com.tersesystems.blindsight.api.mixins.ParameterListMixin.parameterList", "link" : "com\/tersesystems\/blindsight\/semantic\/ExtendedSemanticLogger.html#parameterList(level:org.slf4j.event.Level):com.tersesystems.blindsight.api.ParameterList", "kind" : "abstract def"}, {"label" : "underlying", "tail" : "(): org.slf4j.Logger", "member" : "com.tersesystems.blindsight.api.mixins.UnderlyingMixin.underlying", "link" : "com\/tersesystems\/blindsight\/semantic\/ExtendedSemanticLogger.html#underlying:org.slf4j.Logger", "kind" : "abstract def"}, {"label" : "predicate", "tail" : "(level: Level): SLF4JPredicate", "member" : "com.tersesystems.blindsight.api.mixins.PredicateMixin.predicate", "link" : "com\/tersesystems\/blindsight\/semantic\/ExtendedSemanticLogger.html#predicate(level:org.slf4j.event.Level):Predicate", "kind" : "abstract def"}, {"label" : "onCondition", "tail" : "(test: => Boolean): Self[StatementType]", "member" : "com.tersesystems.blindsight.semantic.SemanticLogger.onCondition", "link" : "com\/tersesystems\/blindsight\/semantic\/ExtendedSemanticLogger.html#onCondition(test:=>Boolean):SemanticLogger.this.Self[StatementType]", "kind" : "abstract def"}, {"label" : "refine", "tail" : "(arg0: ToStatement[T]): Self[T]", "member" : "com.tersesystems.blindsight.semantic.SemanticRefineMixin.refine", "link" : "com\/tersesystems\/blindsight\/semantic\/ExtendedSemanticLogger.html#refine[T<:MessageType](implicitevidence$1:com.tersesystems.blindsight.api.ToStatement[T]):SemanticRefineMixin.this.Self[T]", "kind" : "abstract def"}, {"label" : "markers", "tail" : "(): Markers", "member" : "com.tersesystems.blindsight.api.mixins.SemanticMarkerMixin.markers", "link" : "com\/tersesystems\/blindsight\/semantic\/ExtendedSemanticLogger.html#markers:com.tersesystems.blindsight.api.Markers", "kind" : "abstract def"}, {"label" : "withMarker", "tail" : "(instance: => T)(arg0: ToMarkers[T]): Self[StatementType]", "member" : "com.tersesystems.blindsight.api.mixins.SemanticMarkerMixin.withMarker", "link" : "com\/tersesystems\/blindsight\/semantic\/ExtendedSemanticLogger.html#withMarker[T](instance:=>T)(implicitevidence$1:com.tersesystems.blindsight.api.ToMarkers[T]):SemanticMarkerMixin.this.Self[StatementType]", "kind" : "abstract def"}, {"label" : "error", "tail" : "(): Method[StatementType]", "member" : "com.tersesystems.blindsight.semantic.SemanticLoggerAPI.Error.error", "link" : "com\/tersesystems\/blindsight\/semantic\/ExtendedSemanticLogger.html#error:Error.this.Method[MessageType]", "kind" : "abstract def"}, {"label" : "isErrorEnabled", "tail" : "(): Predicate", "member" : "com.tersesystems.blindsight.semantic.SemanticLoggerAPI.Error.isErrorEnabled", "link" : "com\/tersesystems\/blindsight\/semantic\/ExtendedSemanticLogger.html#isErrorEnabled:Error.this.Predicate", "kind" : "abstract def"}, {"label" : "warn", "tail" : "(): Method[StatementType]", "member" : "com.tersesystems.blindsight.semantic.SemanticLoggerAPI.Warn.warn", "link" : "com\/tersesystems\/blindsight\/semantic\/ExtendedSemanticLogger.html#warn:Warn.this.Method[MessageType]", "kind" : "abstract def"}, {"label" : "isWarnEnabled", "tail" : "(): Predicate", "member" : "com.tersesystems.blindsight.semantic.SemanticLoggerAPI.Warn.isWarnEnabled", "link" : "com\/tersesystems\/blindsight\/semantic\/ExtendedSemanticLogger.html#isWarnEnabled:Warn.this.Predicate", "kind" : "abstract def"}, {"label" : "info", "tail" : "(): Method[StatementType]", "member" : "com.tersesystems.blindsight.semantic.SemanticLoggerAPI.Info.info", "link" : "com\/tersesystems\/blindsight\/semantic\/ExtendedSemanticLogger.html#info:Info.this.Method[MessageType]", "kind" : "abstract def"}, {"label" : "isInfoEnabled", "tail" : "(): Predicate", "member" : "com.tersesystems.blindsight.semantic.SemanticLoggerAPI.Info.isInfoEnabled", "link" : "com\/tersesystems\/blindsight\/semantic\/ExtendedSemanticLogger.html#isInfoEnabled:Info.this.Predicate", "kind" : "abstract def"}, {"label" : "debug", "tail" : "(): Method[StatementType]", "member" : "com.tersesystems.blindsight.semantic.SemanticLoggerAPI.Debug.debug", "link" : "com\/tersesystems\/blindsight\/semantic\/ExtendedSemanticLogger.html#debug:Debug.this.Method[MessageType]", "kind" : "abstract def"}, {"label" : "isDebugEnabled", "tail" : "(): Predicate", "member" : "com.tersesystems.blindsight.semantic.SemanticLoggerAPI.Debug.isDebugEnabled", "link" : "com\/tersesystems\/blindsight\/semantic\/ExtendedSemanticLogger.html#isDebugEnabled:Debug.this.Predicate", "kind" : "abstract def"}, {"label" : "trace", "tail" : "(): Method[StatementType]", "member" : "com.tersesystems.blindsight.semantic.SemanticLoggerAPI.Trace.trace", "link" : "com\/tersesystems\/blindsight\/semantic\/ExtendedSemanticLogger.html#trace:Trace.this.Method[MessageType]", "kind" : "abstract def"}, {"label" : "isTraceEnabled", "tail" : "(): Predicate", "member" : "com.tersesystems.blindsight.semantic.SemanticLoggerAPI.Trace.isTraceEnabled", "link" : "com\/tersesystems\/blindsight\/semantic\/ExtendedSemanticLogger.html#isTraceEnabled:Trace.this.Predicate", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "com.tersesystems.blindsight.semantic.SemanticLogger", "object" : "com\/tersesystems\/blindsight\/semantic\/SemanticLogger$.html", "members_object" : [{"label" : "Conditional", "tail" : "", "member" : "com.tersesystems.blindsight.semantic.SemanticLogger.Conditional", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLogger$.html#Conditional[StatementType]extendsExtendedSemanticLogger[StatementType]", "kind" : "class"}, {"label" : "Impl", "tail" : "", "member" : "com.tersesystems.blindsight.semantic.SemanticLogger.Impl", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLogger$.html#Impl[StatementType]extendsExtendedSemanticLogger[StatementType]withSourceInfoMixin", "kind" : "class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLogger$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLogger$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLogger$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLogger$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLogger$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLogger$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLogger$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLogger$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLogger$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLogger$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLogger$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLogger$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLogger$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLogger$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLogger$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLogger$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLogger$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLogger$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLogger$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/tersesystems\/blindsight\/semantic\/SemanticLogger.html", "kind" : "trait", "members_trait" : [{"label" : "Self", "tail" : "", "member" : "com.tersesystems.blindsight.semantic.SemanticLogger.Self", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLogger.html#Self[T]=com.tersesystems.blindsight.semantic.SemanticLogger[T]", "kind" : "type"}, {"label" : "Method", "tail" : "", "member" : "com.tersesystems.blindsight.semantic.SemanticLoggerComponent.Method", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLogger.html#Method[T]=M[T]", "kind" : "type"}, {"label" : "Predicate", "tail" : "", "member" : "com.tersesystems.blindsight.semantic.SemanticLoggerComponent.Predicate", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLogger.html#Predicate=P", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLogger.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLogger.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLogger.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLogger.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLogger.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLogger.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLogger.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLogger.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLogger.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLogger.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLogger.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLogger.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLogger.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLogger.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLogger.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLogger.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLogger.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLogger.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLogger.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "onCondition", "tail" : "(test: => Boolean): Self[StatementType]", "member" : "com.tersesystems.blindsight.semantic.SemanticLogger.onCondition", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLogger.html#onCondition(test:=>Boolean):SemanticLogger.this.Self[StatementType]", "kind" : "abstract def"}, {"label" : "refine", "tail" : "(arg0: ToStatement[T]): Self[T]", "member" : "com.tersesystems.blindsight.semantic.SemanticRefineMixin.refine", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLogger.html#refine[T<:MessageType](implicitevidence$1:com.tersesystems.blindsight.api.ToStatement[T]):SemanticRefineMixin.this.Self[T]", "kind" : "abstract def"}, {"label" : "markers", "tail" : "(): Markers", "member" : "com.tersesystems.blindsight.api.mixins.SemanticMarkerMixin.markers", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLogger.html#markers:com.tersesystems.blindsight.api.Markers", "kind" : "abstract def"}, {"label" : "withMarker", "tail" : "(instance: => T)(arg0: ToMarkers[T]): Self[StatementType]", "member" : "com.tersesystems.blindsight.api.mixins.SemanticMarkerMixin.withMarker", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLogger.html#withMarker[T](instance:=>T)(implicitevidence$1:com.tersesystems.blindsight.api.ToMarkers[T]):SemanticMarkerMixin.this.Self[StatementType]", "kind" : "abstract def"}, {"label" : "error", "tail" : "(): Method[StatementType]", "member" : "com.tersesystems.blindsight.semantic.SemanticLoggerAPI.Error.error", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLogger.html#error:Error.this.Method[MessageType]", "kind" : "abstract def"}, {"label" : "isErrorEnabled", "tail" : "(): Predicate", "member" : "com.tersesystems.blindsight.semantic.SemanticLoggerAPI.Error.isErrorEnabled", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLogger.html#isErrorEnabled:Error.this.Predicate", "kind" : "abstract def"}, {"label" : "warn", "tail" : "(): Method[StatementType]", "member" : "com.tersesystems.blindsight.semantic.SemanticLoggerAPI.Warn.warn", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLogger.html#warn:Warn.this.Method[MessageType]", "kind" : "abstract def"}, {"label" : "isWarnEnabled", "tail" : "(): Predicate", "member" : "com.tersesystems.blindsight.semantic.SemanticLoggerAPI.Warn.isWarnEnabled", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLogger.html#isWarnEnabled:Warn.this.Predicate", "kind" : "abstract def"}, {"label" : "info", "tail" : "(): Method[StatementType]", "member" : "com.tersesystems.blindsight.semantic.SemanticLoggerAPI.Info.info", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLogger.html#info:Info.this.Method[MessageType]", "kind" : "abstract def"}, {"label" : "isInfoEnabled", "tail" : "(): Predicate", "member" : "com.tersesystems.blindsight.semantic.SemanticLoggerAPI.Info.isInfoEnabled", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLogger.html#isInfoEnabled:Info.this.Predicate", "kind" : "abstract def"}, {"label" : "debug", "tail" : "(): Method[StatementType]", "member" : "com.tersesystems.blindsight.semantic.SemanticLoggerAPI.Debug.debug", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLogger.html#debug:Debug.this.Method[MessageType]", "kind" : "abstract def"}, {"label" : "isDebugEnabled", "tail" : "(): Predicate", "member" : "com.tersesystems.blindsight.semantic.SemanticLoggerAPI.Debug.isDebugEnabled", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLogger.html#isDebugEnabled:Debug.this.Predicate", "kind" : "abstract def"}, {"label" : "trace", "tail" : "(): Method[StatementType]", "member" : "com.tersesystems.blindsight.semantic.SemanticLoggerAPI.Trace.trace", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLogger.html#trace:Trace.this.Method[MessageType]", "kind" : "abstract def"}, {"label" : "isTraceEnabled", "tail" : "(): Predicate", "member" : "com.tersesystems.blindsight.semantic.SemanticLoggerAPI.Trace.isTraceEnabled", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLogger.html#isTraceEnabled:Trace.this.Predicate", "kind" : "abstract def"}], "shortDescription" : "This trait defines an SLF4J compatible logger with all five levels of logging."}, {"name" : "com.tersesystems.blindsight.semantic.SemanticLoggerAPI", "object" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerAPI$.html", "members_object" : [{"label" : "Error", "tail" : "", "member" : "com.tersesystems.blindsight.semantic.SemanticLoggerAPI.Error", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerAPI$.html#Error[MessageType,P,M[_]]extendsSemanticLoggerComponent[MessageType,P,M]", "kind" : "trait"}, {"label" : "Warn", "tail" : "", "member" : "com.tersesystems.blindsight.semantic.SemanticLoggerAPI.Warn", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerAPI$.html#Warn[MessageType,P,M[_]]extendsSemanticLoggerComponent[MessageType,P,M]", "kind" : "trait"}, {"label" : "Info", "tail" : "", "member" : "com.tersesystems.blindsight.semantic.SemanticLoggerAPI.Info", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerAPI$.html#Info[MessageType,P,M[_]]extendsSemanticLoggerComponent[MessageType,P,M]", "kind" : "trait"}, {"label" : "Debug", "tail" : "", "member" : "com.tersesystems.blindsight.semantic.SemanticLoggerAPI.Debug", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerAPI$.html#Debug[MessageType,P,M[_]]extendsSemanticLoggerComponent[MessageType,P,M]", "kind" : "trait"}, {"label" : "Trace", "tail" : "", "member" : "com.tersesystems.blindsight.semantic.SemanticLoggerAPI.Trace", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerAPI$.html#Trace[MessageType,P,M[_]]extendsSemanticLoggerComponent[MessageType,P,M]", "kind" : "trait"}, {"label" : "Proxy", "tail" : "", "member" : "com.tersesystems.blindsight.semantic.SemanticLoggerAPI.Proxy", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerAPI$.html#Proxy[BaseType,P,M[_]]extendsSemanticLoggerAPI[BaseType,P,M]", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerAPI$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerAPI$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerAPI$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerAPI$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerAPI$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerAPI$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerAPI$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerAPI$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerAPI$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerAPI$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerAPI$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerAPI$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerAPI$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerAPI$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerAPI$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerAPI$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerAPI$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerAPI$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerAPI$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerAPI.html", "kind" : "trait", "members_trait" : [{"label" : "Method", "tail" : "", "member" : "com.tersesystems.blindsight.semantic.SemanticLoggerComponent.Method", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerAPI.html#Method[T]=M[T]", "kind" : "type"}, {"label" : "Predicate", "tail" : "", "member" : "com.tersesystems.blindsight.semantic.SemanticLoggerComponent.Predicate", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerAPI.html#Predicate=P", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerAPI.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerAPI.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerAPI.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerAPI.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerAPI.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerAPI.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerAPI.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerAPI.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerAPI.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerAPI.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerAPI.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerAPI.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerAPI.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerAPI.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerAPI.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerAPI.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerAPI.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerAPI.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerAPI.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "error", "tail" : "(): Method[MessageType]", "member" : "com.tersesystems.blindsight.semantic.SemanticLoggerAPI.Error.error", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerAPI.html#error:Error.this.Method[MessageType]", "kind" : "abstract def"}, {"label" : "isErrorEnabled", "tail" : "(): Predicate", "member" : "com.tersesystems.blindsight.semantic.SemanticLoggerAPI.Error.isErrorEnabled", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerAPI.html#isErrorEnabled:Error.this.Predicate", "kind" : "abstract def"}, {"label" : "warn", "tail" : "(): Method[MessageType]", "member" : "com.tersesystems.blindsight.semantic.SemanticLoggerAPI.Warn.warn", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerAPI.html#warn:Warn.this.Method[MessageType]", "kind" : "abstract def"}, {"label" : "isWarnEnabled", "tail" : "(): Predicate", "member" : "com.tersesystems.blindsight.semantic.SemanticLoggerAPI.Warn.isWarnEnabled", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerAPI.html#isWarnEnabled:Warn.this.Predicate", "kind" : "abstract def"}, {"label" : "info", "tail" : "(): Method[MessageType]", "member" : "com.tersesystems.blindsight.semantic.SemanticLoggerAPI.Info.info", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerAPI.html#info:Info.this.Method[MessageType]", "kind" : "abstract def"}, {"label" : "isInfoEnabled", "tail" : "(): Predicate", "member" : "com.tersesystems.blindsight.semantic.SemanticLoggerAPI.Info.isInfoEnabled", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerAPI.html#isInfoEnabled:Info.this.Predicate", "kind" : "abstract def"}, {"label" : "debug", "tail" : "(): Method[MessageType]", "member" : "com.tersesystems.blindsight.semantic.SemanticLoggerAPI.Debug.debug", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerAPI.html#debug:Debug.this.Method[MessageType]", "kind" : "abstract def"}, {"label" : "isDebugEnabled", "tail" : "(): Predicate", "member" : "com.tersesystems.blindsight.semantic.SemanticLoggerAPI.Debug.isDebugEnabled", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerAPI.html#isDebugEnabled:Debug.this.Predicate", "kind" : "abstract def"}, {"label" : "trace", "tail" : "(): Method[MessageType]", "member" : "com.tersesystems.blindsight.semantic.SemanticLoggerAPI.Trace.trace", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerAPI.html#trace:Trace.this.Method[MessageType]", "kind" : "abstract def"}, {"label" : "isTraceEnabled", "tail" : "(): Predicate", "member" : "com.tersesystems.blindsight.semantic.SemanticLoggerAPI.Trace.isTraceEnabled", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerAPI.html#isTraceEnabled:Trace.this.Predicate", "kind" : "abstract def"}, {"member" : "com.tersesystems.blindsight.semantic.SemanticLoggerComponent.Self", "error" : "unsupported entity"}], "shortDescription" : ""}, {"name" : "com.tersesystems.blindsight.semantic.SemanticLoggerComponent", "trait" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerComponent.html", "kind" : "trait", "members_trait" : [{"label" : "Method", "tail" : "", "member" : "com.tersesystems.blindsight.semantic.SemanticLoggerComponent.Method", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerComponent.html#Method[T]=M[T]", "kind" : "type"}, {"label" : "Predicate", "tail" : "", "member" : "com.tersesystems.blindsight.semantic.SemanticLoggerComponent.Predicate", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerComponent.html#Predicate=P", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerComponent.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerComponent.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerComponent.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerComponent.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerComponent.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerComponent.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerComponent.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerComponent.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerComponent.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerComponent.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerComponent.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerComponent.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerComponent.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerComponent.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerComponent.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerComponent.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerComponent.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerComponent.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticLoggerComponent.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"member" : "com.tersesystems.blindsight.semantic.SemanticLoggerComponent.Self", "error" : "unsupported entity"}], "shortDescription" : ""}, {"name" : "com.tersesystems.blindsight.semantic.SemanticMethod", "object" : "com\/tersesystems\/blindsight\/semantic\/SemanticMethod$.html", "members_object" : [{"label" : "Conditional", "tail" : "", "member" : "com.tersesystems.blindsight.semantic.SemanticMethod.Conditional", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticMethod$.html#Conditional[StatementType]extendsSemanticMethod.Impl[StatementType]", "kind" : "class"}, {"label" : "Impl", "tail" : "", "member" : "com.tersesystems.blindsight.semantic.SemanticMethod.Impl", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticMethod$.html#Impl[StatementType]extendsSemanticMethod[StatementType]", "kind" : "class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticMethod$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticMethod$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticMethod$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticMethod$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticMethod$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticMethod$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticMethod$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticMethod$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticMethod$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticMethod$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticMethod$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticMethod$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticMethod$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticMethod$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticMethod$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticMethod$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticMethod$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticMethod$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticMethod$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/tersesystems\/blindsight\/semantic\/SemanticMethod.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticMethod.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticMethod.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticMethod.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticMethod.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticMethod.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticMethod.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticMethod.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticMethod.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticMethod.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticMethod.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticMethod.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticMethod.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticMethod.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticMethod.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticMethod.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticMethod.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticMethod.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticMethod.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticMethod.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(instance: T, t: Throwable)(arg0: ToStatement[T], line: Line, file: File, enclosing: Enclosing): Unit", "member" : "com.tersesystems.blindsight.semantic.SemanticMethod.apply", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticMethod.html#apply[T<:StatementType](instance:T,t:Throwable)(implicitevidence$2:com.tersesystems.blindsight.api.ToStatement[T],implicitline:sourcecode.Line,implicitfile:sourcecode.File,implicitenclosing:sourcecode.Enclosing):Unit", "kind" : "abstract def"}, {"label" : "apply", "tail" : "(instance: T)(arg0: ToStatement[T], line: Line, file: File, enclosing: Enclosing): Unit", "member" : "com.tersesystems.blindsight.semantic.SemanticMethod.apply", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticMethod.html#apply[T<:StatementType](instance:T)(implicitevidence$1:com.tersesystems.blindsight.api.ToStatement[T],implicitline:sourcecode.Line,implicitfile:sourcecode.File,implicitenclosing:sourcecode.Enclosing):Unit", "kind" : "abstract def"}, {"label" : "when", "tail" : "(condition: => Boolean)(block: (SemanticMethod[StatementType]) => Unit): Unit", "member" : "com.tersesystems.blindsight.semantic.SemanticMethod.when", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticMethod.html#when(condition:=>Boolean)(block:com.tersesystems.blindsight.semantic.SemanticMethod[StatementType]=>Unit):Unit", "kind" : "abstract def"}, {"label" : "level", "tail" : "(): Level", "member" : "com.tersesystems.blindsight.semantic.SemanticMethod.level", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticMethod.html#level:org.slf4j.event.Level", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "com.tersesystems.blindsight.semantic.SemanticRefineMixin", "trait" : "com\/tersesystems\/blindsight\/semantic\/SemanticRefineMixin.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticRefineMixin.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticRefineMixin.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticRefineMixin.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticRefineMixin.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticRefineMixin.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticRefineMixin.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticRefineMixin.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticRefineMixin.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticRefineMixin.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticRefineMixin.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticRefineMixin.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticRefineMixin.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticRefineMixin.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticRefineMixin.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticRefineMixin.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticRefineMixin.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticRefineMixin.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticRefineMixin.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticRefineMixin.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "refine", "tail" : "(arg0: ToStatement[T]): Self[T]", "member" : "com.tersesystems.blindsight.semantic.SemanticRefineMixin.refine", "link" : "com\/tersesystems\/blindsight\/semantic\/SemanticRefineMixin.html#refine[T<:MessageType](implicitevidence$1:com.tersesystems.blindsight.api.ToStatement[T]):SemanticRefineMixin.this.Self[T]", "kind" : "abstract def"}, {"member" : "com.tersesystems.blindsight.semantic.SemanticRefineMixin.Self", "error" : "unsupported entity"}], "shortDescription" : ""}], "com" : [], "com.tersesystems.blindsight" : [{"name" : "com.tersesystems.blindsight.Logger", "object" : "com\/tersesystems\/blindsight\/Logger$.html", "members_object" : [{"label" : "Impl", "tail" : "", "member" : "com.tersesystems.blindsight.Logger.Impl", "link" : "com\/tersesystems\/blindsight\/Logger$.html#ImplextendsLoggerwithSLF4JLoggerAPI.Proxy[com.tersesystems.blindsight.slf4j.SLF4JPredicate,com.tersesystems.blindsight.slf4j.StrictSLF4JMethod]", "kind" : "class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/Logger$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/Logger$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/Logger$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/Logger$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/Logger$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/Logger$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/Logger$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/Logger$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/Logger$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/Logger$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/Logger$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/Logger$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/Logger$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/Logger$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/Logger$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/Logger$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/Logger$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/Logger$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/Logger$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/tersesystems\/blindsight\/Logger.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/Logger.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/Logger.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/Logger.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/Logger.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/Logger.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/Logger.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/Logger.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/Logger.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/Logger.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/Logger.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/Logger.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/Logger.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/Logger.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/Logger.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/Logger.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/Logger.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/Logger.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/Logger.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/Logger.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "semantic", "tail" : "(): SemanticLogger[MessageType]", "member" : "com.tersesystems.blindsight.Logger.semantic", "link" : "com\/tersesystems\/blindsight\/Logger.html#semantic[MessageType]:com.tersesystems.blindsight.semantic.SemanticLogger[MessageType]", "kind" : "abstract def"}, {"label" : "unchecked", "tail" : "(): SLF4JLogger[UncheckedSLF4JMethod]", "member" : "com.tersesystems.blindsight.Logger.unchecked", "link" : "com\/tersesystems\/blindsight\/Logger.html#unchecked:com.tersesystems.blindsight.slf4j.SLF4JLogger[com.tersesystems.blindsight.slf4j.UncheckedSLF4JMethod]", "kind" : "abstract def"}, {"label" : "strict", "tail" : "(): SLF4JLogger[StrictSLF4JMethod]", "member" : "com.tersesystems.blindsight.Logger.strict", "link" : "com\/tersesystems\/blindsight\/Logger.html#strict:com.tersesystems.blindsight.slf4j.SLF4JLogger[com.tersesystems.blindsight.slf4j.StrictSLF4JMethod]", "kind" : "abstract def"}, {"label" : "flow", "tail" : "(): FlowLogger", "member" : "com.tersesystems.blindsight.Logger.flow", "link" : "com\/tersesystems\/blindsight\/Logger.html#flow:com.tersesystems.blindsight.flow.FlowLogger", "kind" : "abstract def"}, {"label" : "fluent", "tail" : "(): FluentLogger", "member" : "com.tersesystems.blindsight.Logger.fluent", "link" : "com\/tersesystems\/blindsight\/Logger.html#fluent:com.tersesystems.blindsight.fluent.FluentLogger", "kind" : "abstract def"}, {"member" : "com.tersesystems.blindsight.slf4j.SLF4JLogger.Self", "error" : "unsupported entity"}, {"label" : "onCondition", "tail" : "(test: => Boolean): Self", "member" : "com.tersesystems.blindsight.api.mixins.OnConditionMixin.onCondition", "link" : "com\/tersesystems\/blindsight\/Logger.html#onCondition(test:=>Boolean):OnConditionMixin.this.Self", "kind" : "abstract def"}, {"label" : "underlying", "tail" : "(): org.slf4j.Logger", "member" : "com.tersesystems.blindsight.api.mixins.UnderlyingMixin.underlying", "link" : "com\/tersesystems\/blindsight\/Logger.html#underlying:org.slf4j.Logger", "kind" : "abstract def"}, {"label" : "markers", "tail" : "(): Markers", "member" : "com.tersesystems.blindsight.api.mixins.MarkerMixin.markers", "link" : "com\/tersesystems\/blindsight\/Logger.html#markers:com.tersesystems.blindsight.api.Markers", "kind" : "abstract def"}, {"label" : "withMarker", "tail" : "(instance: T)(arg0: ToMarkers[T]): Self", "member" : "com.tersesystems.blindsight.api.mixins.MarkerMixin.withMarker", "link" : "com\/tersesystems\/blindsight\/Logger.html#withMarker[T](instance:T)(implicitevidence$1:com.tersesystems.blindsight.api.ToMarkers[T]):MarkerMixin.this.Self", "kind" : "abstract def"}, {"label" : "error", "tail" : "(): Method", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Error.error", "link" : "com\/tersesystems\/blindsight\/Logger.html#error:Error.this.Method", "kind" : "abstract def"}, {"label" : "isErrorEnabled", "tail" : "(): Predicate", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Error.isErrorEnabled", "link" : "com\/tersesystems\/blindsight\/Logger.html#isErrorEnabled:Error.this.Predicate", "kind" : "abstract def"}, {"label" : "warn", "tail" : "(): Method", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Warn.warn", "link" : "com\/tersesystems\/blindsight\/Logger.html#warn:Warn.this.Method", "kind" : "abstract def"}, {"label" : "isWarnEnabled", "tail" : "(): Predicate", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Warn.isWarnEnabled", "link" : "com\/tersesystems\/blindsight\/Logger.html#isWarnEnabled:Warn.this.Predicate", "kind" : "abstract def"}, {"label" : "info", "tail" : "(): Method", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Info.info", "link" : "com\/tersesystems\/blindsight\/Logger.html#info:Info.this.Method", "kind" : "abstract def"}, {"label" : "isInfoEnabled", "tail" : "(): Predicate", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Info.isInfoEnabled", "link" : "com\/tersesystems\/blindsight\/Logger.html#isInfoEnabled:Info.this.Predicate", "kind" : "abstract def"}, {"label" : "debug", "tail" : "(): Method", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Debug.debug", "link" : "com\/tersesystems\/blindsight\/Logger.html#debug:Debug.this.Method", "kind" : "abstract def"}, {"label" : "isDebugEnabled", "tail" : "(): Predicate", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Debug.isDebugEnabled", "link" : "com\/tersesystems\/blindsight\/Logger.html#isDebugEnabled:Debug.this.Predicate", "kind" : "abstract def"}, {"label" : "trace", "tail" : "(): Method", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Trace.trace", "link" : "com\/tersesystems\/blindsight\/Logger.html#trace:Trace.this.Method", "kind" : "abstract def"}, {"label" : "isTraceEnabled", "tail" : "(): Predicate", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Trace.isTraceEnabled", "link" : "com\/tersesystems\/blindsight\/Logger.html#isTraceEnabled:Trace.this.Predicate", "kind" : "abstract def"}, {"member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerComponent.Method", "error" : "unsupported entity"}, {"member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerComponent.Predicate", "error" : "unsupported entity"}], "shortDescription" : ""}, {"name" : "com.tersesystems.blindsight.LoggerFactory", "object" : "com\/tersesystems\/blindsight\/LoggerFactory$.html", "members_object" : [{"label" : "Impl", "tail" : "", "member" : "com.tersesystems.blindsight.LoggerFactory.Impl", "link" : "com\/tersesystems\/blindsight\/LoggerFactory$.html#ImplextendsLoggerFactory", "kind" : "class"}, {"label" : "getLogger", "tail" : "(enc: Enclosing, name: Name): Logger", "member" : "com.tersesystems.blindsight.LoggerFactory.getLogger", "link" : "com\/tersesystems\/blindsight\/LoggerFactory$.html#getLogger(implicitenc:sourcecode.Enclosing,implicitname:sourcecode.Name):com.tersesystems.blindsight.Logger", "kind" : "def"}, {"label" : "getLogger", "tail" : "(instance: => T)(arg0: LoggerResolver[T]): Logger", "member" : "com.tersesystems.blindsight.LoggerFactory.getLogger", "link" : "com\/tersesystems\/blindsight\/LoggerFactory$.html#getLogger[T](instance:=>T)(implicitevidence$2:com.tersesystems.blindsight.api.LoggerResolver[T]):com.tersesystems.blindsight.Logger", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/LoggerFactory$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/LoggerFactory$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/LoggerFactory$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/LoggerFactory$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/LoggerFactory$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/LoggerFactory$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/LoggerFactory$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/LoggerFactory$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/LoggerFactory$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/LoggerFactory$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/LoggerFactory$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/LoggerFactory$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/LoggerFactory$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/LoggerFactory$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/LoggerFactory$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/LoggerFactory$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/LoggerFactory$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/LoggerFactory$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/LoggerFactory$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/tersesystems\/blindsight\/LoggerFactory.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/LoggerFactory.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/LoggerFactory.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/LoggerFactory.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/LoggerFactory.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/LoggerFactory.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/LoggerFactory.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/LoggerFactory.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/LoggerFactory.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/LoggerFactory.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/LoggerFactory.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/LoggerFactory.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/LoggerFactory.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/LoggerFactory.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/LoggerFactory.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/LoggerFactory.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/LoggerFactory.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/LoggerFactory.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/LoggerFactory.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/LoggerFactory.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "getLogger", "tail" : "(instance: T)(arg0: LoggerResolver[T]): Logger", "member" : "com.tersesystems.blindsight.LoggerFactory.getLogger", "link" : "com\/tersesystems\/blindsight\/LoggerFactory.html#getLogger[T](instance:T)(implicitevidence$1:com.tersesystems.blindsight.api.LoggerResolver[T]):com.tersesystems.blindsight.Logger", "kind" : "abstract def"}], "shortDescription" : ""}], "com.tersesystems" : [], "flow" : [{"name" : "flow.HoneycombFlow", "shortDescription" : "This class demonstrates how to do hierarchical parent\/child span style tracing to aservice using the flow logger API.", "object" : "flow\/HoneycombFlow$.html", "members_object" : [{"label" : "Person", "tail" : "", "member" : "flow.HoneycombFlow.Person", "link" : "flow\/HoneycombFlow$.html#Person", "kind" : "object"}, {"label" : "Person", "tail" : "", "member" : "flow.HoneycombFlow.Person", "link" : "flow\/HoneycombFlow$.html#PersonextendsProductwithSerializable", "kind" : "case class"}, {"label" : "personFlowMethod", "tail" : "(arg1: Int, arg2: Int)(spanInfo: SpanInfo): Person", "member" : "flow.HoneycombFlow.personFlowMethod", "link" : "flow\/HoneycombFlow$.html#personFlowMethod(arg1:Int,arg2:Int)(implicitspanInfo:com.tersesystems.logback.tracing.SpanInfo):flow.HoneycombFlow.Person", "kind" : "def"}, {"label" : "flowMethod", "tail" : "(arg1: Int, arg2: Int)(spanInfo: SpanInfo): Int", "member" : "flow.HoneycombFlow.flowMethod", "link" : "flow\/HoneycombFlow$.html#flowMethod(arg1:Int,arg2:Int)(implicitspanInfo:com.tersesystems.logback.tracing.SpanInfo):Int", "kind" : "def"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "flow.HoneycombFlow.main", "link" : "flow\/HoneycombFlow$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "flowMapping", "tail" : "(arg0: ToArguments[B], spanInfo: SpanInfo): HoneycombFlowBehavior[B]", "member" : "flow.HoneycombFlow.flowMapping", "link" : "flow\/HoneycombFlow$.html#flowMapping[B](implicitevidence$1:com.tersesystems.blindsight.api.ToArguments[B],implicitspanInfo:com.tersesystems.logback.tracing.SpanInfo):flow.HoneycombFlowBehavior[B]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "flow\/HoneycombFlow$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "flow\/HoneycombFlow$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "flow\/HoneycombFlow$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "flow\/HoneycombFlow$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "flow\/HoneycombFlow$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "flow\/HoneycombFlow$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "flow\/HoneycombFlow$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "flow\/HoneycombFlow$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "flow\/HoneycombFlow$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "flow\/HoneycombFlow$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "flow\/HoneycombFlow$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "flow\/HoneycombFlow$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "flow\/HoneycombFlow$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "flow\/HoneycombFlow$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "flow\/HoneycombFlow$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "flow\/HoneycombFlow$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "flow\/HoneycombFlow$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "flow\/HoneycombFlow$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "flow\/HoneycombFlow$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "flow.HoneycombFlowBehavior", "shortDescription" : "", "object" : "flow\/HoneycombFlowBehavior$.html", "members_class" : [{"label" : "exitStatement", "tail" : "(resultValue: B, source: Source): Option[Statement]", "member" : "flow.HoneycombFlowBehavior.exitStatement", "link" : "flow\/HoneycombFlowBehavior.html#exitStatement(resultValue:B,source:com.tersesystems.blindsight.flow.FlowBehavior.Source):Option[com.tersesystems.blindsight.api.Statement]", "kind" : "def"}, {"label" : "throwingStatement", "tail" : "(throwable: Throwable, source: Source): Option[(Level, Statement)]", "member" : "flow.HoneycombFlowBehavior.throwingStatement", "link" : "flow\/HoneycombFlowBehavior.html#throwingStatement(throwable:Throwable,source:com.tersesystems.blindsight.flow.FlowBehavior.Source):Option[(org.slf4j.event.Level,com.tersesystems.blindsight.api.Statement)]", "kind" : "def"}, {"label" : "entryStatement", "tail" : "(source: Source): Option[Statement]", "member" : "flow.HoneycombFlowBehavior.entryStatement", "link" : "flow\/HoneycombFlowBehavior.html#entryStatement(source:com.tersesystems.blindsight.flow.FlowBehavior.Source):Option[com.tersesystems.blindsight.api.Statement]", "kind" : "def"}, {"member" : "flow.HoneycombFlowBehavior#<init>", "error" : "unsupported entity"}, {"label" : "exitMarkers", "tail" : "(source: Source): Markers", "member" : "com.tersesystems.blindsight.flow.FlowBehavior.exitMarkers", "link" : "flow\/HoneycombFlowBehavior.html#exitMarkers(source:com.tersesystems.blindsight.flow.FlowBehavior.Source):com.tersesystems.blindsight.api.Markers", "kind" : "def"}, {"label" : "entryMarkers", "tail" : "(source: Source): Markers", "member" : "com.tersesystems.blindsight.flow.FlowBehavior.entryMarkers", "link" : "flow\/HoneycombFlowBehavior.html#entryMarkers(source:com.tersesystems.blindsight.flow.FlowBehavior.Source):com.tersesystems.blindsight.api.Markers", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "flow\/HoneycombFlowBehavior.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "flow\/HoneycombFlowBehavior.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "flow\/HoneycombFlowBehavior.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "flow\/HoneycombFlowBehavior.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "flow\/HoneycombFlowBehavior.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "flow\/HoneycombFlowBehavior.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "flow\/HoneycombFlowBehavior.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "flow\/HoneycombFlowBehavior.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "flow\/HoneycombFlowBehavior.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "flow\/HoneycombFlowBehavior.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "flow\/HoneycombFlowBehavior.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "flow\/HoneycombFlowBehavior.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "flow\/HoneycombFlowBehavior.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "flow\/HoneycombFlowBehavior.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "flow\/HoneycombFlowBehavior.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "flow\/HoneycombFlowBehavior.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "flow\/HoneycombFlowBehavior.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "flow\/HoneycombFlowBehavior.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "flow\/HoneycombFlowBehavior.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "markerFactory", "tail" : ": SpanMarkerFactory", "member" : "flow.HoneycombFlowBehavior.markerFactory", "link" : "flow\/HoneycombFlowBehavior$.html#markerFactory:com.tersesystems.logback.tracing.SpanMarkerFactory", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "flow\/HoneycombFlowBehavior$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "flow\/HoneycombFlowBehavior$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "flow\/HoneycombFlowBehavior$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "flow\/HoneycombFlowBehavior$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "flow\/HoneycombFlowBehavior$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "flow\/HoneycombFlowBehavior$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "flow\/HoneycombFlowBehavior$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "flow\/HoneycombFlowBehavior$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "flow\/HoneycombFlowBehavior$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "flow\/HoneycombFlowBehavior$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "flow\/HoneycombFlowBehavior$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "flow\/HoneycombFlowBehavior$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "flow\/HoneycombFlowBehavior$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "flow\/HoneycombFlowBehavior$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "flow\/HoneycombFlowBehavior$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "flow\/HoneycombFlowBehavior$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "flow\/HoneycombFlowBehavior$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "flow\/HoneycombFlowBehavior$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "flow\/HoneycombFlowBehavior$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "flow\/HoneycombFlowBehavior.html", "kind" : "class"}, {"name" : "flow.SimpleFlow", "shortDescription" : "", "object" : "flow\/SimpleFlow$.html", "members_object" : [{"label" : "Person", "tail" : "", "member" : "flow.SimpleFlow.Person", "link" : "flow\/SimpleFlow$.html#Person", "kind" : "object"}, {"label" : "Person", "tail" : "", "member" : "flow.SimpleFlow.Person", "link" : "flow\/SimpleFlow$.html#PersonextendsProductwithSerializable", "kind" : "case class"}, {"label" : "personFlowMethod", "tail" : "(arg1: Int, arg2: Int): Person", "member" : "flow.SimpleFlow.personFlowMethod", "link" : "flow\/SimpleFlow$.html#personFlowMethod(arg1:Int,arg2:Int):flow.SimpleFlow.Person", "kind" : "def"}, {"label" : "flowMethod", "tail" : "(arg1: Int, arg2: Int): Int", "member" : "flow.SimpleFlow.flowMethod", "link" : "flow\/SimpleFlow$.html#flowMethod(arg1:Int,arg2:Int):Int", "kind" : "def"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "flow.SimpleFlow.main", "link" : "flow\/SimpleFlow$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "flow\/SimpleFlow$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "flow\/SimpleFlow$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "flow\/SimpleFlow$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "flow\/SimpleFlow$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "flow\/SimpleFlow$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "flow\/SimpleFlow$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "flow\/SimpleFlow$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "flow\/SimpleFlow$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "flow\/SimpleFlow$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "flow\/SimpleFlow$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "flow\/SimpleFlow$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "flow\/SimpleFlow$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "flow\/SimpleFlow$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "flow\/SimpleFlow$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "flow\/SimpleFlow$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "flow\/SimpleFlow$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "flow\/SimpleFlow$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "flow\/SimpleFlow$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "flow\/SimpleFlow$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "flow.SimpleFlowBehavior", "shortDescription" : "", "members_class" : [{"label" : "exitStatement", "tail" : "(resultValue: B, source: Source): Option[Statement]", "member" : "flow.SimpleFlowBehavior.exitStatement", "link" : "flow\/SimpleFlowBehavior.html#exitStatement(resultValue:B,source:com.tersesystems.blindsight.flow.FlowBehavior.Source):Option[com.tersesystems.blindsight.api.Statement]", "kind" : "def"}, {"label" : "throwingStatement", "tail" : "(throwable: Throwable, source: Source): Option[(Level, Statement)]", "member" : "flow.SimpleFlowBehavior.throwingStatement", "link" : "flow\/SimpleFlowBehavior.html#throwingStatement(throwable:Throwable,source:com.tersesystems.blindsight.flow.FlowBehavior.Source):Option[(org.slf4j.event.Level,com.tersesystems.blindsight.api.Statement)]", "kind" : "def"}, {"label" : "entryStatement", "tail" : "(source: Source): Option[Statement]", "member" : "flow.SimpleFlowBehavior.entryStatement", "link" : "flow\/SimpleFlowBehavior.html#entryStatement(source:com.tersesystems.blindsight.flow.FlowBehavior.Source):Option[com.tersesystems.blindsight.api.Statement]", "kind" : "def"}, {"member" : "flow.SimpleFlowBehavior#<init>", "error" : "unsupported entity"}, {"label" : "exitMarkers", "tail" : "(source: Source): Markers", "member" : "com.tersesystems.blindsight.flow.FlowBehavior.exitMarkers", "link" : "flow\/SimpleFlowBehavior.html#exitMarkers(source:com.tersesystems.blindsight.flow.FlowBehavior.Source):com.tersesystems.blindsight.api.Markers", "kind" : "def"}, {"label" : "entryMarkers", "tail" : "(source: Source): Markers", "member" : "com.tersesystems.blindsight.flow.FlowBehavior.entryMarkers", "link" : "flow\/SimpleFlowBehavior.html#entryMarkers(source:com.tersesystems.blindsight.flow.FlowBehavior.Source):com.tersesystems.blindsight.api.Markers", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "flow\/SimpleFlowBehavior.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "flow\/SimpleFlowBehavior.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "flow\/SimpleFlowBehavior.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "flow\/SimpleFlowBehavior.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "flow\/SimpleFlowBehavior.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "flow\/SimpleFlowBehavior.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "flow\/SimpleFlowBehavior.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "flow\/SimpleFlowBehavior.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "flow\/SimpleFlowBehavior.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "flow\/SimpleFlowBehavior.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "flow\/SimpleFlowBehavior.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "flow\/SimpleFlowBehavior.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "flow\/SimpleFlowBehavior.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "flow\/SimpleFlowBehavior.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "flow\/SimpleFlowBehavior.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "flow\/SimpleFlowBehavior.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "flow\/SimpleFlowBehavior.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "flow\/SimpleFlowBehavior.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "flow\/SimpleFlowBehavior.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "flow\/SimpleFlowBehavior.html", "kind" : "class"}], "com.tersesystems.blindsight.logstash" : [{"name" : "com.tersesystems.blindsight.logstash.ArgumentsLowPriorityImplicits", "trait" : "com\/tersesystems\/blindsight\/logstash\/ArgumentsLowPriorityImplicits.html", "kind" : "trait", "members_trait" : [{"label" : "stringMapToArguments", "tail" : "(): ToArguments[(String, Map[String, T])]", "member" : "com.tersesystems.blindsight.logstash.ArgumentsLowPriorityImplicits.stringMapToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/ArgumentsLowPriorityImplicits.html#stringMapToArguments[T]:com.tersesystems.blindsight.api.ToArguments[(String,Map[String,T])]", "kind" : "implicit def"}, {"label" : "mapToArguments", "tail" : "(): ToArguments[Map[String, T]]", "member" : "com.tersesystems.blindsight.logstash.ArgumentsLowPriorityImplicits.mapToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/ArgumentsLowPriorityImplicits.html#mapToArguments[T]:com.tersesystems.blindsight.api.ToArguments[Map[String,T]]", "kind" : "implicit def"}, {"label" : "arrayToArguments", "tail" : "(): ToArguments[(String, Seq[T])]", "member" : "com.tersesystems.blindsight.logstash.ArgumentsLowPriorityImplicits.arrayToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/ArgumentsLowPriorityImplicits.html#arrayToArguments[T]:com.tersesystems.blindsight.api.ToArguments[(String,Seq[T])]", "kind" : "implicit def"}, {"label" : "jsonToArguments", "tail" : "(arg0: ToJsonNode[T]): ToArguments[(String, T)]", "member" : "com.tersesystems.blindsight.logstash.ArgumentsLowPriorityImplicits.jsonToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/ArgumentsLowPriorityImplicits.html#jsonToArguments[T](implicitevidence$2:com.tersesystems.blindsight.logstash.ToJsonNode[T]):com.tersesystems.blindsight.api.ToArguments[(String,T)]", "kind" : "implicit def"}, {"label" : "numericToArguments", "tail" : "(arg0: Numeric[T]): ToArguments[(String, T)]", "member" : "com.tersesystems.blindsight.logstash.ArgumentsLowPriorityImplicits.numericToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/ArgumentsLowPriorityImplicits.html#numericToArguments[T](implicitevidence$1:Numeric[T]):com.tersesystems.blindsight.api.ToArguments[(String,T)]", "kind" : "implicit def"}, {"label" : "kvBooleanToArguments", "tail" : ": ToArguments[(String, Boolean)]", "member" : "com.tersesystems.blindsight.logstash.ArgumentsLowPriorityImplicits.kvBooleanToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/ArgumentsLowPriorityImplicits.html#kvBooleanToArguments:com.tersesystems.blindsight.api.ToArguments[(String,Boolean)]", "kind" : "implicit val"}, {"label" : "kvStringToArguments", "tail" : ": ToArguments[(String, String)]", "member" : "com.tersesystems.blindsight.logstash.ArgumentsLowPriorityImplicits.kvStringToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/ArgumentsLowPriorityImplicits.html#kvStringToArguments:com.tersesystems.blindsight.api.ToArguments[(String,String)]", "kind" : "implicit val"}, {"label" : "argToArguments", "tail" : ": ToArguments[StructuredArgument]", "member" : "com.tersesystems.blindsight.logstash.ArgumentsLowPriorityImplicits.argToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/ArgumentsLowPriorityImplicits.html#argToArguments:com.tersesystems.blindsight.api.ToArguments[net.logstash.logback.argument.StructuredArgument]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/logstash\/ArgumentsLowPriorityImplicits.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/logstash\/ArgumentsLowPriorityImplicits.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/logstash\/ArgumentsLowPriorityImplicits.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/logstash\/ArgumentsLowPriorityImplicits.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/logstash\/ArgumentsLowPriorityImplicits.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/logstash\/ArgumentsLowPriorityImplicits.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/logstash\/ArgumentsLowPriorityImplicits.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/logstash\/ArgumentsLowPriorityImplicits.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/logstash\/ArgumentsLowPriorityImplicits.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/logstash\/ArgumentsLowPriorityImplicits.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/logstash\/ArgumentsLowPriorityImplicits.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/logstash\/ArgumentsLowPriorityImplicits.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/logstash\/ArgumentsLowPriorityImplicits.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/logstash\/ArgumentsLowPriorityImplicits.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/logstash\/ArgumentsLowPriorityImplicits.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/logstash\/ArgumentsLowPriorityImplicits.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/logstash\/ArgumentsLowPriorityImplicits.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/logstash\/ArgumentsLowPriorityImplicits.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/logstash\/ArgumentsLowPriorityImplicits.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "com.tersesystems.blindsight.logstash.CollectionToMarkersImplicits", "trait" : "com\/tersesystems\/blindsight\/logstash\/CollectionToMarkersImplicits.html", "kind" : "trait", "members_trait" : [{"label" : "stringMapToMarkers", "tail" : "(): ToMarkers[(String, Map[String, T])]", "member" : "com.tersesystems.blindsight.logstash.CollectionToMarkersImplicits.stringMapToMarkers", "link" : "com\/tersesystems\/blindsight\/logstash\/CollectionToMarkersImplicits.html#stringMapToMarkers[T]:com.tersesystems.blindsight.api.ToMarkers[(String,Map[String,T])]", "kind" : "implicit def"}, {"label" : "mapToMarkers", "tail" : "(): ToMarkers[Map[String, T]]", "member" : "com.tersesystems.blindsight.logstash.CollectionToMarkersImplicits.mapToMarkers", "link" : "com\/tersesystems\/blindsight\/logstash\/CollectionToMarkersImplicits.html#mapToMarkers[T]:com.tersesystems.blindsight.api.ToMarkers[Map[String,T]]", "kind" : "implicit def"}, {"label" : "arrayToMarkers", "tail" : "(): ToMarkers[(String, Seq[T])]", "member" : "com.tersesystems.blindsight.logstash.CollectionToMarkersImplicits.arrayToMarkers", "link" : "com\/tersesystems\/blindsight\/logstash\/CollectionToMarkersImplicits.html#arrayToMarkers[T]:com.tersesystems.blindsight.api.ToMarkers[(String,Seq[T])]", "kind" : "implicit def"}, {"label" : "jsonToMarkers", "tail" : "(arg0: ToJsonNode[T]): ToMarkers[(String, T)]", "member" : "com.tersesystems.blindsight.logstash.CollectionToMarkersImplicits.jsonToMarkers", "link" : "com\/tersesystems\/blindsight\/logstash\/CollectionToMarkersImplicits.html#jsonToMarkers[T](implicitevidence$2:com.tersesystems.blindsight.logstash.ToJsonNode[T]):com.tersesystems.blindsight.api.ToMarkers[(String,T)]", "kind" : "implicit def"}, {"label" : "tupleNumericToMarkers", "tail" : "(arg0: Numeric[T]): ToMarkers[(String, T)]", "member" : "com.tersesystems.blindsight.logstash.CollectionToMarkersImplicits.tupleNumericToMarkers", "link" : "com\/tersesystems\/blindsight\/logstash\/CollectionToMarkersImplicits.html#tupleNumericToMarkers[T](implicitevidence$1:Numeric[T]):com.tersesystems.blindsight.api.ToMarkers[(String,T)]", "kind" : "implicit def"}, {"label" : "tupleBooleanToMarkers", "tail" : ": ToMarkers[(String, Boolean)]", "member" : "com.tersesystems.blindsight.logstash.CollectionToMarkersImplicits.tupleBooleanToMarkers", "link" : "com\/tersesystems\/blindsight\/logstash\/CollectionToMarkersImplicits.html#tupleBooleanToMarkers:com.tersesystems.blindsight.api.ToMarkers[(String,Boolean)]", "kind" : "implicit val"}, {"label" : "tupleStringToMarkers", "tail" : ": ToMarkers[(String, String)]", "member" : "com.tersesystems.blindsight.logstash.CollectionToMarkersImplicits.tupleStringToMarkers", "link" : "com\/tersesystems\/blindsight\/logstash\/CollectionToMarkersImplicits.html#tupleStringToMarkers:com.tersesystems.blindsight.api.ToMarkers[(String,String)]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/logstash\/CollectionToMarkersImplicits.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/logstash\/CollectionToMarkersImplicits.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/logstash\/CollectionToMarkersImplicits.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/logstash\/CollectionToMarkersImplicits.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/logstash\/CollectionToMarkersImplicits.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/logstash\/CollectionToMarkersImplicits.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/logstash\/CollectionToMarkersImplicits.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/logstash\/CollectionToMarkersImplicits.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/logstash\/CollectionToMarkersImplicits.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/logstash\/CollectionToMarkersImplicits.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/logstash\/CollectionToMarkersImplicits.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/logstash\/CollectionToMarkersImplicits.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/logstash\/CollectionToMarkersImplicits.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/logstash\/CollectionToMarkersImplicits.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/logstash\/CollectionToMarkersImplicits.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/logstash\/CollectionToMarkersImplicits.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/logstash\/CollectionToMarkersImplicits.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/logstash\/CollectionToMarkersImplicits.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/logstash\/CollectionToMarkersImplicits.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "com.tersesystems.blindsight.logstash.Implicits", "object" : "com\/tersesystems\/blindsight\/logstash\/Implicits$.html", "members_object" : [{"label" : "logbackLoggerToLoggerResolver", "tail" : ": LoggerResolver[ch.qos.logback.classic.Logger]", "member" : "com.tersesystems.blindsight.logstash.LogbackImplicits.logbackLoggerToLoggerResolver", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits$.html#logbackLoggerToLoggerResolver:com.tersesystems.blindsight.api.LoggerResolver[ch.qos.logback.classic.Logger]", "kind" : "implicit val"}, {"label" : "argsToArguments", "tail" : ": ToArguments[Args]", "member" : "com.tersesystems.blindsight.logstash.SourceCodeToArgumentsImplicits.argsToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits$.html#argsToArguments:com.tersesystems.blindsight.api.ToArguments[sourcecode.Args]", "kind" : "implicit val"}, {"label" : "enclosingToArguments", "tail" : ": ToArguments[Enclosing]", "member" : "com.tersesystems.blindsight.logstash.SourceCodeToArgumentsImplicits.enclosingToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits$.html#enclosingToArguments:com.tersesystems.blindsight.api.ToArguments[sourcecode.Enclosing]", "kind" : "implicit val"}, {"label" : "lineToToArguments", "tail" : ": ToArguments[Line]", "member" : "com.tersesystems.blindsight.logstash.SourceCodeToArgumentsImplicits.lineToToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits$.html#lineToToArguments:com.tersesystems.blindsight.api.ToArguments[sourcecode.Line]", "kind" : "implicit val"}, {"label" : "fileToArguments", "tail" : ": ToArguments[File]", "member" : "com.tersesystems.blindsight.logstash.SourceCodeToArgumentsImplicits.fileToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits$.html#fileToArguments:com.tersesystems.blindsight.api.ToArguments[sourcecode.File]", "kind" : "implicit val"}, {"label" : "stringMapToArguments", "tail" : "(): ToArguments[(String, Map[String, T])]", "member" : "com.tersesystems.blindsight.logstash.ArgumentsLowPriorityImplicits.stringMapToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits$.html#stringMapToArguments[T]:com.tersesystems.blindsight.api.ToArguments[(String,Map[String,T])]", "kind" : "implicit def"}, {"label" : "mapToArguments", "tail" : "(): ToArguments[Map[String, T]]", "member" : "com.tersesystems.blindsight.logstash.ArgumentsLowPriorityImplicits.mapToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits$.html#mapToArguments[T]:com.tersesystems.blindsight.api.ToArguments[Map[String,T]]", "kind" : "implicit def"}, {"label" : "arrayToArguments", "tail" : "(): ToArguments[(String, Seq[T])]", "member" : "com.tersesystems.blindsight.logstash.ArgumentsLowPriorityImplicits.arrayToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits$.html#arrayToArguments[T]:com.tersesystems.blindsight.api.ToArguments[(String,Seq[T])]", "kind" : "implicit def"}, {"label" : "jsonToArguments", "tail" : "(arg0: ToJsonNode[T]): ToArguments[(String, T)]", "member" : "com.tersesystems.blindsight.logstash.ArgumentsLowPriorityImplicits.jsonToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits$.html#jsonToArguments[T](implicitevidence$2:com.tersesystems.blindsight.logstash.ToJsonNode[T]):com.tersesystems.blindsight.api.ToArguments[(String,T)]", "kind" : "implicit def"}, {"label" : "numericToArguments", "tail" : "(arg0: Numeric[T]): ToArguments[(String, T)]", "member" : "com.tersesystems.blindsight.logstash.ArgumentsLowPriorityImplicits.numericToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits$.html#numericToArguments[T](implicitevidence$1:Numeric[T]):com.tersesystems.blindsight.api.ToArguments[(String,T)]", "kind" : "implicit def"}, {"label" : "kvBooleanToArguments", "tail" : ": ToArguments[(String, Boolean)]", "member" : "com.tersesystems.blindsight.logstash.ArgumentsLowPriorityImplicits.kvBooleanToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits$.html#kvBooleanToArguments:com.tersesystems.blindsight.api.ToArguments[(String,Boolean)]", "kind" : "implicit val"}, {"label" : "kvStringToArguments", "tail" : ": ToArguments[(String, String)]", "member" : "com.tersesystems.blindsight.logstash.ArgumentsLowPriorityImplicits.kvStringToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits$.html#kvStringToArguments:com.tersesystems.blindsight.api.ToArguments[(String,String)]", "kind" : "implicit val"}, {"label" : "argToArguments", "tail" : ": ToArguments[StructuredArgument]", "member" : "com.tersesystems.blindsight.logstash.ArgumentsLowPriorityImplicits.argToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits$.html#argToArguments:com.tersesystems.blindsight.api.ToArguments[net.logstash.logback.argument.StructuredArgument]", "kind" : "implicit val"}, {"label" : "argsToMarkers", "tail" : ": ToMarkers[Args]", "member" : "com.tersesystems.blindsight.logstash.SourceCodeToMarkersImplicits.argsToMarkers", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits$.html#argsToMarkers:com.tersesystems.blindsight.api.ToMarkers[sourcecode.Args]", "kind" : "implicit val"}, {"label" : "enclosingToMarkers", "tail" : ": ToMarkers[Enclosing]", "member" : "com.tersesystems.blindsight.logstash.SourceCodeToMarkersImplicits.enclosingToMarkers", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits$.html#enclosingToMarkers:com.tersesystems.blindsight.api.ToMarkers[sourcecode.Enclosing]", "kind" : "implicit val"}, {"label" : "lineToMarkers", "tail" : ": ToMarkers[Line]", "member" : "com.tersesystems.blindsight.logstash.SourceCodeToMarkersImplicits.lineToMarkers", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits$.html#lineToMarkers:com.tersesystems.blindsight.api.ToMarkers[sourcecode.Line]", "kind" : "implicit val"}, {"label" : "fileToMarkers", "tail" : ": ToMarkers[File]", "member" : "com.tersesystems.blindsight.logstash.SourceCodeToMarkersImplicits.fileToMarkers", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits$.html#fileToMarkers:com.tersesystems.blindsight.api.ToMarkers[sourcecode.File]", "kind" : "implicit val"}, {"label" : "stringMapToMarkers", "tail" : "(): ToMarkers[(String, Map[String, T])]", "member" : "com.tersesystems.blindsight.logstash.CollectionToMarkersImplicits.stringMapToMarkers", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits$.html#stringMapToMarkers[T]:com.tersesystems.blindsight.api.ToMarkers[(String,Map[String,T])]", "kind" : "implicit def"}, {"label" : "mapToMarkers", "tail" : "(): ToMarkers[Map[String, T]]", "member" : "com.tersesystems.blindsight.logstash.CollectionToMarkersImplicits.mapToMarkers", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits$.html#mapToMarkers[T]:com.tersesystems.blindsight.api.ToMarkers[Map[String,T]]", "kind" : "implicit def"}, {"label" : "arrayToMarkers", "tail" : "(): ToMarkers[(String, Seq[T])]", "member" : "com.tersesystems.blindsight.logstash.CollectionToMarkersImplicits.arrayToMarkers", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits$.html#arrayToMarkers[T]:com.tersesystems.blindsight.api.ToMarkers[(String,Seq[T])]", "kind" : "implicit def"}, {"label" : "jsonToMarkers", "tail" : "(arg0: ToJsonNode[T]): ToMarkers[(String, T)]", "member" : "com.tersesystems.blindsight.logstash.CollectionToMarkersImplicits.jsonToMarkers", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits$.html#jsonToMarkers[T](implicitevidence$2:com.tersesystems.blindsight.logstash.ToJsonNode[T]):com.tersesystems.blindsight.api.ToMarkers[(String,T)]", "kind" : "implicit def"}, {"label" : "tupleNumericToMarkers", "tail" : "(arg0: Numeric[T]): ToMarkers[(String, T)]", "member" : "com.tersesystems.blindsight.logstash.CollectionToMarkersImplicits.tupleNumericToMarkers", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits$.html#tupleNumericToMarkers[T](implicitevidence$1:Numeric[T]):com.tersesystems.blindsight.api.ToMarkers[(String,T)]", "kind" : "implicit def"}, {"label" : "tupleBooleanToMarkers", "tail" : ": ToMarkers[(String, Boolean)]", "member" : "com.tersesystems.blindsight.logstash.CollectionToMarkersImplicits.tupleBooleanToMarkers", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits$.html#tupleBooleanToMarkers:com.tersesystems.blindsight.api.ToMarkers[(String,Boolean)]", "kind" : "implicit val"}, {"label" : "tupleStringToMarkers", "tail" : ": ToMarkers[(String, String)]", "member" : "com.tersesystems.blindsight.logstash.CollectionToMarkersImplicits.tupleStringToMarkers", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits$.html#tupleStringToMarkers:com.tersesystems.blindsight.api.ToMarkers[(String,String)]", "kind" : "implicit val"}, {"label" : "logstashMarkerToMarkers", "tail" : ": ToMarkers[LogstashMarker]", "member" : "com.tersesystems.blindsight.logstash.LogstashMarkersImplicits.logstashMarkerToMarkers", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits$.html#logstashMarkerToMarkers:com.tersesystems.blindsight.api.ToMarkers[net.logstash.logback.marker.LogstashMarker]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/tersesystems\/blindsight\/logstash\/Implicits.html", "kind" : "trait", "members_trait" : [{"label" : "logbackLoggerToLoggerResolver", "tail" : ": LoggerResolver[ch.qos.logback.classic.Logger]", "member" : "com.tersesystems.blindsight.logstash.LogbackImplicits.logbackLoggerToLoggerResolver", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits.html#logbackLoggerToLoggerResolver:com.tersesystems.blindsight.api.LoggerResolver[ch.qos.logback.classic.Logger]", "kind" : "implicit val"}, {"label" : "argsToArguments", "tail" : ": ToArguments[Args]", "member" : "com.tersesystems.blindsight.logstash.SourceCodeToArgumentsImplicits.argsToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits.html#argsToArguments:com.tersesystems.blindsight.api.ToArguments[sourcecode.Args]", "kind" : "implicit val"}, {"label" : "enclosingToArguments", "tail" : ": ToArguments[Enclosing]", "member" : "com.tersesystems.blindsight.logstash.SourceCodeToArgumentsImplicits.enclosingToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits.html#enclosingToArguments:com.tersesystems.blindsight.api.ToArguments[sourcecode.Enclosing]", "kind" : "implicit val"}, {"label" : "lineToToArguments", "tail" : ": ToArguments[Line]", "member" : "com.tersesystems.blindsight.logstash.SourceCodeToArgumentsImplicits.lineToToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits.html#lineToToArguments:com.tersesystems.blindsight.api.ToArguments[sourcecode.Line]", "kind" : "implicit val"}, {"label" : "fileToArguments", "tail" : ": ToArguments[File]", "member" : "com.tersesystems.blindsight.logstash.SourceCodeToArgumentsImplicits.fileToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits.html#fileToArguments:com.tersesystems.blindsight.api.ToArguments[sourcecode.File]", "kind" : "implicit val"}, {"label" : "stringMapToArguments", "tail" : "(): ToArguments[(String, Map[String, T])]", "member" : "com.tersesystems.blindsight.logstash.ArgumentsLowPriorityImplicits.stringMapToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits.html#stringMapToArguments[T]:com.tersesystems.blindsight.api.ToArguments[(String,Map[String,T])]", "kind" : "implicit def"}, {"label" : "mapToArguments", "tail" : "(): ToArguments[Map[String, T]]", "member" : "com.tersesystems.blindsight.logstash.ArgumentsLowPriorityImplicits.mapToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits.html#mapToArguments[T]:com.tersesystems.blindsight.api.ToArguments[Map[String,T]]", "kind" : "implicit def"}, {"label" : "arrayToArguments", "tail" : "(): ToArguments[(String, Seq[T])]", "member" : "com.tersesystems.blindsight.logstash.ArgumentsLowPriorityImplicits.arrayToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits.html#arrayToArguments[T]:com.tersesystems.blindsight.api.ToArguments[(String,Seq[T])]", "kind" : "implicit def"}, {"label" : "jsonToArguments", "tail" : "(arg0: ToJsonNode[T]): ToArguments[(String, T)]", "member" : "com.tersesystems.blindsight.logstash.ArgumentsLowPriorityImplicits.jsonToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits.html#jsonToArguments[T](implicitevidence$2:com.tersesystems.blindsight.logstash.ToJsonNode[T]):com.tersesystems.blindsight.api.ToArguments[(String,T)]", "kind" : "implicit def"}, {"label" : "numericToArguments", "tail" : "(arg0: Numeric[T]): ToArguments[(String, T)]", "member" : "com.tersesystems.blindsight.logstash.ArgumentsLowPriorityImplicits.numericToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits.html#numericToArguments[T](implicitevidence$1:Numeric[T]):com.tersesystems.blindsight.api.ToArguments[(String,T)]", "kind" : "implicit def"}, {"label" : "kvBooleanToArguments", "tail" : ": ToArguments[(String, Boolean)]", "member" : "com.tersesystems.blindsight.logstash.ArgumentsLowPriorityImplicits.kvBooleanToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits.html#kvBooleanToArguments:com.tersesystems.blindsight.api.ToArguments[(String,Boolean)]", "kind" : "implicit val"}, {"label" : "kvStringToArguments", "tail" : ": ToArguments[(String, String)]", "member" : "com.tersesystems.blindsight.logstash.ArgumentsLowPriorityImplicits.kvStringToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits.html#kvStringToArguments:com.tersesystems.blindsight.api.ToArguments[(String,String)]", "kind" : "implicit val"}, {"label" : "argToArguments", "tail" : ": ToArguments[StructuredArgument]", "member" : "com.tersesystems.blindsight.logstash.ArgumentsLowPriorityImplicits.argToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits.html#argToArguments:com.tersesystems.blindsight.api.ToArguments[net.logstash.logback.argument.StructuredArgument]", "kind" : "implicit val"}, {"label" : "argsToMarkers", "tail" : ": ToMarkers[Args]", "member" : "com.tersesystems.blindsight.logstash.SourceCodeToMarkersImplicits.argsToMarkers", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits.html#argsToMarkers:com.tersesystems.blindsight.api.ToMarkers[sourcecode.Args]", "kind" : "implicit val"}, {"label" : "enclosingToMarkers", "tail" : ": ToMarkers[Enclosing]", "member" : "com.tersesystems.blindsight.logstash.SourceCodeToMarkersImplicits.enclosingToMarkers", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits.html#enclosingToMarkers:com.tersesystems.blindsight.api.ToMarkers[sourcecode.Enclosing]", "kind" : "implicit val"}, {"label" : "lineToMarkers", "tail" : ": ToMarkers[Line]", "member" : "com.tersesystems.blindsight.logstash.SourceCodeToMarkersImplicits.lineToMarkers", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits.html#lineToMarkers:com.tersesystems.blindsight.api.ToMarkers[sourcecode.Line]", "kind" : "implicit val"}, {"label" : "fileToMarkers", "tail" : ": ToMarkers[File]", "member" : "com.tersesystems.blindsight.logstash.SourceCodeToMarkersImplicits.fileToMarkers", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits.html#fileToMarkers:com.tersesystems.blindsight.api.ToMarkers[sourcecode.File]", "kind" : "implicit val"}, {"label" : "stringMapToMarkers", "tail" : "(): ToMarkers[(String, Map[String, T])]", "member" : "com.tersesystems.blindsight.logstash.CollectionToMarkersImplicits.stringMapToMarkers", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits.html#stringMapToMarkers[T]:com.tersesystems.blindsight.api.ToMarkers[(String,Map[String,T])]", "kind" : "implicit def"}, {"label" : "mapToMarkers", "tail" : "(): ToMarkers[Map[String, T]]", "member" : "com.tersesystems.blindsight.logstash.CollectionToMarkersImplicits.mapToMarkers", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits.html#mapToMarkers[T]:com.tersesystems.blindsight.api.ToMarkers[Map[String,T]]", "kind" : "implicit def"}, {"label" : "arrayToMarkers", "tail" : "(): ToMarkers[(String, Seq[T])]", "member" : "com.tersesystems.blindsight.logstash.CollectionToMarkersImplicits.arrayToMarkers", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits.html#arrayToMarkers[T]:com.tersesystems.blindsight.api.ToMarkers[(String,Seq[T])]", "kind" : "implicit def"}, {"label" : "jsonToMarkers", "tail" : "(arg0: ToJsonNode[T]): ToMarkers[(String, T)]", "member" : "com.tersesystems.blindsight.logstash.CollectionToMarkersImplicits.jsonToMarkers", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits.html#jsonToMarkers[T](implicitevidence$2:com.tersesystems.blindsight.logstash.ToJsonNode[T]):com.tersesystems.blindsight.api.ToMarkers[(String,T)]", "kind" : "implicit def"}, {"label" : "tupleNumericToMarkers", "tail" : "(arg0: Numeric[T]): ToMarkers[(String, T)]", "member" : "com.tersesystems.blindsight.logstash.CollectionToMarkersImplicits.tupleNumericToMarkers", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits.html#tupleNumericToMarkers[T](implicitevidence$1:Numeric[T]):com.tersesystems.blindsight.api.ToMarkers[(String,T)]", "kind" : "implicit def"}, {"label" : "tupleBooleanToMarkers", "tail" : ": ToMarkers[(String, Boolean)]", "member" : "com.tersesystems.blindsight.logstash.CollectionToMarkersImplicits.tupleBooleanToMarkers", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits.html#tupleBooleanToMarkers:com.tersesystems.blindsight.api.ToMarkers[(String,Boolean)]", "kind" : "implicit val"}, {"label" : "tupleStringToMarkers", "tail" : ": ToMarkers[(String, String)]", "member" : "com.tersesystems.blindsight.logstash.CollectionToMarkersImplicits.tupleStringToMarkers", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits.html#tupleStringToMarkers:com.tersesystems.blindsight.api.ToMarkers[(String,String)]", "kind" : "implicit val"}, {"label" : "logstashMarkerToMarkers", "tail" : ": ToMarkers[LogstashMarker]", "member" : "com.tersesystems.blindsight.logstash.LogstashMarkersImplicits.logstashMarkerToMarkers", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits.html#logstashMarkerToMarkers:com.tersesystems.blindsight.api.ToMarkers[net.logstash.logback.marker.LogstashMarker]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/logstash\/Implicits.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "com.tersesystems.blindsight.logstash.LogbackImplicits", "object" : "com\/tersesystems\/blindsight\/logstash\/LogbackImplicits$.html", "members_object" : [{"label" : "logbackLoggerToLoggerResolver", "tail" : ": LoggerResolver[ch.qos.logback.classic.Logger]", "member" : "com.tersesystems.blindsight.logstash.LogbackImplicits.logbackLoggerToLoggerResolver", "link" : "com\/tersesystems\/blindsight\/logstash\/LogbackImplicits$.html#logbackLoggerToLoggerResolver:com.tersesystems.blindsight.api.LoggerResolver[ch.qos.logback.classic.Logger]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/logstash\/LogbackImplicits$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/logstash\/LogbackImplicits$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/logstash\/LogbackImplicits$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/logstash\/LogbackImplicits$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/logstash\/LogbackImplicits$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/logstash\/LogbackImplicits$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/logstash\/LogbackImplicits$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/logstash\/LogbackImplicits$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/logstash\/LogbackImplicits$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/logstash\/LogbackImplicits$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/logstash\/LogbackImplicits$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/logstash\/LogbackImplicits$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/logstash\/LogbackImplicits$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/logstash\/LogbackImplicits$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/logstash\/LogbackImplicits$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/logstash\/LogbackImplicits$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/logstash\/LogbackImplicits$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/logstash\/LogbackImplicits$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/logstash\/LogbackImplicits$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/tersesystems\/blindsight\/logstash\/LogbackImplicits.html", "kind" : "trait", "members_trait" : [{"label" : "logbackLoggerToLoggerResolver", "tail" : ": LoggerResolver[ch.qos.logback.classic.Logger]", "member" : "com.tersesystems.blindsight.logstash.LogbackImplicits.logbackLoggerToLoggerResolver", "link" : "com\/tersesystems\/blindsight\/logstash\/LogbackImplicits.html#logbackLoggerToLoggerResolver:com.tersesystems.blindsight.api.LoggerResolver[ch.qos.logback.classic.Logger]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/logstash\/LogbackImplicits.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/logstash\/LogbackImplicits.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/logstash\/LogbackImplicits.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/logstash\/LogbackImplicits.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/logstash\/LogbackImplicits.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/logstash\/LogbackImplicits.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/logstash\/LogbackImplicits.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/logstash\/LogbackImplicits.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/logstash\/LogbackImplicits.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/logstash\/LogbackImplicits.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/logstash\/LogbackImplicits.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/logstash\/LogbackImplicits.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/logstash\/LogbackImplicits.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/logstash\/LogbackImplicits.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/logstash\/LogbackImplicits.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/logstash\/LogbackImplicits.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/logstash\/LogbackImplicits.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/logstash\/LogbackImplicits.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/logstash\/LogbackImplicits.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "com.tersesystems.blindsight.logstash.LogstashLoggerFactory", "shortDescription" : "", "members_class" : [{"label" : "Logstash", "tail" : "", "member" : "com.tersesystems.blindsight.logstash.LogstashLoggerFactory.Logstash", "link" : "com\/tersesystems\/blindsight\/logstash\/LogstashLoggerFactory.html#Logstash", "kind" : "object"}, {"label" : "getLogger", "tail" : "(instance: T)(arg0: LoggerResolver[T]): Logger", "member" : "com.tersesystems.blindsight.logstash.LogstashLoggerFactory.getLogger", "link" : "com\/tersesystems\/blindsight\/logstash\/LogstashLoggerFactory.html#getLogger[T](instance:T)(implicitevidence$1:com.tersesystems.blindsight.api.LoggerResolver[T]):com.tersesystems.blindsight.Logger", "kind" : "def"}, {"member" : "com.tersesystems.blindsight.logstash.LogstashLoggerFactory#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/logstash\/LogstashLoggerFactory.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/logstash\/LogstashLoggerFactory.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/logstash\/LogstashLoggerFactory.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/logstash\/LogstashLoggerFactory.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/logstash\/LogstashLoggerFactory.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/logstash\/LogstashLoggerFactory.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/logstash\/LogstashLoggerFactory.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/logstash\/LogstashLoggerFactory.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/logstash\/LogstashLoggerFactory.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/logstash\/LogstashLoggerFactory.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/logstash\/LogstashLoggerFactory.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/logstash\/LogstashLoggerFactory.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/logstash\/LogstashLoggerFactory.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/logstash\/LogstashLoggerFactory.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/logstash\/LogstashLoggerFactory.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/logstash\/LogstashLoggerFactory.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/logstash\/LogstashLoggerFactory.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/logstash\/LogstashLoggerFactory.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/logstash\/LogstashLoggerFactory.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/tersesystems\/blindsight\/logstash\/LogstashLoggerFactory.html", "kind" : "class"}, {"name" : "com.tersesystems.blindsight.logstash.LogstashMarkersImplicits", "trait" : "com\/tersesystems\/blindsight\/logstash\/LogstashMarkersImplicits.html", "kind" : "trait", "members_trait" : [{"label" : "logstashMarkerToMarkers", "tail" : ": ToMarkers[LogstashMarker]", "member" : "com.tersesystems.blindsight.logstash.LogstashMarkersImplicits.logstashMarkerToMarkers", "link" : "com\/tersesystems\/blindsight\/logstash\/LogstashMarkersImplicits.html#logstashMarkerToMarkers:com.tersesystems.blindsight.api.ToMarkers[net.logstash.logback.marker.LogstashMarker]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/logstash\/LogstashMarkersImplicits.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/logstash\/LogstashMarkersImplicits.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/logstash\/LogstashMarkersImplicits.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/logstash\/LogstashMarkersImplicits.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/logstash\/LogstashMarkersImplicits.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/logstash\/LogstashMarkersImplicits.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/logstash\/LogstashMarkersImplicits.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/logstash\/LogstashMarkersImplicits.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/logstash\/LogstashMarkersImplicits.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/logstash\/LogstashMarkersImplicits.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/logstash\/LogstashMarkersImplicits.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/logstash\/LogstashMarkersImplicits.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/logstash\/LogstashMarkersImplicits.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/logstash\/LogstashMarkersImplicits.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/logstash\/LogstashMarkersImplicits.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/logstash\/LogstashMarkersImplicits.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/logstash\/LogstashMarkersImplicits.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/logstash\/LogstashMarkersImplicits.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/logstash\/LogstashMarkersImplicits.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "com.tersesystems.blindsight.logstash.LogstashSourceInfoMixin", "trait" : "com\/tersesystems\/blindsight\/logstash\/LogstashSourceInfoMixin.html", "kind" : "trait", "members_trait" : [{"label" : "sourceInfoMarker", "tail" : "(level: Level, line: Line, file: File, enclosing: Enclosing): Markers", "member" : "com.tersesystems.blindsight.logstash.LogstashSourceInfoMixin.sourceInfoMarker", "link" : "com\/tersesystems\/blindsight\/logstash\/LogstashSourceInfoMixin.html#sourceInfoMarker(level:org.slf4j.event.Level,line:sourcecode.Line,file:sourcecode.File,enclosing:sourcecode.Enclosing):com.tersesystems.blindsight.api.Markers", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/logstash\/LogstashSourceInfoMixin.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/logstash\/LogstashSourceInfoMixin.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/logstash\/LogstashSourceInfoMixin.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/logstash\/LogstashSourceInfoMixin.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/logstash\/LogstashSourceInfoMixin.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/logstash\/LogstashSourceInfoMixin.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/logstash\/LogstashSourceInfoMixin.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/logstash\/LogstashSourceInfoMixin.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/logstash\/LogstashSourceInfoMixin.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/logstash\/LogstashSourceInfoMixin.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/logstash\/LogstashSourceInfoMixin.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/logstash\/LogstashSourceInfoMixin.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/logstash\/LogstashSourceInfoMixin.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/logstash\/LogstashSourceInfoMixin.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/logstash\/LogstashSourceInfoMixin.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/logstash\/LogstashSourceInfoMixin.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/logstash\/LogstashSourceInfoMixin.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/logstash\/LogstashSourceInfoMixin.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/logstash\/LogstashSourceInfoMixin.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "com.tersesystems.blindsight.logstash.SourceCodeToArgumentsImplicits", "trait" : "com\/tersesystems\/blindsight\/logstash\/SourceCodeToArgumentsImplicits.html", "kind" : "trait", "members_trait" : [{"label" : "argsToArguments", "tail" : ": ToArguments[Args]", "member" : "com.tersesystems.blindsight.logstash.SourceCodeToArgumentsImplicits.argsToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/SourceCodeToArgumentsImplicits.html#argsToArguments:com.tersesystems.blindsight.api.ToArguments[sourcecode.Args]", "kind" : "implicit val"}, {"label" : "enclosingToArguments", "tail" : ": ToArguments[Enclosing]", "member" : "com.tersesystems.blindsight.logstash.SourceCodeToArgumentsImplicits.enclosingToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/SourceCodeToArgumentsImplicits.html#enclosingToArguments:com.tersesystems.blindsight.api.ToArguments[sourcecode.Enclosing]", "kind" : "implicit val"}, {"label" : "lineToToArguments", "tail" : ": ToArguments[Line]", "member" : "com.tersesystems.blindsight.logstash.SourceCodeToArgumentsImplicits.lineToToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/SourceCodeToArgumentsImplicits.html#lineToToArguments:com.tersesystems.blindsight.api.ToArguments[sourcecode.Line]", "kind" : "implicit val"}, {"label" : "fileToArguments", "tail" : ": ToArguments[File]", "member" : "com.tersesystems.blindsight.logstash.SourceCodeToArgumentsImplicits.fileToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/SourceCodeToArgumentsImplicits.html#fileToArguments:com.tersesystems.blindsight.api.ToArguments[sourcecode.File]", "kind" : "implicit val"}, {"label" : "stringMapToArguments", "tail" : "(): ToArguments[(String, Map[String, T])]", "member" : "com.tersesystems.blindsight.logstash.ArgumentsLowPriorityImplicits.stringMapToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/SourceCodeToArgumentsImplicits.html#stringMapToArguments[T]:com.tersesystems.blindsight.api.ToArguments[(String,Map[String,T])]", "kind" : "implicit def"}, {"label" : "mapToArguments", "tail" : "(): ToArguments[Map[String, T]]", "member" : "com.tersesystems.blindsight.logstash.ArgumentsLowPriorityImplicits.mapToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/SourceCodeToArgumentsImplicits.html#mapToArguments[T]:com.tersesystems.blindsight.api.ToArguments[Map[String,T]]", "kind" : "implicit def"}, {"label" : "arrayToArguments", "tail" : "(): ToArguments[(String, Seq[T])]", "member" : "com.tersesystems.blindsight.logstash.ArgumentsLowPriorityImplicits.arrayToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/SourceCodeToArgumentsImplicits.html#arrayToArguments[T]:com.tersesystems.blindsight.api.ToArguments[(String,Seq[T])]", "kind" : "implicit def"}, {"label" : "jsonToArguments", "tail" : "(arg0: ToJsonNode[T]): ToArguments[(String, T)]", "member" : "com.tersesystems.blindsight.logstash.ArgumentsLowPriorityImplicits.jsonToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/SourceCodeToArgumentsImplicits.html#jsonToArguments[T](implicitevidence$2:com.tersesystems.blindsight.logstash.ToJsonNode[T]):com.tersesystems.blindsight.api.ToArguments[(String,T)]", "kind" : "implicit def"}, {"label" : "numericToArguments", "tail" : "(arg0: Numeric[T]): ToArguments[(String, T)]", "member" : "com.tersesystems.blindsight.logstash.ArgumentsLowPriorityImplicits.numericToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/SourceCodeToArgumentsImplicits.html#numericToArguments[T](implicitevidence$1:Numeric[T]):com.tersesystems.blindsight.api.ToArguments[(String,T)]", "kind" : "implicit def"}, {"label" : "kvBooleanToArguments", "tail" : ": ToArguments[(String, Boolean)]", "member" : "com.tersesystems.blindsight.logstash.ArgumentsLowPriorityImplicits.kvBooleanToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/SourceCodeToArgumentsImplicits.html#kvBooleanToArguments:com.tersesystems.blindsight.api.ToArguments[(String,Boolean)]", "kind" : "implicit val"}, {"label" : "kvStringToArguments", "tail" : ": ToArguments[(String, String)]", "member" : "com.tersesystems.blindsight.logstash.ArgumentsLowPriorityImplicits.kvStringToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/SourceCodeToArgumentsImplicits.html#kvStringToArguments:com.tersesystems.blindsight.api.ToArguments[(String,String)]", "kind" : "implicit val"}, {"label" : "argToArguments", "tail" : ": ToArguments[StructuredArgument]", "member" : "com.tersesystems.blindsight.logstash.ArgumentsLowPriorityImplicits.argToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/SourceCodeToArgumentsImplicits.html#argToArguments:com.tersesystems.blindsight.api.ToArguments[net.logstash.logback.argument.StructuredArgument]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/logstash\/SourceCodeToArgumentsImplicits.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/logstash\/SourceCodeToArgumentsImplicits.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/logstash\/SourceCodeToArgumentsImplicits.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/logstash\/SourceCodeToArgumentsImplicits.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/logstash\/SourceCodeToArgumentsImplicits.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/logstash\/SourceCodeToArgumentsImplicits.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/logstash\/SourceCodeToArgumentsImplicits.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/logstash\/SourceCodeToArgumentsImplicits.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/logstash\/SourceCodeToArgumentsImplicits.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/logstash\/SourceCodeToArgumentsImplicits.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/logstash\/SourceCodeToArgumentsImplicits.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/logstash\/SourceCodeToArgumentsImplicits.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/logstash\/SourceCodeToArgumentsImplicits.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/logstash\/SourceCodeToArgumentsImplicits.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/logstash\/SourceCodeToArgumentsImplicits.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/logstash\/SourceCodeToArgumentsImplicits.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/logstash\/SourceCodeToArgumentsImplicits.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/logstash\/SourceCodeToArgumentsImplicits.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/logstash\/SourceCodeToArgumentsImplicits.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "com.tersesystems.blindsight.logstash.SourceCodeToMarkersImplicits", "trait" : "com\/tersesystems\/blindsight\/logstash\/SourceCodeToMarkersImplicits.html", "kind" : "trait", "members_trait" : [{"label" : "argsToMarkers", "tail" : ": ToMarkers[Args]", "member" : "com.tersesystems.blindsight.logstash.SourceCodeToMarkersImplicits.argsToMarkers", "link" : "com\/tersesystems\/blindsight\/logstash\/SourceCodeToMarkersImplicits.html#argsToMarkers:com.tersesystems.blindsight.api.ToMarkers[sourcecode.Args]", "kind" : "implicit val"}, {"label" : "enclosingToMarkers", "tail" : ": ToMarkers[Enclosing]", "member" : "com.tersesystems.blindsight.logstash.SourceCodeToMarkersImplicits.enclosingToMarkers", "link" : "com\/tersesystems\/blindsight\/logstash\/SourceCodeToMarkersImplicits.html#enclosingToMarkers:com.tersesystems.blindsight.api.ToMarkers[sourcecode.Enclosing]", "kind" : "implicit val"}, {"label" : "lineToMarkers", "tail" : ": ToMarkers[Line]", "member" : "com.tersesystems.blindsight.logstash.SourceCodeToMarkersImplicits.lineToMarkers", "link" : "com\/tersesystems\/blindsight\/logstash\/SourceCodeToMarkersImplicits.html#lineToMarkers:com.tersesystems.blindsight.api.ToMarkers[sourcecode.Line]", "kind" : "implicit val"}, {"label" : "fileToMarkers", "tail" : ": ToMarkers[File]", "member" : "com.tersesystems.blindsight.logstash.SourceCodeToMarkersImplicits.fileToMarkers", "link" : "com\/tersesystems\/blindsight\/logstash\/SourceCodeToMarkersImplicits.html#fileToMarkers:com.tersesystems.blindsight.api.ToMarkers[sourcecode.File]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/logstash\/SourceCodeToMarkersImplicits.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/logstash\/SourceCodeToMarkersImplicits.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/logstash\/SourceCodeToMarkersImplicits.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/logstash\/SourceCodeToMarkersImplicits.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/logstash\/SourceCodeToMarkersImplicits.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/logstash\/SourceCodeToMarkersImplicits.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/logstash\/SourceCodeToMarkersImplicits.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/logstash\/SourceCodeToMarkersImplicits.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/logstash\/SourceCodeToMarkersImplicits.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/logstash\/SourceCodeToMarkersImplicits.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/logstash\/SourceCodeToMarkersImplicits.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/logstash\/SourceCodeToMarkersImplicits.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/logstash\/SourceCodeToMarkersImplicits.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/logstash\/SourceCodeToMarkersImplicits.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/logstash\/SourceCodeToMarkersImplicits.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/logstash\/SourceCodeToMarkersImplicits.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/logstash\/SourceCodeToMarkersImplicits.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/logstash\/SourceCodeToMarkersImplicits.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/logstash\/SourceCodeToMarkersImplicits.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "com.tersesystems.blindsight.logstash.ToArgumentsImplicits", "object" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits$.html", "members_object" : [{"label" : "argsToArguments", "tail" : ": ToArguments[Args]", "member" : "com.tersesystems.blindsight.logstash.SourceCodeToArgumentsImplicits.argsToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits$.html#argsToArguments:com.tersesystems.blindsight.api.ToArguments[sourcecode.Args]", "kind" : "implicit val"}, {"label" : "enclosingToArguments", "tail" : ": ToArguments[Enclosing]", "member" : "com.tersesystems.blindsight.logstash.SourceCodeToArgumentsImplicits.enclosingToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits$.html#enclosingToArguments:com.tersesystems.blindsight.api.ToArguments[sourcecode.Enclosing]", "kind" : "implicit val"}, {"label" : "lineToToArguments", "tail" : ": ToArguments[Line]", "member" : "com.tersesystems.blindsight.logstash.SourceCodeToArgumentsImplicits.lineToToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits$.html#lineToToArguments:com.tersesystems.blindsight.api.ToArguments[sourcecode.Line]", "kind" : "implicit val"}, {"label" : "fileToArguments", "tail" : ": ToArguments[File]", "member" : "com.tersesystems.blindsight.logstash.SourceCodeToArgumentsImplicits.fileToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits$.html#fileToArguments:com.tersesystems.blindsight.api.ToArguments[sourcecode.File]", "kind" : "implicit val"}, {"label" : "stringMapToArguments", "tail" : "(): ToArguments[(String, Map[String, T])]", "member" : "com.tersesystems.blindsight.logstash.ArgumentsLowPriorityImplicits.stringMapToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits$.html#stringMapToArguments[T]:com.tersesystems.blindsight.api.ToArguments[(String,Map[String,T])]", "kind" : "implicit def"}, {"label" : "mapToArguments", "tail" : "(): ToArguments[Map[String, T]]", "member" : "com.tersesystems.blindsight.logstash.ArgumentsLowPriorityImplicits.mapToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits$.html#mapToArguments[T]:com.tersesystems.blindsight.api.ToArguments[Map[String,T]]", "kind" : "implicit def"}, {"label" : "arrayToArguments", "tail" : "(): ToArguments[(String, Seq[T])]", "member" : "com.tersesystems.blindsight.logstash.ArgumentsLowPriorityImplicits.arrayToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits$.html#arrayToArguments[T]:com.tersesystems.blindsight.api.ToArguments[(String,Seq[T])]", "kind" : "implicit def"}, {"label" : "jsonToArguments", "tail" : "(arg0: ToJsonNode[T]): ToArguments[(String, T)]", "member" : "com.tersesystems.blindsight.logstash.ArgumentsLowPriorityImplicits.jsonToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits$.html#jsonToArguments[T](implicitevidence$2:com.tersesystems.blindsight.logstash.ToJsonNode[T]):com.tersesystems.blindsight.api.ToArguments[(String,T)]", "kind" : "implicit def"}, {"label" : "numericToArguments", "tail" : "(arg0: Numeric[T]): ToArguments[(String, T)]", "member" : "com.tersesystems.blindsight.logstash.ArgumentsLowPriorityImplicits.numericToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits$.html#numericToArguments[T](implicitevidence$1:Numeric[T]):com.tersesystems.blindsight.api.ToArguments[(String,T)]", "kind" : "implicit def"}, {"label" : "kvBooleanToArguments", "tail" : ": ToArguments[(String, Boolean)]", "member" : "com.tersesystems.blindsight.logstash.ArgumentsLowPriorityImplicits.kvBooleanToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits$.html#kvBooleanToArguments:com.tersesystems.blindsight.api.ToArguments[(String,Boolean)]", "kind" : "implicit val"}, {"label" : "kvStringToArguments", "tail" : ": ToArguments[(String, String)]", "member" : "com.tersesystems.blindsight.logstash.ArgumentsLowPriorityImplicits.kvStringToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits$.html#kvStringToArguments:com.tersesystems.blindsight.api.ToArguments[(String,String)]", "kind" : "implicit val"}, {"label" : "argToArguments", "tail" : ": ToArguments[StructuredArgument]", "member" : "com.tersesystems.blindsight.logstash.ArgumentsLowPriorityImplicits.argToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits$.html#argToArguments:com.tersesystems.blindsight.api.ToArguments[net.logstash.logback.argument.StructuredArgument]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits.html", "kind" : "trait", "members_trait" : [{"label" : "argsToArguments", "tail" : ": ToArguments[Args]", "member" : "com.tersesystems.blindsight.logstash.SourceCodeToArgumentsImplicits.argsToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits.html#argsToArguments:com.tersesystems.blindsight.api.ToArguments[sourcecode.Args]", "kind" : "implicit val"}, {"label" : "enclosingToArguments", "tail" : ": ToArguments[Enclosing]", "member" : "com.tersesystems.blindsight.logstash.SourceCodeToArgumentsImplicits.enclosingToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits.html#enclosingToArguments:com.tersesystems.blindsight.api.ToArguments[sourcecode.Enclosing]", "kind" : "implicit val"}, {"label" : "lineToToArguments", "tail" : ": ToArguments[Line]", "member" : "com.tersesystems.blindsight.logstash.SourceCodeToArgumentsImplicits.lineToToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits.html#lineToToArguments:com.tersesystems.blindsight.api.ToArguments[sourcecode.Line]", "kind" : "implicit val"}, {"label" : "fileToArguments", "tail" : ": ToArguments[File]", "member" : "com.tersesystems.blindsight.logstash.SourceCodeToArgumentsImplicits.fileToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits.html#fileToArguments:com.tersesystems.blindsight.api.ToArguments[sourcecode.File]", "kind" : "implicit val"}, {"label" : "stringMapToArguments", "tail" : "(): ToArguments[(String, Map[String, T])]", "member" : "com.tersesystems.blindsight.logstash.ArgumentsLowPriorityImplicits.stringMapToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits.html#stringMapToArguments[T]:com.tersesystems.blindsight.api.ToArguments[(String,Map[String,T])]", "kind" : "implicit def"}, {"label" : "mapToArguments", "tail" : "(): ToArguments[Map[String, T]]", "member" : "com.tersesystems.blindsight.logstash.ArgumentsLowPriorityImplicits.mapToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits.html#mapToArguments[T]:com.tersesystems.blindsight.api.ToArguments[Map[String,T]]", "kind" : "implicit def"}, {"label" : "arrayToArguments", "tail" : "(): ToArguments[(String, Seq[T])]", "member" : "com.tersesystems.blindsight.logstash.ArgumentsLowPriorityImplicits.arrayToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits.html#arrayToArguments[T]:com.tersesystems.blindsight.api.ToArguments[(String,Seq[T])]", "kind" : "implicit def"}, {"label" : "jsonToArguments", "tail" : "(arg0: ToJsonNode[T]): ToArguments[(String, T)]", "member" : "com.tersesystems.blindsight.logstash.ArgumentsLowPriorityImplicits.jsonToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits.html#jsonToArguments[T](implicitevidence$2:com.tersesystems.blindsight.logstash.ToJsonNode[T]):com.tersesystems.blindsight.api.ToArguments[(String,T)]", "kind" : "implicit def"}, {"label" : "numericToArguments", "tail" : "(arg0: Numeric[T]): ToArguments[(String, T)]", "member" : "com.tersesystems.blindsight.logstash.ArgumentsLowPriorityImplicits.numericToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits.html#numericToArguments[T](implicitevidence$1:Numeric[T]):com.tersesystems.blindsight.api.ToArguments[(String,T)]", "kind" : "implicit def"}, {"label" : "kvBooleanToArguments", "tail" : ": ToArguments[(String, Boolean)]", "member" : "com.tersesystems.blindsight.logstash.ArgumentsLowPriorityImplicits.kvBooleanToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits.html#kvBooleanToArguments:com.tersesystems.blindsight.api.ToArguments[(String,Boolean)]", "kind" : "implicit val"}, {"label" : "kvStringToArguments", "tail" : ": ToArguments[(String, String)]", "member" : "com.tersesystems.blindsight.logstash.ArgumentsLowPriorityImplicits.kvStringToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits.html#kvStringToArguments:com.tersesystems.blindsight.api.ToArguments[(String,String)]", "kind" : "implicit val"}, {"label" : "argToArguments", "tail" : ": ToArguments[StructuredArgument]", "member" : "com.tersesystems.blindsight.logstash.ArgumentsLowPriorityImplicits.argToArguments", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits.html#argToArguments:com.tersesystems.blindsight.api.ToArguments[net.logstash.logback.argument.StructuredArgument]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/logstash\/ToArgumentsImplicits.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "com.tersesystems.blindsight.logstash.ToJsonNode", "object" : "com\/tersesystems\/blindsight\/logstash\/ToJsonNode$.html", "members_object" : [{"label" : "nodeToJsonNode", "tail" : ": ToJsonNode[JsonNode]", "member" : "com.tersesystems.blindsight.logstash.ToJsonNode.nodeToJsonNode", "link" : "com\/tersesystems\/blindsight\/logstash\/ToJsonNode$.html#nodeToJsonNode:com.tersesystems.blindsight.logstash.ToJsonNode[com.fasterxml.jackson.databind.JsonNode]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/logstash\/ToJsonNode$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/logstash\/ToJsonNode$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/logstash\/ToJsonNode$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/logstash\/ToJsonNode$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/logstash\/ToJsonNode$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/logstash\/ToJsonNode$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/logstash\/ToJsonNode$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/logstash\/ToJsonNode$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/logstash\/ToJsonNode$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/logstash\/ToJsonNode$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/logstash\/ToJsonNode$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/logstash\/ToJsonNode$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/logstash\/ToJsonNode$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/logstash\/ToJsonNode$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/logstash\/ToJsonNode$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/logstash\/ToJsonNode$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/logstash\/ToJsonNode$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/logstash\/ToJsonNode$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/logstash\/ToJsonNode$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/tersesystems\/blindsight\/logstash\/ToJsonNode.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/logstash\/ToJsonNode.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/logstash\/ToJsonNode.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/logstash\/ToJsonNode.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/logstash\/ToJsonNode.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/logstash\/ToJsonNode.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/logstash\/ToJsonNode.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/logstash\/ToJsonNode.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/logstash\/ToJsonNode.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/logstash\/ToJsonNode.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/logstash\/ToJsonNode.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/logstash\/ToJsonNode.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/logstash\/ToJsonNode.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/logstash\/ToJsonNode.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/logstash\/ToJsonNode.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/logstash\/ToJsonNode.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/logstash\/ToJsonNode.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/logstash\/ToJsonNode.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/logstash\/ToJsonNode.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/logstash\/ToJsonNode.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "jsonNode", "tail" : "(instance: T): JsonNode", "member" : "com.tersesystems.blindsight.logstash.ToJsonNode.jsonNode", "link" : "com\/tersesystems\/blindsight\/logstash\/ToJsonNode.html#jsonNode(instance:T):com.fasterxml.jackson.databind.JsonNode", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "com.tersesystems.blindsight.logstash.ToMarkersImplicits", "object" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits$.html", "members_object" : [{"label" : "argsToMarkers", "tail" : ": ToMarkers[Args]", "member" : "com.tersesystems.blindsight.logstash.SourceCodeToMarkersImplicits.argsToMarkers", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits$.html#argsToMarkers:com.tersesystems.blindsight.api.ToMarkers[sourcecode.Args]", "kind" : "implicit val"}, {"label" : "enclosingToMarkers", "tail" : ": ToMarkers[Enclosing]", "member" : "com.tersesystems.blindsight.logstash.SourceCodeToMarkersImplicits.enclosingToMarkers", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits$.html#enclosingToMarkers:com.tersesystems.blindsight.api.ToMarkers[sourcecode.Enclosing]", "kind" : "implicit val"}, {"label" : "lineToMarkers", "tail" : ": ToMarkers[Line]", "member" : "com.tersesystems.blindsight.logstash.SourceCodeToMarkersImplicits.lineToMarkers", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits$.html#lineToMarkers:com.tersesystems.blindsight.api.ToMarkers[sourcecode.Line]", "kind" : "implicit val"}, {"label" : "fileToMarkers", "tail" : ": ToMarkers[File]", "member" : "com.tersesystems.blindsight.logstash.SourceCodeToMarkersImplicits.fileToMarkers", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits$.html#fileToMarkers:com.tersesystems.blindsight.api.ToMarkers[sourcecode.File]", "kind" : "implicit val"}, {"label" : "stringMapToMarkers", "tail" : "(): ToMarkers[(String, Map[String, T])]", "member" : "com.tersesystems.blindsight.logstash.CollectionToMarkersImplicits.stringMapToMarkers", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits$.html#stringMapToMarkers[T]:com.tersesystems.blindsight.api.ToMarkers[(String,Map[String,T])]", "kind" : "implicit def"}, {"label" : "mapToMarkers", "tail" : "(): ToMarkers[Map[String, T]]", "member" : "com.tersesystems.blindsight.logstash.CollectionToMarkersImplicits.mapToMarkers", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits$.html#mapToMarkers[T]:com.tersesystems.blindsight.api.ToMarkers[Map[String,T]]", "kind" : "implicit def"}, {"label" : "arrayToMarkers", "tail" : "(): ToMarkers[(String, Seq[T])]", "member" : "com.tersesystems.blindsight.logstash.CollectionToMarkersImplicits.arrayToMarkers", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits$.html#arrayToMarkers[T]:com.tersesystems.blindsight.api.ToMarkers[(String,Seq[T])]", "kind" : "implicit def"}, {"label" : "jsonToMarkers", "tail" : "(arg0: ToJsonNode[T]): ToMarkers[(String, T)]", "member" : "com.tersesystems.blindsight.logstash.CollectionToMarkersImplicits.jsonToMarkers", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits$.html#jsonToMarkers[T](implicitevidence$2:com.tersesystems.blindsight.logstash.ToJsonNode[T]):com.tersesystems.blindsight.api.ToMarkers[(String,T)]", "kind" : "implicit def"}, {"label" : "tupleNumericToMarkers", "tail" : "(arg0: Numeric[T]): ToMarkers[(String, T)]", "member" : "com.tersesystems.blindsight.logstash.CollectionToMarkersImplicits.tupleNumericToMarkers", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits$.html#tupleNumericToMarkers[T](implicitevidence$1:Numeric[T]):com.tersesystems.blindsight.api.ToMarkers[(String,T)]", "kind" : "implicit def"}, {"label" : "tupleBooleanToMarkers", "tail" : ": ToMarkers[(String, Boolean)]", "member" : "com.tersesystems.blindsight.logstash.CollectionToMarkersImplicits.tupleBooleanToMarkers", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits$.html#tupleBooleanToMarkers:com.tersesystems.blindsight.api.ToMarkers[(String,Boolean)]", "kind" : "implicit val"}, {"label" : "tupleStringToMarkers", "tail" : ": ToMarkers[(String, String)]", "member" : "com.tersesystems.blindsight.logstash.CollectionToMarkersImplicits.tupleStringToMarkers", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits$.html#tupleStringToMarkers:com.tersesystems.blindsight.api.ToMarkers[(String,String)]", "kind" : "implicit val"}, {"label" : "logstashMarkerToMarkers", "tail" : ": ToMarkers[LogstashMarker]", "member" : "com.tersesystems.blindsight.logstash.LogstashMarkersImplicits.logstashMarkerToMarkers", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits$.html#logstashMarkerToMarkers:com.tersesystems.blindsight.api.ToMarkers[net.logstash.logback.marker.LogstashMarker]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits.html", "kind" : "trait", "members_trait" : [{"label" : "argsToMarkers", "tail" : ": ToMarkers[Args]", "member" : "com.tersesystems.blindsight.logstash.SourceCodeToMarkersImplicits.argsToMarkers", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits.html#argsToMarkers:com.tersesystems.blindsight.api.ToMarkers[sourcecode.Args]", "kind" : "implicit val"}, {"label" : "enclosingToMarkers", "tail" : ": ToMarkers[Enclosing]", "member" : "com.tersesystems.blindsight.logstash.SourceCodeToMarkersImplicits.enclosingToMarkers", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits.html#enclosingToMarkers:com.tersesystems.blindsight.api.ToMarkers[sourcecode.Enclosing]", "kind" : "implicit val"}, {"label" : "lineToMarkers", "tail" : ": ToMarkers[Line]", "member" : "com.tersesystems.blindsight.logstash.SourceCodeToMarkersImplicits.lineToMarkers", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits.html#lineToMarkers:com.tersesystems.blindsight.api.ToMarkers[sourcecode.Line]", "kind" : "implicit val"}, {"label" : "fileToMarkers", "tail" : ": ToMarkers[File]", "member" : "com.tersesystems.blindsight.logstash.SourceCodeToMarkersImplicits.fileToMarkers", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits.html#fileToMarkers:com.tersesystems.blindsight.api.ToMarkers[sourcecode.File]", "kind" : "implicit val"}, {"label" : "stringMapToMarkers", "tail" : "(): ToMarkers[(String, Map[String, T])]", "member" : "com.tersesystems.blindsight.logstash.CollectionToMarkersImplicits.stringMapToMarkers", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits.html#stringMapToMarkers[T]:com.tersesystems.blindsight.api.ToMarkers[(String,Map[String,T])]", "kind" : "implicit def"}, {"label" : "mapToMarkers", "tail" : "(): ToMarkers[Map[String, T]]", "member" : "com.tersesystems.blindsight.logstash.CollectionToMarkersImplicits.mapToMarkers", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits.html#mapToMarkers[T]:com.tersesystems.blindsight.api.ToMarkers[Map[String,T]]", "kind" : "implicit def"}, {"label" : "arrayToMarkers", "tail" : "(): ToMarkers[(String, Seq[T])]", "member" : "com.tersesystems.blindsight.logstash.CollectionToMarkersImplicits.arrayToMarkers", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits.html#arrayToMarkers[T]:com.tersesystems.blindsight.api.ToMarkers[(String,Seq[T])]", "kind" : "implicit def"}, {"label" : "jsonToMarkers", "tail" : "(arg0: ToJsonNode[T]): ToMarkers[(String, T)]", "member" : "com.tersesystems.blindsight.logstash.CollectionToMarkersImplicits.jsonToMarkers", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits.html#jsonToMarkers[T](implicitevidence$2:com.tersesystems.blindsight.logstash.ToJsonNode[T]):com.tersesystems.blindsight.api.ToMarkers[(String,T)]", "kind" : "implicit def"}, {"label" : "tupleNumericToMarkers", "tail" : "(arg0: Numeric[T]): ToMarkers[(String, T)]", "member" : "com.tersesystems.blindsight.logstash.CollectionToMarkersImplicits.tupleNumericToMarkers", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits.html#tupleNumericToMarkers[T](implicitevidence$1:Numeric[T]):com.tersesystems.blindsight.api.ToMarkers[(String,T)]", "kind" : "implicit def"}, {"label" : "tupleBooleanToMarkers", "tail" : ": ToMarkers[(String, Boolean)]", "member" : "com.tersesystems.blindsight.logstash.CollectionToMarkersImplicits.tupleBooleanToMarkers", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits.html#tupleBooleanToMarkers:com.tersesystems.blindsight.api.ToMarkers[(String,Boolean)]", "kind" : "implicit val"}, {"label" : "tupleStringToMarkers", "tail" : ": ToMarkers[(String, String)]", "member" : "com.tersesystems.blindsight.logstash.CollectionToMarkersImplicits.tupleStringToMarkers", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits.html#tupleStringToMarkers:com.tersesystems.blindsight.api.ToMarkers[(String,String)]", "kind" : "implicit val"}, {"label" : "logstashMarkerToMarkers", "tail" : ": ToMarkers[LogstashMarker]", "member" : "com.tersesystems.blindsight.logstash.LogstashMarkersImplicits.logstashMarkerToMarkers", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits.html#logstashMarkerToMarkers:com.tersesystems.blindsight.api.ToMarkers[net.logstash.logback.marker.LogstashMarker]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/logstash\/ToMarkersImplicits.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}], "com.tersesystems.blindsight.flow" : [{"name" : "com.tersesystems.blindsight.flow.ExtendedFlowLogger", "trait" : "com\/tersesystems\/blindsight\/flow\/ExtendedFlowLogger.html", "kind" : "trait", "members_trait" : [{"label" : "Predicate", "tail" : "", "member" : "com.tersesystems.blindsight.flow.FlowLogger.Predicate", "link" : "com\/tersesystems\/blindsight\/flow\/ExtendedFlowLogger.html#Predicate=com.tersesystems.blindsight.slf4j.SLF4JPredicate", "kind" : "type"}, {"label" : "Method", "tail" : "", "member" : "com.tersesystems.blindsight.flow.FlowLogger.Method", "link" : "com\/tersesystems\/blindsight\/flow\/ExtendedFlowLogger.html#Method=com.tersesystems.blindsight.flow.FlowMethod", "kind" : "type"}, {"label" : "Self", "tail" : "", "member" : "com.tersesystems.blindsight.flow.FlowLogger.Self", "link" : "com\/tersesystems\/blindsight\/flow\/ExtendedFlowLogger.html#Self=com.tersesystems.blindsight.flow.FlowLogger", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/flow\/ExtendedFlowLogger.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/flow\/ExtendedFlowLogger.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/flow\/ExtendedFlowLogger.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/flow\/ExtendedFlowLogger.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/flow\/ExtendedFlowLogger.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/flow\/ExtendedFlowLogger.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/flow\/ExtendedFlowLogger.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/flow\/ExtendedFlowLogger.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/flow\/ExtendedFlowLogger.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/flow\/ExtendedFlowLogger.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/flow\/ExtendedFlowLogger.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/flow\/ExtendedFlowLogger.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/flow\/ExtendedFlowLogger.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/flow\/ExtendedFlowLogger.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/flow\/ExtendedFlowLogger.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/flow\/ExtendedFlowLogger.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/flow\/ExtendedFlowLogger.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/flow\/ExtendedFlowLogger.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/flow\/ExtendedFlowLogger.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "sourceInfoMarker", "tail" : "(level: Level, line: Line, file: File, enclosing: Enclosing): Markers", "member" : "com.tersesystems.blindsight.api.mixins.SourceInfoMixin.sourceInfoMarker", "link" : "com\/tersesystems\/blindsight\/flow\/ExtendedFlowLogger.html#sourceInfoMarker(level:org.slf4j.event.Level,line:sourcecode.Line,file:sourcecode.File,enclosing:sourcecode.Enclosing):com.tersesystems.blindsight.api.Markers", "kind" : "abstract def"}, {"label" : "underlying", "tail" : "(): org.slf4j.Logger", "member" : "com.tersesystems.blindsight.api.mixins.UnderlyingMixin.underlying", "link" : "com\/tersesystems\/blindsight\/flow\/ExtendedFlowLogger.html#underlying:org.slf4j.Logger", "kind" : "abstract def"}, {"label" : "parameterList", "tail" : "(level: Level): ParameterList", "member" : "com.tersesystems.blindsight.api.mixins.ParameterListMixin.parameterList", "link" : "com\/tersesystems\/blindsight\/flow\/ExtendedFlowLogger.html#parameterList(level:org.slf4j.event.Level):com.tersesystems.blindsight.api.ParameterList", "kind" : "abstract def"}, {"label" : "predicate", "tail" : "(level: Level): SLF4JPredicate", "member" : "com.tersesystems.blindsight.api.mixins.PredicateMixin.predicate", "link" : "com\/tersesystems\/blindsight\/flow\/ExtendedFlowLogger.html#predicate(level:org.slf4j.event.Level):Predicate", "kind" : "abstract def"}, {"label" : "markers", "tail" : "(): Markers", "member" : "com.tersesystems.blindsight.api.mixins.MarkerMixin.markers", "link" : "com\/tersesystems\/blindsight\/flow\/ExtendedFlowLogger.html#markers:com.tersesystems.blindsight.api.Markers", "kind" : "abstract def"}, {"label" : "withMarker", "tail" : "(instance: T)(arg0: ToMarkers[T]): Self", "member" : "com.tersesystems.blindsight.api.mixins.MarkerMixin.withMarker", "link" : "com\/tersesystems\/blindsight\/flow\/ExtendedFlowLogger.html#withMarker[T](instance:T)(implicitevidence$1:com.tersesystems.blindsight.api.ToMarkers[T]):MarkerMixin.this.Self", "kind" : "abstract def"}, {"label" : "error", "tail" : "(): Method", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Error.error", "link" : "com\/tersesystems\/blindsight\/flow\/ExtendedFlowLogger.html#error:Error.this.Method", "kind" : "abstract def"}, {"label" : "isErrorEnabled", "tail" : "(): Predicate", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Error.isErrorEnabled", "link" : "com\/tersesystems\/blindsight\/flow\/ExtendedFlowLogger.html#isErrorEnabled:Error.this.Predicate", "kind" : "abstract def"}, {"label" : "warn", "tail" : "(): Method", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Warn.warn", "link" : "com\/tersesystems\/blindsight\/flow\/ExtendedFlowLogger.html#warn:Warn.this.Method", "kind" : "abstract def"}, {"label" : "isWarnEnabled", "tail" : "(): Predicate", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Warn.isWarnEnabled", "link" : "com\/tersesystems\/blindsight\/flow\/ExtendedFlowLogger.html#isWarnEnabled:Warn.this.Predicate", "kind" : "abstract def"}, {"label" : "info", "tail" : "(): Method", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Info.info", "link" : "com\/tersesystems\/blindsight\/flow\/ExtendedFlowLogger.html#info:Info.this.Method", "kind" : "abstract def"}, {"label" : "isInfoEnabled", "tail" : "(): Predicate", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Info.isInfoEnabled", "link" : "com\/tersesystems\/blindsight\/flow\/ExtendedFlowLogger.html#isInfoEnabled:Info.this.Predicate", "kind" : "abstract def"}, {"label" : "debug", "tail" : "(): Method", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Debug.debug", "link" : "com\/tersesystems\/blindsight\/flow\/ExtendedFlowLogger.html#debug:Debug.this.Method", "kind" : "abstract def"}, {"label" : "isDebugEnabled", "tail" : "(): Predicate", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Debug.isDebugEnabled", "link" : "com\/tersesystems\/blindsight\/flow\/ExtendedFlowLogger.html#isDebugEnabled:Debug.this.Predicate", "kind" : "abstract def"}, {"label" : "trace", "tail" : "(): Method", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Trace.trace", "link" : "com\/tersesystems\/blindsight\/flow\/ExtendedFlowLogger.html#trace:Trace.this.Method", "kind" : "abstract def"}, {"label" : "isTraceEnabled", "tail" : "(): Predicate", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Trace.isTraceEnabled", "link" : "com\/tersesystems\/blindsight\/flow\/ExtendedFlowLogger.html#isTraceEnabled:Trace.this.Predicate", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "com.tersesystems.blindsight.flow.FlowBehavior", "object" : "com\/tersesystems\/blindsight\/flow\/FlowBehavior$.html", "members_object" : [{"label" : "Source", "tail" : "", "member" : "com.tersesystems.blindsight.flow.FlowBehavior.Source", "link" : "com\/tersesystems\/blindsight\/flow\/FlowBehavior$.html#SourceextendsProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/flow\/FlowBehavior$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/flow\/FlowBehavior$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/flow\/FlowBehavior$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/flow\/FlowBehavior$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/flow\/FlowBehavior$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/flow\/FlowBehavior$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/flow\/FlowBehavior$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/flow\/FlowBehavior$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/flow\/FlowBehavior$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/flow\/FlowBehavior$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/flow\/FlowBehavior$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/flow\/FlowBehavior$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/flow\/FlowBehavior$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/flow\/FlowBehavior$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/flow\/FlowBehavior$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/flow\/FlowBehavior$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/flow\/FlowBehavior$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/flow\/FlowBehavior$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/flow\/FlowBehavior$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/tersesystems\/blindsight\/flow\/FlowBehavior.html", "kind" : "trait", "members_trait" : [{"label" : "throwingStatement", "tail" : "(exc: Throwable, source: Source): Option[(Level, Statement)]", "member" : "com.tersesystems.blindsight.flow.FlowBehavior.throwingStatement", "link" : "com\/tersesystems\/blindsight\/flow\/FlowBehavior.html#throwingStatement(exc:Throwable,source:com.tersesystems.blindsight.flow.FlowBehavior.Source):Option[(org.slf4j.event.Level,com.tersesystems.blindsight.api.Statement)]", "kind" : "def"}, {"label" : "exitStatement", "tail" : "(resultValue: B, source: Source): Option[Statement]", "member" : "com.tersesystems.blindsight.flow.FlowBehavior.exitStatement", "link" : "com\/tersesystems\/blindsight\/flow\/FlowBehavior.html#exitStatement(resultValue:B,source:com.tersesystems.blindsight.flow.FlowBehavior.Source):Option[com.tersesystems.blindsight.api.Statement]", "kind" : "def"}, {"label" : "exitMarkers", "tail" : "(source: Source): Markers", "member" : "com.tersesystems.blindsight.flow.FlowBehavior.exitMarkers", "link" : "com\/tersesystems\/blindsight\/flow\/FlowBehavior.html#exitMarkers(source:com.tersesystems.blindsight.flow.FlowBehavior.Source):com.tersesystems.blindsight.api.Markers", "kind" : "def"}, {"label" : "entryStatement", "tail" : "(source: Source): Option[Statement]", "member" : "com.tersesystems.blindsight.flow.FlowBehavior.entryStatement", "link" : "com\/tersesystems\/blindsight\/flow\/FlowBehavior.html#entryStatement(source:com.tersesystems.blindsight.flow.FlowBehavior.Source):Option[com.tersesystems.blindsight.api.Statement]", "kind" : "def"}, {"label" : "entryMarkers", "tail" : "(source: Source): Markers", "member" : "com.tersesystems.blindsight.flow.FlowBehavior.entryMarkers", "link" : "com\/tersesystems\/blindsight\/flow\/FlowBehavior.html#entryMarkers(source:com.tersesystems.blindsight.flow.FlowBehavior.Source):com.tersesystems.blindsight.api.Markers", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/flow\/FlowBehavior.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/flow\/FlowBehavior.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/flow\/FlowBehavior.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/flow\/FlowBehavior.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/flow\/FlowBehavior.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/flow\/FlowBehavior.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/flow\/FlowBehavior.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/flow\/FlowBehavior.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/flow\/FlowBehavior.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/flow\/FlowBehavior.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/flow\/FlowBehavior.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/flow\/FlowBehavior.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/flow\/FlowBehavior.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/flow\/FlowBehavior.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/flow\/FlowBehavior.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/flow\/FlowBehavior.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/flow\/FlowBehavior.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/flow\/FlowBehavior.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/flow\/FlowBehavior.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "A type class that is used to provide a behavior to a logging flow."}, {"name" : "com.tersesystems.blindsight.flow.FlowLogger", "object" : "com\/tersesystems\/blindsight\/flow\/FlowLogger$.html", "members_object" : [{"label" : "Impl", "tail" : "", "member" : "com.tersesystems.blindsight.flow.FlowLogger.Impl", "link" : "com\/tersesystems\/blindsight\/flow\/FlowLogger$.html#ImplextendsExtendedFlowLogger", "kind" : "class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/flow\/FlowLogger$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/flow\/FlowLogger$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/flow\/FlowLogger$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/flow\/FlowLogger$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/flow\/FlowLogger$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/flow\/FlowLogger$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/flow\/FlowLogger$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/flow\/FlowLogger$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/flow\/FlowLogger$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/flow\/FlowLogger$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/flow\/FlowLogger$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/flow\/FlowLogger$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/flow\/FlowLogger$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/flow\/FlowLogger$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/flow\/FlowLogger$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/flow\/FlowLogger$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/flow\/FlowLogger$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/flow\/FlowLogger$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/flow\/FlowLogger$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/tersesystems\/blindsight\/flow\/FlowLogger.html", "kind" : "trait", "members_trait" : [{"label" : "Predicate", "tail" : "", "member" : "com.tersesystems.blindsight.flow.FlowLogger.Predicate", "link" : "com\/tersesystems\/blindsight\/flow\/FlowLogger.html#Predicate=com.tersesystems.blindsight.slf4j.SLF4JPredicate", "kind" : "type"}, {"label" : "Method", "tail" : "", "member" : "com.tersesystems.blindsight.flow.FlowLogger.Method", "link" : "com\/tersesystems\/blindsight\/flow\/FlowLogger.html#Method=com.tersesystems.blindsight.flow.FlowMethod", "kind" : "type"}, {"label" : "Self", "tail" : "", "member" : "com.tersesystems.blindsight.flow.FlowLogger.Self", "link" : "com\/tersesystems\/blindsight\/flow\/FlowLogger.html#Self=com.tersesystems.blindsight.flow.FlowLogger", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/flow\/FlowLogger.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/flow\/FlowLogger.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/flow\/FlowLogger.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/flow\/FlowLogger.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/flow\/FlowLogger.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/flow\/FlowLogger.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/flow\/FlowLogger.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/flow\/FlowLogger.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/flow\/FlowLogger.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/flow\/FlowLogger.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/flow\/FlowLogger.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/flow\/FlowLogger.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/flow\/FlowLogger.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/flow\/FlowLogger.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/flow\/FlowLogger.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/flow\/FlowLogger.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/flow\/FlowLogger.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/flow\/FlowLogger.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/flow\/FlowLogger.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "markers", "tail" : "(): Markers", "member" : "com.tersesystems.blindsight.api.mixins.MarkerMixin.markers", "link" : "com\/tersesystems\/blindsight\/flow\/FlowLogger.html#markers:com.tersesystems.blindsight.api.Markers", "kind" : "abstract def"}, {"label" : "withMarker", "tail" : "(instance: T)(arg0: ToMarkers[T]): Self", "member" : "com.tersesystems.blindsight.api.mixins.MarkerMixin.withMarker", "link" : "com\/tersesystems\/blindsight\/flow\/FlowLogger.html#withMarker[T](instance:T)(implicitevidence$1:com.tersesystems.blindsight.api.ToMarkers[T]):MarkerMixin.this.Self", "kind" : "abstract def"}, {"label" : "error", "tail" : "(): Method", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Error.error", "link" : "com\/tersesystems\/blindsight\/flow\/FlowLogger.html#error:Error.this.Method", "kind" : "abstract def"}, {"label" : "isErrorEnabled", "tail" : "(): Predicate", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Error.isErrorEnabled", "link" : "com\/tersesystems\/blindsight\/flow\/FlowLogger.html#isErrorEnabled:Error.this.Predicate", "kind" : "abstract def"}, {"label" : "warn", "tail" : "(): Method", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Warn.warn", "link" : "com\/tersesystems\/blindsight\/flow\/FlowLogger.html#warn:Warn.this.Method", "kind" : "abstract def"}, {"label" : "isWarnEnabled", "tail" : "(): Predicate", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Warn.isWarnEnabled", "link" : "com\/tersesystems\/blindsight\/flow\/FlowLogger.html#isWarnEnabled:Warn.this.Predicate", "kind" : "abstract def"}, {"label" : "info", "tail" : "(): Method", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Info.info", "link" : "com\/tersesystems\/blindsight\/flow\/FlowLogger.html#info:Info.this.Method", "kind" : "abstract def"}, {"label" : "isInfoEnabled", "tail" : "(): Predicate", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Info.isInfoEnabled", "link" : "com\/tersesystems\/blindsight\/flow\/FlowLogger.html#isInfoEnabled:Info.this.Predicate", "kind" : "abstract def"}, {"label" : "debug", "tail" : "(): Method", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Debug.debug", "link" : "com\/tersesystems\/blindsight\/flow\/FlowLogger.html#debug:Debug.this.Method", "kind" : "abstract def"}, {"label" : "isDebugEnabled", "tail" : "(): Predicate", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Debug.isDebugEnabled", "link" : "com\/tersesystems\/blindsight\/flow\/FlowLogger.html#isDebugEnabled:Debug.this.Predicate", "kind" : "abstract def"}, {"label" : "trace", "tail" : "(): Method", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Trace.trace", "link" : "com\/tersesystems\/blindsight\/flow\/FlowLogger.html#trace:Trace.this.Method", "kind" : "abstract def"}, {"label" : "isTraceEnabled", "tail" : "(): Predicate", "member" : "com.tersesystems.blindsight.slf4j.SLF4JLoggerAPI.Trace.isTraceEnabled", "link" : "com\/tersesystems\/blindsight\/flow\/FlowLogger.html#isTraceEnabled:Trace.this.Predicate", "kind" : "abstract def"}], "shortDescription" : "This trait implements a logger that is used for rendering entry\/exit logging wrappers."}, {"name" : "com.tersesystems.blindsight.flow.FlowMethod", "object" : "com\/tersesystems\/blindsight\/flow\/FlowMethod$.html", "members_object" : [{"label" : "Impl", "tail" : "", "member" : "com.tersesystems.blindsight.flow.FlowMethod.Impl", "link" : "com\/tersesystems\/blindsight\/flow\/FlowMethod$.html#ImplextendsFlowMethod", "kind" : "class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/flow\/FlowMethod$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/flow\/FlowMethod$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/flow\/FlowMethod$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/flow\/FlowMethod$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/flow\/FlowMethod$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/flow\/FlowMethod$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/flow\/FlowMethod$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/flow\/FlowMethod$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/flow\/FlowMethod$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/flow\/FlowMethod$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/flow\/FlowMethod$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/flow\/FlowMethod$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/flow\/FlowMethod$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/flow\/FlowMethod$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/flow\/FlowMethod$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/flow\/FlowMethod$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/flow\/FlowMethod$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/flow\/FlowMethod$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/flow\/FlowMethod$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/tersesystems\/blindsight\/flow\/FlowMethod.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/flow\/FlowMethod.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/flow\/FlowMethod.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/flow\/FlowMethod.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/flow\/FlowMethod.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/flow\/FlowMethod.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/flow\/FlowMethod.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/flow\/FlowMethod.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/flow\/FlowMethod.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/flow\/FlowMethod.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/flow\/FlowMethod.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/flow\/FlowMethod.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/flow\/FlowMethod.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/flow\/FlowMethod.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/flow\/FlowMethod.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/flow\/FlowMethod.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/flow\/FlowMethod.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/flow\/FlowMethod.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/flow\/FlowMethod.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/flow\/FlowMethod.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(block: => B)(arg0: ToArguments[B], line: Line, file: File, enclosing: Enclosing, sourceArgs: Args, mapping: FlowBehavior[B]): B", "member" : "com.tersesystems.blindsight.flow.FlowMethod.apply", "link" : "com\/tersesystems\/blindsight\/flow\/FlowMethod.html#apply[B](block:=>B)(implicitevidence$1:com.tersesystems.blindsight.api.ToArguments[B],implicitline:sourcecode.Line,implicitfile:sourcecode.File,implicitenclosing:sourcecode.Enclosing,implicitsourceArgs:sourcecode.Args,implicitmapping:com.tersesystems.blindsight.flow.FlowBehavior[B]):B", "kind" : "abstract def"}], "shortDescription" : "This trait wraps an execution block, and applies a FlowBehavior to it on entry, exit, and exception."}], "com.tersesystems.blindsight.api.mixins" : [{"name" : "com.tersesystems.blindsight.api.mixins.MarkerMixin", "trait" : "com\/tersesystems\/blindsight\/api\/mixins\/MarkerMixin.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/MarkerMixin.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/MarkerMixin.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/MarkerMixin.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/MarkerMixin.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/MarkerMixin.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/MarkerMixin.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/MarkerMixin.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/MarkerMixin.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/MarkerMixin.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/MarkerMixin.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/MarkerMixin.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/MarkerMixin.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/MarkerMixin.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/MarkerMixin.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/MarkerMixin.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/MarkerMixin.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/MarkerMixin.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/MarkerMixin.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/MarkerMixin.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "markers", "tail" : "(): Markers", "member" : "com.tersesystems.blindsight.api.mixins.MarkerMixin.markers", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/MarkerMixin.html#markers:com.tersesystems.blindsight.api.Markers", "kind" : "abstract def"}, {"label" : "withMarker", "tail" : "(instance: T)(arg0: ToMarkers[T]): Self", "member" : "com.tersesystems.blindsight.api.mixins.MarkerMixin.withMarker", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/MarkerMixin.html#withMarker[T](instance:T)(implicitevidence$1:com.tersesystems.blindsight.api.ToMarkers[T]):MarkerMixin.this.Self", "kind" : "abstract def"}, {"member" : "com.tersesystems.blindsight.api.mixins.MarkerMixin.Self", "error" : "unsupported entity"}], "shortDescription" : "A logger mixin that accumulates marker state."}, {"name" : "com.tersesystems.blindsight.api.mixins.OnConditionMixin", "trait" : "com\/tersesystems\/blindsight\/api\/mixins\/OnConditionMixin.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/OnConditionMixin.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/OnConditionMixin.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/OnConditionMixin.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/OnConditionMixin.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/OnConditionMixin.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/OnConditionMixin.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/OnConditionMixin.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/OnConditionMixin.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/OnConditionMixin.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/OnConditionMixin.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/OnConditionMixin.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/OnConditionMixin.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/OnConditionMixin.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/OnConditionMixin.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/OnConditionMixin.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/OnConditionMixin.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/OnConditionMixin.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/OnConditionMixin.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/OnConditionMixin.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "onCondition", "tail" : "(test: => Boolean): Self", "member" : "com.tersesystems.blindsight.api.mixins.OnConditionMixin.onCondition", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/OnConditionMixin.html#onCondition(test:=>Boolean):OnConditionMixin.this.Self", "kind" : "abstract def"}, {"member" : "com.tersesystems.blindsight.api.mixins.OnConditionMixin.Self", "error" : "unsupported entity"}], "shortDescription" : "A conditional logger mixin."}, {"name" : "com.tersesystems.blindsight.api.mixins.ParameterListMixin", "trait" : "com\/tersesystems\/blindsight\/api\/mixins\/ParameterListMixin.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/ParameterListMixin.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/ParameterListMixin.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/ParameterListMixin.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/ParameterListMixin.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/ParameterListMixin.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/ParameterListMixin.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/ParameterListMixin.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/ParameterListMixin.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/ParameterListMixin.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/ParameterListMixin.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/ParameterListMixin.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/ParameterListMixin.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/ParameterListMixin.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/ParameterListMixin.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/ParameterListMixin.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/ParameterListMixin.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/ParameterListMixin.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/ParameterListMixin.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/ParameterListMixin.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "parameterList", "tail" : "(level: Level): ParameterList", "member" : "com.tersesystems.blindsight.api.mixins.ParameterListMixin.parameterList", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/ParameterListMixin.html#parameterList(level:org.slf4j.event.Level):com.tersesystems.blindsight.api.ParameterList", "kind" : "abstract def"}], "shortDescription" : "An SLI mixin that returns parameter lists."}, {"name" : "com.tersesystems.blindsight.api.mixins.PredicateMixin", "trait" : "com\/tersesystems\/blindsight\/api\/mixins\/PredicateMixin.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/PredicateMixin.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/PredicateMixin.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/PredicateMixin.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/PredicateMixin.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/PredicateMixin.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/PredicateMixin.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/PredicateMixin.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/PredicateMixin.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/PredicateMixin.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/PredicateMixin.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/PredicateMixin.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/PredicateMixin.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/PredicateMixin.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/PredicateMixin.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/PredicateMixin.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/PredicateMixin.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/PredicateMixin.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/PredicateMixin.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/PredicateMixin.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "predicate", "tail" : "(level: Level): Predicate", "member" : "com.tersesystems.blindsight.api.mixins.PredicateMixin.predicate", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/PredicateMixin.html#predicate(level:org.slf4j.event.Level):Predicate", "kind" : "abstract def"}], "shortDescription" : "A mixin that gives the predicate instance for this level."}, {"name" : "com.tersesystems.blindsight.api.mixins.SemanticMarkerMixin", "trait" : "com\/tersesystems\/blindsight\/api\/mixins\/SemanticMarkerMixin.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/SemanticMarkerMixin.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/SemanticMarkerMixin.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/SemanticMarkerMixin.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/SemanticMarkerMixin.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/SemanticMarkerMixin.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/SemanticMarkerMixin.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/SemanticMarkerMixin.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/SemanticMarkerMixin.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/SemanticMarkerMixin.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/SemanticMarkerMixin.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/SemanticMarkerMixin.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/SemanticMarkerMixin.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/SemanticMarkerMixin.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/SemanticMarkerMixin.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/SemanticMarkerMixin.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/SemanticMarkerMixin.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/SemanticMarkerMixin.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/SemanticMarkerMixin.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/SemanticMarkerMixin.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "markers", "tail" : "(): Markers", "member" : "com.tersesystems.blindsight.api.mixins.SemanticMarkerMixin.markers", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/SemanticMarkerMixin.html#markers:com.tersesystems.blindsight.api.Markers", "kind" : "abstract def"}, {"label" : "withMarker", "tail" : "(instance: => T)(arg0: ToMarkers[T]): Self[StatementType]", "member" : "com.tersesystems.blindsight.api.mixins.SemanticMarkerMixin.withMarker", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/SemanticMarkerMixin.html#withMarker[T](instance:=>T)(implicitevidence$1:com.tersesystems.blindsight.api.ToMarkers[T]):SemanticMarkerMixin.this.Self[StatementType]", "kind" : "abstract def"}, {"member" : "com.tersesystems.blindsight.api.mixins.SemanticMarkerMixin.Self", "error" : "unsupported entity"}], "shortDescription" : "A marker mixin that returns a new instance of the logger with the marker always applied."}, {"name" : "com.tersesystems.blindsight.api.mixins.SourceInfoMixin", "trait" : "com\/tersesystems\/blindsight\/api\/mixins\/SourceInfoMixin.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/SourceInfoMixin.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/SourceInfoMixin.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/SourceInfoMixin.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/SourceInfoMixin.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/SourceInfoMixin.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/SourceInfoMixin.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/SourceInfoMixin.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/SourceInfoMixin.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/SourceInfoMixin.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/SourceInfoMixin.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/SourceInfoMixin.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/SourceInfoMixin.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/SourceInfoMixin.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/SourceInfoMixin.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/SourceInfoMixin.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/SourceInfoMixin.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/SourceInfoMixin.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/SourceInfoMixin.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/SourceInfoMixin.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "sourceInfoMarker", "tail" : "(level: Level, line: Line, file: File, enclosing: Enclosing): Markers", "member" : "com.tersesystems.blindsight.api.mixins.SourceInfoMixin.sourceInfoMarker", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/SourceInfoMixin.html#sourceInfoMarker(level:org.slf4j.event.Level,line:sourcecode.Line,file:sourcecode.File,enclosing:sourcecode.Enclosing):com.tersesystems.blindsight.api.Markers", "kind" : "abstract def"}], "shortDescription" : "A mixin that provides the marker information for source code data."}, {"name" : "com.tersesystems.blindsight.api.mixins.UnderlyingMixin", "trait" : "com\/tersesystems\/blindsight\/api\/mixins\/UnderlyingMixin.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/UnderlyingMixin.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/UnderlyingMixin.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/UnderlyingMixin.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/UnderlyingMixin.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/UnderlyingMixin.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/UnderlyingMixin.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/UnderlyingMixin.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/UnderlyingMixin.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/UnderlyingMixin.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/UnderlyingMixin.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/UnderlyingMixin.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/UnderlyingMixin.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/UnderlyingMixin.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/UnderlyingMixin.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/UnderlyingMixin.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/UnderlyingMixin.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/UnderlyingMixin.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/UnderlyingMixin.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/UnderlyingMixin.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "underlying", "tail" : "(): org.slf4j.Logger", "member" : "com.tersesystems.blindsight.api.mixins.UnderlyingMixin.underlying", "link" : "com\/tersesystems\/blindsight\/api\/mixins\/UnderlyingMixin.html#underlying:org.slf4j.Logger", "kind" : "abstract def"}], "shortDescription" : "A mixin that provides the underlying SLF4J loggern."}]};